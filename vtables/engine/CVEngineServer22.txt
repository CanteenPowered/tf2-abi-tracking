VTable for CVEngineServer22:
    [0] CVEngineServer22::IsMapValid(char const*)
    [1] CVEngineServer::IsDedicatedServer()
    [2] CVEngineServer::IsInEditMode()
    [3] CVEngineServer::PrecacheModel(char const*, bool)
    [4] CVEngineServer::PrecacheSentenceFile(char const*, bool)
    [5] CVEngineServer::PrecacheDecal(char const*, bool)
    [6] CVEngineServer::PrecacheGeneric(char const*, bool)
    [7] CVEngineServer::IsModelPrecached(char const*) const
    [8] CVEngineServer::IsDecalPrecached(char const*) const
    [9] CVEngineServer::IsGenericPrecached(char const*) const
    [10] CVEngineServer::GetClusterForOrigin(Vector const&)
    [11] CVEngineServer::GetPVSForCluster(int, int, unsigned char*)
    [12] CVEngineServer::CheckOriginInPVS(Vector const&, unsigned char const*, int)
    [13] CVEngineServer::CheckBoxInPVS(Vector const&, Vector const&, unsigned char const*, int)
    [14] CVEngineServer::GetPlayerUserId(edict_t const*)
    [15] CVEngineServer::GetPlayerNetworkIDString(edict_t const*)
    [16] CVEngineServer::GetEntityCount()
    [17] CVEngineServer::IndexOfEdict(edict_t const*)
    [18] CVEngineServer::PEntityOfEntIndex(int)
    [19] CVEngineServer::GetPlayerNetInfo(int)
    [20] CVEngineServer::CreateEdict(int)
    [21] CVEngineServer::RemoveEdict(edict_t*)
    [22] CVEngineServer::PvAllocEntPrivateData(long)
    [23] CVEngineServer::FreeEntPrivateData(void*)
    [24] CVEngineServer::SaveAllocMemory(unsigned int, unsigned int)
    [25] CVEngineServer::SaveFreeMemory(void*)
    [26] CVEngineServer::EmitAmbientSound(int, Vector const&, char const*, float, soundlevel_t, int, int, float)
    [27] CVEngineServer::FadeClientVolume(edict_t const*, float, float, float, float)
    [28] CVEngineServer::SentenceGroupPick(int, char*, int)
    [29] CVEngineServer::SentenceGroupPickSequential(int, char*, int, int, int)
    [30] CVEngineServer::SentenceIndexFromName(char const*)
    [31] CVEngineServer::SentenceNameFromIndex(int)
    [32] CVEngineServer::SentenceGroupIndexFromName(char const*)
    [33] CVEngineServer::SentenceGroupNameFromIndex(int)
    [34] CVEngineServer::SentenceLength(int)
    [35] CVEngineServer::ServerCommand(char const*)
    [36] CVEngineServer::ServerExecute()
    [37] CVEngineServer::ClientCommand(edict_t*, char const*, ...)
    [38] CVEngineServer::LightStyle(int, char const*)
    [39] CVEngineServer::StaticDecal(Vector const&, int, int, int, bool)
    [40] CVEngineServer::Message_DetermineMulticastRecipients(bool, Vector const&, CBitVec<255>&)
    [41] CVEngineServer::EntityMessageBegin(int, ServerClass*, bool)
    [42] CVEngineServer::UserMessageBegin(IRecipientFilter*, int)
    [43] CVEngineServer::MessageEnd()
    [44] CVEngineServer::ClientPrintf(edict_t*, char const*)
    [45] CVEngineServer::Con_NPrintf(int, char const*, ...)
    [46] CVEngineServer::Con_NXPrintf(con_nprint_s const*, char const*, ...)
    [47] CVEngineServer::SetView(edict_t const*, edict_t const*)
    [48] CVEngineServer::Time()
    [49] CVEngineServer::CrosshairAngle(edict_t const*, float, float)
    [50] CVEngineServer::GetGameDir(char*, int)
    [51] CVEngineServer::CompareFileTime(char const*, char const*, int*)
    [52] CVEngineServer::LockNetworkStringTables(bool)
    [53] CVEngineServer::CreateFakeClient(char const*)
    [54] CVEngineServer::GetClientConVarValue(int, char const*)
    [55] CVEngineServer::ParseFile(char const*, char*, int)
    [56] CVEngineServer::CopyFile(char const*, char const*)
    [57] CVEngineServer::ResetPVS(unsigned char*, int)
    [58] CVEngineServer::AddOriginToPVS(Vector const&)
    [59] CVEngineServer::SetAreaPortalState(int, int)
    [60] CVEngineServer::PlaybackTempEntity(IRecipientFilter&, float, void const*, SendTable const*, int)
    [61] CVEngineServer::CheckHeadnodeVisible(int, unsigned char const*, int)
    [62] CVEngineServer::CheckAreasConnected(int, int)
    [63] CVEngineServer::GetArea(Vector const&)
    [64] CVEngineServer::GetAreaBits(int, unsigned char*, int)
    [65] CVEngineServer::GetAreaPortalPlane(Vector const&, int, VPlane*)
    [66] CVEngineServer::LoadGameState(char const*, bool)
    [67] CVEngineServer::LoadAdjacentEnts(char const*, char const*)
    [68] CVEngineServer::ClearSaveDir()
    [69] CVEngineServer::GetMapEntitiesString()
    [70] CVEngineServer::TextMessageGet(char const*)
    [71] CVEngineServer::LogPrint(char const*)
    [72] CVEngineServer::BuildEntityClusterList(edict_t*, PVSInfo_t*)
    [73] CVEngineServer::SolidMoved(edict_t*, ICollideable*, Vector const*, bool)
    [74] CVEngineServer::TriggerMoved(edict_t*, bool)
    [75] CVEngineServer::CreateSpatialPartition(Vector const&, Vector const&)
    [76] CVEngineServer::DestroySpatialPartition(ISpatialPartition*)
    [77] CVEngineServer::DrawMapToScratchPad(IScratchPad3D*, unsigned long)
    [78] CVEngineServer::GetEntityTransmitBitsForClient(int)
    [79] CVEngineServer::IsPaused()
    [80] CVEngineServer::ForceExactFile(char const*)
    [81] CVEngineServer::ForceModelBounds(char const*, Vector const&, Vector const&)
    [82] CVEngineServer::ClearSaveDirAfterClientLoad()
    [83] CVEngineServer::SetFakeClientConVarValue(edict_t*, char const*, char const*)
    [84] CVEngineServer::ForceSimpleMaterial(char const*)
    [85] CVEngineServer::IsInCommentaryMode()
    [86] CVEngineServer::SetAreaPortalStates(int const*, int const*, int)
    [87] CVEngineServer::NotifyEdictFlagsChange(int)
    [88] CVEngineServer::GetPrevCheckTransmitInfo(edict_t*)
    [89] CVEngineServer::GetSharedEdictChangeInfo()
    [90] CVEngineServer::AllowImmediateEdictReuse()
    [91] CVEngineServer::GetChangeAccessor(edict_t const*)
    [92] CVEngineServer::GetMostRecentlyLoadedFileName()
    [93] CVEngineServer::GetSaveFileName()
    [94] CVEngineServer::MultiplayerEndGame()
    [95] CVEngineServer::ChangeTeam(char const*)
    [96] CVEngineServer::CleanUpEntityClusterList(PVSInfo_t*)
    [97] CVEngineServer::SetAchievementMgr(IAchievementMgr*)
    [98] CVEngineServer::GetAchievementMgr()
    [99] CVEngineServer::GetAppID()
    [100] CVEngineServer::IsLowViolence()
    [101] CVEngineServer::StartQueryCvarValue(edict_t*, char const*)
    [102] CVEngineServer::InsertServerCommand(char const*)
    [103] CVEngineServer::GetPlayerInfo(int, player_info_s*)
    [104] CVEngineServer::IsClientFullyAuthenticated(edict_t*)
    [105] CVEngineServer::SetDedicatedServerBenchmarkMode(bool)
    [106] CVEngineServer::SetGamestatsData(CGamestatsData*)
    [107] CVEngineServer::GetGamestatsData()
    [108] CVEngineServer::GetClientSteamID(edict_t*)
    [109] CVEngineServer::GetGameServerSteamID()
    [110] CVEngineServer::ClientCommandKeyValues(edict_t*, KeyValues*)
    [111] CVEngineServer::GetClientSteamIDByPlayerIndex(int)
    [112] CVEngineServer::GetClusterCount()
    [113] CVEngineServer::GetAllClusterBounds(bbox_t*, int)
    [114] CVEngineServer::CreateFakeClientEx(char const*, bool)
    [115] CVEngineServer::GetServerVersion() const
    [116] CVEngineServer::GetServerTime() const
    [117] CVEngineServer::GetIServer()
    [118] CVEngineServer::IsPlayerNameLocked(edict_t const*)
    [119] CVEngineServer::CanPlayerChangeName(edict_t const*)
    [120] CVEngineServer::FindMap(char*, int)
    [121] CVEngineServer::SetPausedForced(bool, float)
    [122] CVEngineServer::GetReplay()
