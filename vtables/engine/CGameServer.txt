VTable for CGameServer:
    [0] CGameServer::~CGameServer()
    [1] CBaseServer::ProcessConnectionlessPacket(netpacket_s*)
    [2] CBaseServer::GetNumClients() const
    [3] CBaseServer::GetNumProxies() const
    [4] CBaseServer::GetNumFakeClients() const
    [5] CBaseServer::GetMaxClients() const
    [6] CBaseServer::GetClient(int)
    [7] CBaseServer::GetClientCount() const
    [8] CBaseServer::GetPublicAddress() const
    [9] CBaseServer::IsUsingFakeIP() const
    [10] CBaseServer::GetLocalUDPPort() const
    [11] CBaseServer::GetTime() const
    [12] CBaseServer::GetTick() const
    [13] CBaseServer::GetTickInterval() const
    [14] CBaseServer::GetName() const
    [15] CBaseServer::GetMapName() const
    [16] CBaseServer::GetSpawnCount() const
    [17] CBaseServer::GetNumClasses() const
    [18] CBaseServer::GetClassBits() const
    [19] CBaseServer::GetNetStats(float&, float&)
    [20] CBaseServer::GetNumPlayers()
    [21] CBaseServer::GetPlayerInfo(int, player_info_s*)
    [22] CBaseServer::IsActive() const
    [23] CBaseServer::IsLoading() const
    [24] CBaseServer::IsDedicated() const
    [25] CBaseServer::IsPaused() const
    [26] CBaseServer::IsMultiplayer() const
    [27] CGameServer::IsPausable() const
    [28] CBaseServer::IsHLTV() const
    [29] CBaseServer::IsReplay() const
    [30] CBaseServer::GetPassword() const
    [31] CBaseServer::SetPaused(bool)
    [32] CBaseServer::SetPassword(char const*)
    [33] CBaseServer::BroadcastMessage(INetMessage&, bool, bool)
    [34] CBaseServer::BroadcastMessage(INetMessage&, IRecipientFilter&)
    [35] CBaseServer::DisconnectClient(IClient*, char const*)
    [36] CBaseServer::GetCPUUsage()
    [37] CBaseServer::BroadcastPrintf(char const*, ...)
    [38] CGameServer::SetMaxClients(int)
    [39] CBaseServer::WriteDeltaEntities(CBaseClient*, CClientFrame*, CClientFrame*, bf_write&)
    [40] CBaseServer::WriteTempEntities(CBaseClient*, CFrameSnapshot*, CFrameSnapshot*, bf_write&, int)
    [41] CGameServer::Init(bool)
    [42] CGameServer::Clear()
    [43] CGameServer::Shutdown()
    [44] CBaseServer::CreateFakeClient(char const*)
    [45] CGameServer::RemoveClientFromGame(CBaseClient*)
    [46] CGameServer::SendClientMessages(bool)
    [47] CBaseServer::FillServerInfo(SVC_ServerInfo&)
    [48] CBaseServer::UserInfoChanged(int)
    [49] CBaseServer::RejectConnection(netadr_s const&, int, char const*)
    [50] CBaseServer::CheckIPRestrictions(netadr_s const&, int)
    [51] CBaseServer::ConnectClient(netadr_s&, int, int, int, int, char const*, char const*, char const*, int)
    [52] CBaseServer::GetFreeClient(netadr_s&)
    [53] CGameServer::CreateNewClient(int)
    [54] CGameServer::FinishCertificateCheck(netadr_s&, int, char const*, int)
    [55] CBaseServer::GetChallengeNr(netadr_s&)
    [56] CBaseServer::GetChallengeType(netadr_s&)
    [57] CBaseServer::CheckProtocol(netadr_s&, int, int)
    [58] CBaseServer::CheckChallengeNr(netadr_s&, int)
    [59] CBaseServer::CheckChallengeType(CBaseClient*, int, netadr_s&, int, char const*, int, int)
    [60] CBaseServer::CheckPassword(netadr_s&, char const*, char const*)
    [61] CBaseServer::ReplyChallenge(netadr_s&, int)
    [62] CBaseServer::ReplyServerChallenge(netadr_s&)
    [63] CBaseServer::CalculateCPUUsage()
    [64] CBaseServer::ShouldUpdateMasterServer()
    [65] CGameServer::UpdateMasterServerPlayers()
