VTable for CThreadPool:
    [0] CRefCounted1<IThreadPool, CRefCountServiceBase<true, CRefMT>>::Release()
    [1] CThreadPool::~CThreadPool()
    [2] CThreadPool::~CThreadPool()
    [3] CThreadPool::Start(ThreadPoolStartParams_t const&)
    [4] CThreadPool::Stop(int)
    [5] CThreadPool::GetJobCount()
    [6] CThreadPool::NumThreads()
    [7] CThreadPool::NumIdleThreads()
    [8] CThreadPool::SuspendExecution()
    [9] CThreadPool::ResumeExecution()
    [10] CThreadPool::YieldWait(CThreadEvent**, int, bool, unsigned int)
    [11] CThreadPool::YieldWait(CJob**, int, bool, unsigned int)
    [12] CThreadPool::Yield(unsigned int)
    [13] CThreadPool::AddJob(CJob*)
    [14] CThreadPool::ExecuteHighPriorityFunctor(CFunctor*)
    [15] IThreadPool::AddFunctor(CFunctor*, CJob**, char const*, unsigned int)
    [16] CThreadPool::ChangePriority(CJob*, JobPriority_t)
    [17] CThreadPool::ExecuteToPriority(JobPriority_t, bool (*)(CJob*))
    [18] CThreadPool::AbortAll()
    [19] CThreadPool::Reserved1()
    [20] CThreadPool::AddFunctorInternal(CFunctor*, CJob**, char const*, unsigned int)
    [21] CThreadPool::GetDummyJob()
    [22] CThreadPool::Distribute(bool, int*)
    [23] CThreadPool::Start(ThreadPoolStartParams_t const&, char const*)
