VTable for CHeadlessHatmanTerrify:
    CHeadlessHatmanTerrify::~CHeadlessHatmanTerrify()
    Action<CHeadlessHatman>::FirstContainedResponder() const
    Action<CHeadlessHatman>::NextContainedResponder(INextBotEventResponder*) const
    Action<CHeadlessHatman>::OnLeaveGround(CBaseEntity*)
    Action<CHeadlessHatman>::OnLandOnGround(CBaseEntity*)
    Action<CHeadlessHatman>::OnContact(CBaseEntity*, CGameTrace*)
    Action<CHeadlessHatman>::OnMoveToSuccess(Path const*)
    Action<CHeadlessHatman>::OnMoveToFailure(Path const*, MoveToFailureType)
    Action<CHeadlessHatman>::OnStuck()
    Action<CHeadlessHatman>::OnUnStuck()
    Action<CHeadlessHatman>::OnPostureChanged()
    Action<CHeadlessHatman>::OnAnimationActivityComplete(int)
    Action<CHeadlessHatman>::OnAnimationActivityInterrupted(int)
    Action<CHeadlessHatman>::OnAnimationEvent(animevent_t*)
    Action<CHeadlessHatman>::OnIgnite()
    Action<CHeadlessHatman>::OnInjured(CTakeDamageInfo const&)
    Action<CHeadlessHatman>::OnKilled(CTakeDamageInfo const&)
    Action<CHeadlessHatman>::OnOtherKilled(CBaseCombatCharacter*, CTakeDamageInfo const&)
    Action<CHeadlessHatman>::OnSight(CBaseEntity*)
    Action<CHeadlessHatman>::OnLostSight(CBaseEntity*)
    Action<CHeadlessHatman>::OnSound(CBaseEntity*, Vector const&, KeyValues*)
    Action<CHeadlessHatman>::OnSpokeConcept(CBaseCombatCharacter*, char const*, AI_Response*)
    Action<CHeadlessHatman>::OnWeaponFired(CBaseCombatCharacter*, CBaseCombatWeapon*)
    Action<CHeadlessHatman>::OnNavAreaChanged(CNavArea*, CNavArea*)
    Action<CHeadlessHatman>::OnModelChanged()
    Action<CHeadlessHatman>::OnPickUp(CBaseEntity*, CBaseCombatCharacter*)
    Action<CHeadlessHatman>::OnDrop(CBaseEntity*)
    Action<CHeadlessHatman>::OnActorEmoted(CBaseCombatCharacter*, int)
    Action<CHeadlessHatman>::OnCommandAttack(CBaseEntity*)
    Action<CHeadlessHatman>::OnCommandApproach(Vector const&, float)
    Action<CHeadlessHatman>::OnCommandApproach(CBaseEntity*)
    Action<CHeadlessHatman>::OnCommandRetreat(CBaseEntity*, float)
    Action<CHeadlessHatman>::OnCommandPause(float)
    Action<CHeadlessHatman>::OnCommandResume()
    Action<CHeadlessHatman>::OnCommandString(char const*)
    Action<CHeadlessHatman>::OnShoved(CBaseEntity*)
    Action<CHeadlessHatman>::OnBlinded(CBaseEntity*)
    Action<CHeadlessHatman>::OnTerritoryContested(int)
    Action<CHeadlessHatman>::OnTerritoryCaptured(int)
    Action<CHeadlessHatman>::OnTerritoryLost(int)
    Action<CHeadlessHatman>::OnWin()
    Action<CHeadlessHatman>::OnLose()
    CHeadlessHatmanTerrify::GetName() const
    Action<CHeadlessHatman>::IsNamed(char const*) const
    Action<CHeadlessHatman>::GetFullName() const
    CHeadlessHatmanTerrify::OnStart(CHeadlessHatman*, Action<CHeadlessHatman>*)
    CHeadlessHatmanTerrify::Update(CHeadlessHatman*, float)
    Action<CHeadlessHatman>::OnEnd(CHeadlessHatman*, Action<CHeadlessHatman>*)
    Action<CHeadlessHatman>::OnSuspend(CHeadlessHatman*, Action<CHeadlessHatman>*)
    Action<CHeadlessHatman>::OnResume(CHeadlessHatman*, Action<CHeadlessHatman>*)
    Action<CHeadlessHatman>::InitialContainedAction(CHeadlessHatman*)
    Action<CHeadlessHatman>::OnLeaveGround(CHeadlessHatman*, CBaseEntity*)
    Action<CHeadlessHatman>::OnLandOnGround(CHeadlessHatman*, CBaseEntity*)
    Action<CHeadlessHatman>::OnContact(CHeadlessHatman*, CBaseEntity*, CGameTrace*)
    Action<CHeadlessHatman>::OnMoveToSuccess(CHeadlessHatman*, Path const*)
    Action<CHeadlessHatman>::OnMoveToFailure(CHeadlessHatman*, Path const*, MoveToFailureType)
    Action<CHeadlessHatman>::OnStuck(CHeadlessHatman*)
    Action<CHeadlessHatman>::OnUnStuck(CHeadlessHatman*)
    Action<CHeadlessHatman>::OnPostureChanged(CHeadlessHatman*)
    Action<CHeadlessHatman>::OnAnimationActivityComplete(CHeadlessHatman*, int)
    Action<CHeadlessHatman>::OnAnimationActivityInterrupted(CHeadlessHatman*, int)
    Action<CHeadlessHatman>::OnAnimationEvent(CHeadlessHatman*, animevent_t*)
    Action<CHeadlessHatman>::OnIgnite(CHeadlessHatman*)
    Action<CHeadlessHatman>::OnInjured(CHeadlessHatman*, CTakeDamageInfo const&)
    Action<CHeadlessHatman>::OnKilled(CHeadlessHatman*, CTakeDamageInfo const&)
    Action<CHeadlessHatman>::OnOtherKilled(CHeadlessHatman*, CBaseCombatCharacter*, CTakeDamageInfo const&)
    Action<CHeadlessHatman>::OnSight(CHeadlessHatman*, CBaseEntity*)
    Action<CHeadlessHatman>::OnLostSight(CHeadlessHatman*, CBaseEntity*)
    Action<CHeadlessHatman>::OnSound(CHeadlessHatman*, CBaseEntity*, Vector const&, KeyValues*)
    Action<CHeadlessHatman>::OnSpokeConcept(CHeadlessHatman*, CBaseCombatCharacter*, char const*, AI_Response*)
    Action<CHeadlessHatman>::OnWeaponFired(CHeadlessHatman*, CBaseCombatCharacter*, CBaseCombatWeapon*)
    Action<CHeadlessHatman>::OnNavAreaChanged(CHeadlessHatman*, CNavArea*, CNavArea*)
    Action<CHeadlessHatman>::OnModelChanged(CHeadlessHatman*)
    Action<CHeadlessHatman>::OnPickUp(CHeadlessHatman*, CBaseEntity*, CBaseCombatCharacter*)
    Action<CHeadlessHatman>::OnDrop(CHeadlessHatman*, CBaseEntity*)
    Action<CHeadlessHatman>::OnActorEmoted(CHeadlessHatman*, CBaseCombatCharacter*, int)
    Action<CHeadlessHatman>::OnCommandAttack(CHeadlessHatman*, CBaseEntity*)
    Action<CHeadlessHatman>::OnCommandApproach(CHeadlessHatman*, Vector const&, float)
    Action<CHeadlessHatman>::OnCommandApproach(CHeadlessHatman*, CBaseEntity*)
    Action<CHeadlessHatman>::OnCommandRetreat(CHeadlessHatman*, CBaseEntity*, float)
    Action<CHeadlessHatman>::OnCommandPause(CHeadlessHatman*, float)
    Action<CHeadlessHatman>::OnCommandResume(CHeadlessHatman*)
    Action<CHeadlessHatman>::OnCommandString(CHeadlessHatman*, char const*)
    Action<CHeadlessHatman>::OnShoved(CHeadlessHatman*, CBaseEntity*)
    Action<CHeadlessHatman>::OnBlinded(CHeadlessHatman*, CBaseEntity*)
    Action<CHeadlessHatman>::OnTerritoryContested(CHeadlessHatman*, int)
    Action<CHeadlessHatman>::OnTerritoryCaptured(CHeadlessHatman*, int)
    Action<CHeadlessHatman>::OnTerritoryLost(CHeadlessHatman*, int)
    Action<CHeadlessHatman>::OnWin(CHeadlessHatman*)
    Action<CHeadlessHatman>::OnLose(CHeadlessHatman*)
    Action<CHeadlessHatman>::IsAbleToBlockMovementOf(INextBot const*) const
