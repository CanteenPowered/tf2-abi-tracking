VTable for CryptoPP::DL_SignerImpl<CryptoPP::DL_SignatureSchemeOptions<CryptoPP::DSA2<CryptoPP::SHA1>, CryptoPP::DL_Keys_DSA, CryptoPP::DL_Algorithm_GDSA<CryptoPP::Integer>, CryptoPP::DL_SignatureMessageEncodingMethod_DSA, CryptoPP::SHA1>>:
    [0] CryptoPP::DL_SignatureSchemeBase<CryptoPP::PK_Signer, CryptoPP::DL_PrivateKey<CryptoPP::EC2NPoint>>::RecoverablePartFirst() const
VTable for CryptoPP::DL_SignerImpl<CryptoPP::DL_SignatureSchemeOptions<CryptoPP::DL_SS<CryptoPP::DL_Keys_ECDSA<CryptoPP::EC2N>, CryptoPP::DL_Algorithm_ECDSA<CryptoPP::EC2N>, CryptoPP::DL_SignatureMessageEncodingMethod_DSA, CryptoPP::SHA256, int>, CryptoPP::DL_Keys_ECDSA<CryptoPP::EC2N>, CryptoPP::DL_Algorithm_ECDSA<CryptoPP::EC2N>, CryptoPP::DL_SignatureMessageEncodingMethod_DSA, CryptoPP::SHA256>>:
    [0] CryptoPP::BufferedTransformation::NumberOfMessageSeries() const
    [1] CryptoPP::Sink::TransferTo2(CryptoPP::BufferedTransformation&, unsigned long long&, std::string const&, bool)
    [2] CryptoPP::Sink::CopyRangeTo2(CryptoPP::BufferedTransformation&, unsigned long long&, unsigned long long, std::string const&, bool) const
    [3] CryptoPP::Redirector::ChannelCreatePutSpace(std::string const&, unsigned int&)
    [4] CryptoPP::Redirector::ChannelPut2(std::string const&, unsigned char const*, unsigned int, int, bool)
    [5] CryptoPP::Redirector::ChannelPutModifiable2(std::string const&, unsigned char*, unsigned int, int, bool)
    [6] CryptoPP::Redirector::ChannelFlush(std::string const&, bool, int, bool)
    [7] CryptoPP::Redirector::ChannelMessageSeriesEnd(std::string const&, int, bool)
    [8] CryptoPP::BufferedTransformation::SetRetrievalChannel(std::string const&)
    [9] CryptoPP::BufferedTransformation::Attachable()
    [10] CryptoPP::BufferedTransformation::AttachedTransformation()
    [11] CryptoPP::BufferedTransformation::AttachedTransformation() const
    [12] CryptoPP::BufferedTransformation::Detach(CryptoPP::BufferedTransformation*)
    [13] CryptoPP::BufferedTransformation::Attach(CryptoPP::BufferedTransformation*)
VTable for CryptoPP::DL_SignerImpl<CryptoPP::DL_SignatureSchemeOptions<CryptoPP::DL_SS<CryptoPP::DL_Keys_ECDSA<CryptoPP::ECP>, CryptoPP::DL_Algorithm_ECDSA<CryptoPP::ECP>, CryptoPP::DL_SignatureMessageEncodingMethod_DSA, CryptoPP::SHA256, int>, CryptoPP::DL_Keys_ECDSA<CryptoPP::ECP>, CryptoPP::DL_Algorithm_ECDSA<CryptoPP::ECP>, CryptoPP::DL_SignatureMessageEncodingMethod_DSA, CryptoPP::SHA256>>:
    [0] CryptoPP::EC2N::~EC2N()
    [1] CryptoPP::EC2N::Equal(CryptoPP::EC2NPoint const&, CryptoPP::EC2NPoint const&) const
    [2] CryptoPP::EC2N::Identity() const
    [3] CryptoPP::EC2N::Add(CryptoPP::EC2NPoint const&, CryptoPP::EC2NPoint const&) const
    [4] CryptoPP::EC2N::Inverse(CryptoPP::EC2NPoint const&) const
    [5] CryptoPP::EC2N::InversionIsFast() const
    [6] CryptoPP::EC2N::Double(CryptoPP::EC2NPoint const&) const
    [7] CryptoPP::AbstractGroup<CryptoPP::EC2NPoint>::Subtract(CryptoPP::EC2NPoint const&, CryptoPP::EC2NPoint const&) const
    [8] CryptoPP::AbstractGroup<CryptoPP::EC2NPoint>::Accumulate(CryptoPP::EC2NPoint&, CryptoPP::EC2NPoint const&) const
    [9] CryptoPP::AbstractGroup<CryptoPP::EC2NPoint>::Reduce(CryptoPP::EC2NPoint&, CryptoPP::EC2NPoint const&) const
    [10] CryptoPP::AbstractGroup<CryptoPP::EC2NPoint>::ScalarMultiply(CryptoPP::EC2NPoint const&, CryptoPP::Integer const&) const
    [11] CryptoPP::AbstractGroup<CryptoPP::EC2NPoint>::CascadeScalarMultiply(CryptoPP::EC2NPoint const&, CryptoPP::Integer const&, CryptoPP::EC2NPoint const&, CryptoPP::Integer const&) const
    [12] CryptoPP::AbstractGroup<CryptoPP::EC2NPoint>::SimultaneousMultiply(CryptoPP::EC2NPoint*, CryptoPP::EC2NPoint const&, CryptoPP::Integer const*, unsigned int) const
