VTable for CryptoPP::MontgomeryRepresentation:
    CryptoPP::MontgomeryRepresentation::~MontgomeryRepresentation()
    CryptoPP::ModularArithmetic::Equal(CryptoPP::Integer const&, CryptoPP::Integer const&) const
    CryptoPP::ModularArithmetic::Identity() const
    CryptoPP::ModularArithmetic::Add(CryptoPP::Integer const&, CryptoPP::Integer const&) const
    CryptoPP::ModularArithmetic::Inverse(CryptoPP::Integer const&) const
    CryptoPP::AbstractGroup<CryptoPP::Integer>::InversionIsFast() const
    CryptoPP::ModularArithmetic::Double(CryptoPP::Integer const&) const
    CryptoPP::ModularArithmetic::Subtract(CryptoPP::Integer const&, CryptoPP::Integer const&) const
    CryptoPP::ModularArithmetic::Accumulate(CryptoPP::Integer&, CryptoPP::Integer const&) const
    CryptoPP::ModularArithmetic::Reduce(CryptoPP::Integer&, CryptoPP::Integer const&) const
    CryptoPP::AbstractGroup<CryptoPP::Integer>::ScalarMultiply(CryptoPP::Integer const&, CryptoPP::Integer const&) const
    CryptoPP::AbstractGroup<CryptoPP::Integer>::CascadeScalarMultiply(CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&) const
    CryptoPP::AbstractGroup<CryptoPP::Integer>::SimultaneousMultiply(CryptoPP::Integer*, CryptoPP::Integer const&, CryptoPP::Integer const*, unsigned int) const
    CryptoPP::ModularArithmetic::IsUnit(CryptoPP::Integer const&) const
    CryptoPP::MontgomeryRepresentation::MultiplicativeIdentity() const
    CryptoPP::MontgomeryRepresentation::Multiply(CryptoPP::Integer const&, CryptoPP::Integer const&) const
    CryptoPP::MontgomeryRepresentation::MultiplicativeInverse(CryptoPP::Integer const&) const
    CryptoPP::MontgomeryRepresentation::Square(CryptoPP::Integer const&) const
    CryptoPP::ModularArithmetic::Divide(CryptoPP::Integer const&, CryptoPP::Integer const&) const
    CryptoPP::AbstractRing<CryptoPP::Integer>::Exponentiate(CryptoPP::Integer const&, CryptoPP::Integer const&) const
    CryptoPP::MontgomeryRepresentation::CascadeExponentiate(CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&, CryptoPP::Integer const&) const
    CryptoPP::MontgomeryRepresentation::SimultaneousExponentiate(CryptoPP::Integer*, CryptoPP::Integer const&, CryptoPP::Integer const*, unsigned int) const
    CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroup() const
    CryptoPP::MontgomeryRepresentation::Clone() const
    CryptoPP::MontgomeryRepresentation::IsMontgomeryRepresentation() const
    CryptoPP::MontgomeryRepresentation::ConvertIn(CryptoPP::Integer const&) const
    CryptoPP::MontgomeryRepresentation::ConvertOut(CryptoPP::Integer const&) const
