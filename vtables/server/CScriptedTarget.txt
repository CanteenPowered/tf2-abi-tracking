VTable for CScriptedTarget:
    CScriptedTarget::~CScriptedTarget()
    CBaseEntity::SetRefEHandle(CBaseHandle const&)
    CBaseEntity::GetRefEHandle() const
    CBaseEntity::GetCollideable()
    CBaseEntity::GetNetworkable()
    CBaseEntity::GetBaseEntity()
    CBaseEntity::GetModelIndex() const
    CBaseEntity::GetModelName() const
    CBaseEntity::SetModelIndex(int)
    CAI_BaseNPC::GetServerClass()
    CAI_BaseNPC::YouForgotToImplementOrDeclareServerClass()
    CScriptedTarget::GetDataDescMap()
    CBaseCombatCharacter::GetScriptDesc()
    CBaseEntity::SetModelIndexOverride(int, int)
    CBaseAnimating::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
    CBaseAnimating::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
    CBaseEntity::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
    CBaseEntity::ShouldCollide(int, int) const
    CBaseEntity::SetOwnerEntity(CBaseEntity*)
    CBaseEntity::SetScriptOwnerEntity(HSCRIPT__*)
    CBaseEntity::ShouldTransmit(CCheckTransmitInfo const*)
    CAI_BaseNPC::UpdateTransmitState()
    CBaseCombatCharacter::SetTransmit(CCheckTransmitInfo*, bool)
    CAI_BaseNPC::GetTracerType()
    CScriptedTarget::Spawn()
    CAI_BaseNPC::Precache()
    CBaseFlex::SetModel(char const*)
    CBaseAnimating::OnNewModel()
    CAI_BaseNPC::PostConstructor(char const*)
    CBaseEntity::PostClientActive()
    CBaseEntity::ParseMapData(CEntityMapData*)
    CAI_BaseNPC::KeyValue(char const*, char const*)
    CBaseEntity::KeyValue(char const*, float)
    CBaseEntity::KeyValue(char const*, Vector const&)
    CBaseEntity::GetKeyValue(char const*, char*, int)
    CAI_BaseNPC::Activate()
    CBaseEntity::SetParent(CBaseEntity*, int)
    CScriptedTarget::ObjectCaps()
    CBaseEntity::AcceptInput(char const*, CBaseEntity*, CBaseEntity*, variant_t, int)
    CBaseAnimating::GetInputDispatchEffectPosition(char const*, Vector&, QAngle&)
    CScriptedTarget::DrawDebugGeometryOverlays()
    CScriptedTarget::DrawDebugTextOverlays()
    CAI_BaseNPC::Save(ISave&)
    CAI_BaseNPC::Restore(IRestore&)
    CAI_BaseNPC::ShouldSavePhysics()
    CBaseEntity::OnSave(IEntitySaveUtils*)
    CAI_BaseNPC::OnRestore()
    CBaseEntity::RequiredEdictIndex()
    CBaseEntity::MoveDone()
    CBaseEntity::Think()
    CBaseEntity::NetworkStateChanged_m_nNextThinkTick()
    CBaseEntity::NetworkStateChanged_m_nNextThinkTick(void*)
    CBaseAnimating::GetBaseAnimating()
    CBaseEntity::GetResponseSystem()
    CBaseEntity::DispatchResponse(char const*)
    CBaseEntity::Classify()
    CBaseEntity::DeathNotice(CBaseEntity*)
    CBaseEntity::ShouldAttractAutoAim(CBaseEntity*)
    CBaseEntity::GetAutoAimRadius()
    CAI_BaseNPC::GetAutoAimCenter()
    CBaseEntity::GetBeamTraceFilter()
    CAI_BaseNPC::PassesDamageFilter(CTakeDamageInfo const&)
    CAI_BaseNPC::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*, CDmgAccumulator*)
    CBaseEntity::CanBeHitByMeleeAttack(CBaseEntity*)
    CBaseCombatCharacter::OnTakeDamage(CTakeDamageInfo const&)
    CBaseEntity::AdjustDamageDirection(CTakeDamageInfo const&, Vector&, CBaseEntity*)
    CBaseCombatCharacter::TakeHealth(float, int)
    CBaseEntity::IsAlive()
    CAI_BaseNPC::Event_Killed(CTakeDamageInfo const&)
    CBaseEntity::Event_KilledOther(CBaseEntity*, CTakeDamageInfo const&)
    CBaseCombatCharacter::BloodColor()
    CBaseEntity::IsTriggered(CBaseEntity*)
    CAI_BaseNPC::IsNPC() const
    CBaseCombatCharacter::MyCombatCharacterPointer()
    CBaseEntity::MyNextBotPointer()
    CBaseEntity::GetDelay()
    CAI_BaseNPC::IsMoving()
    CBaseEntity::DamageDecal(int, int)
    CAI_BaseNPC::DecalTrace(CGameTrace*, char const*)
    CAI_BaseNPC::ImpactTrace(CGameTrace*, int, char const*)
    CBaseEntity::OnControls(CBaseEntity*)
    CBaseEntity::HasTarget(string_t)
    CBaseEntity::IsPlayer() const
    CBaseEntity::IsNetClient() const
    CAI_BaseNPC::IsTemplate()
    CBaseEntity::IsBaseObject() const
    CBaseEntity::IsBaseTrain() const
    CBaseEntity::IsCombatItem() const
    CBaseEntity::IsProjectileCollisionTarget() const
    CBaseEntity::IsFuncLOD() const
    CBaseEntity::IsBaseProjectile() const
    CBaseEntity::IsBaseCombatWeapon() const
    CBaseEntity::IsWearable() const
    CBaseEntity::MyCombatWeaponPointer()
    CBaseEntity::GetServerVehicle()
    CBaseEntity::IsViewable()
    CBaseCombatCharacter::ChangeTeam(int)
    CBaseEntity::OnEntityEvent(EntityEvent_t, void*)
    CAI_BaseNPC::CanStandOn(CBaseEntity*) const
    CBaseEntity::CanStandOn(edict_t*) const
    CAI_BaseNPC::GetEnemy()
    CAI_BaseNPC::GetEnemy() const
    CBaseEntity::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
    CAI_BaseNPC::StartTouch(CBaseEntity*)
    CBaseEntity::Touch(CBaseEntity*)
    CBaseEntity::EndTouch(CBaseEntity*)
    CBaseEntity::StartBlocked(CBaseEntity*)
    CBaseEntity::Blocked(CBaseEntity*)
    CBaseEntity::EndBlocked()
    CBaseEntity::PhysicsSimulate()
    CAI_BaseNPC::UpdateOnRemove()
    CBaseEntity::StopLoopingSounds()
    CBaseEntity::SUB_AllowedToFade()
    CAI_BaseNPC::Teleport(Vector const*, QAngle const*, Vector const*)
    CBaseEntity::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
    CAI_BaseNPC::MakeTracer(Vector const&, CGameTrace const&, int)
    CBaseEntity::GetTracerAttachment()
    CAI_BaseNPC::FireBullets(FireBulletsInfo_t const&)
    CAI_BaseNPC::DoImpactEffect(CGameTrace&, int)
    CBaseEntity::ModifyFireBulletsDamage(CTakeDamageInfo*)
    CBaseEntity::Respawn()
    CBaseEntity::IsLockedByMaster()
    CBaseEntity::GetMaxHealth() const
    CAI_BaseNPC::ModifyOrAppendCriteria(AI_CriteriaSet&)
    CBaseEntity::NetworkStateChanged_m_iMaxHealth()
    CBaseEntity::NetworkStateChanged_m_iMaxHealth(void*)
    CBaseEntity::NetworkStateChanged_m_iHealth()
    CBaseEntity::NetworkStateChanged_m_iHealth(void*)
    CAI_BaseNPC::NetworkStateChanged_m_lifeState()
    CAI_BaseNPC::NetworkStateChanged_m_lifeState(void*)
    CBaseEntity::NetworkStateChanged_m_takedamage()
    CBaseEntity::NetworkStateChanged_m_takedamage(void*)
    CBaseEntity::RunVScripts()
    CBaseEntity::GetDamageType() const
    CBaseEntity::GetDamage()
    CBaseEntity::SetDamage(float)
    CAI_BaseNPC::EyePosition()
    CBaseEntity::EyeAngles()
    CBaseEntity::LocalEyeAngles()
    CBaseEntity::EarPosition()
    CAI_BaseNPC::BodyTarget(Vector const&, bool)
    CBaseEntity::HeadTarget(Vector const&)
    CBaseEntity::GetVectors(Vector*, Vector*, Vector*) const
    CBaseEntity::GetViewOffset() const
    CBaseEntity::SetViewOffset(Vector const&)
    CAI_BaseNPC::GetSmoothedVelocity()
    CBaseAnimating::GetVelocity(Vector*, Vector*)
    CBaseCombatCharacter::FVisible(CBaseEntity*, int, CBaseEntity**)
    CBaseCombatCharacter::FVisible(Vector const&, int, CBaseEntity**)
    CBaseEntity::CanBeSeenBy(CAI_BaseNPC*)
    CBaseEntity::GetAttackDamageScale(CBaseEntity*)
    CBaseEntity::GetReceivedDamageScale(CBaseEntity*)
    CBaseEntity::GetGroundVelocityToApply(Vector&)
    CBaseEntity::PhysicsSplash(Vector const&, Vector const&, float, float)
    CBaseEntity::Splash()
    CBaseEntity::WorldSpaceCenter() const
    CBaseEntity::GetSoundEmissionOrigin() const
    CBaseEntity::ModifyEmitSoundParams(EmitSound_t&)
    CBaseEntity::IsDeflectable()
    CBaseEntity::Deflected(CBaseEntity*, Vector&)
    CAI_BaseNPC::CreateVPhysics()
    CBaseEntity::ForceVPhysicsCollide(CBaseEntity*)
    CBaseEntity::VPhysicsDestroyObject()
    CBaseCombatCharacter::VPhysicsUpdate(IPhysicsObject*)
    CBaseEntity::VPhysicsTakeDamage(CTakeDamageInfo const&)
    CBaseCombatCharacter::VPhysicsShadowCollision(int, gamevcollisionevent_t*)
    CBaseEntity::VPhysicsShadowUpdate(IPhysicsObject*)
    CBaseEntity::VPhysicsCollision(int, gamevcollisionevent_t*)
    CBaseEntity::VPhysicsFriction(IPhysicsObject*, float, int, int)
    CBaseEntity::UpdatePhysicsShadowToCurrentPosition(float)
    CBaseEntity::VPhysicsGetObjectList(IPhysicsObject**, int)
    CBaseEntity::VPhysicsIsFlesh()
    CBaseEntity::HasPhysicsAttacker(float)
    CAI_BaseNPC::PhysicsSolidMaskForEntity() const
    CBaseEntity::ResolveFlyCollisionCustom(CGameTrace&, Vector&)
    CBaseEntity::PerformCustomPhysics(Vector*, Vector*, QAngle*, QAngle*)
    CBaseAnimating::GetStepOrigin() const
    CBaseAnimating::GetStepAngles() const
    CBaseEntity::ShouldDrawWaterImpacts()
    CBaseEntity::NetworkStateChanged_m_fFlags()
    CBaseEntity::NetworkStateChanged_m_fFlags(void*)
    CBaseEntity::NetworkStateChanged_m_nWaterLevel()
    CBaseEntity::NetworkStateChanged_m_nWaterLevel(void*)
    CBaseEntity::NetworkStateChanged_m_hGroundEntity()
    CBaseEntity::NetworkStateChanged_m_hGroundEntity(void*)
    CBaseEntity::NetworkStateChanged_m_vecBaseVelocity()
    CBaseEntity::NetworkStateChanged_m_vecBaseVelocity(void*)
    CBaseEntity::NetworkStateChanged_m_flFriction()
    CBaseEntity::NetworkStateChanged_m_flFriction(void*)
    CBaseEntity::NetworkStateChanged_m_vecVelocity()
    CBaseEntity::NetworkStateChanged_m_vecVelocity(void*)
    CBaseEntity::NetworkStateChanged_m_vecViewOffset()
    CBaseEntity::NetworkStateChanged_m_vecViewOffset(void*)
    CBaseEntity::ShouldBlockNav() const
    CBaseEntity::ShouldForceTransmitsForTeam(int)
    CBaseEntity::IsTruceValidForEnt() const
    CBaseEntity::GetDefaultItemChargeMeterValue() const
    CBaseEntity::BCanCallVote()
    CBaseAnimating::GetIdealSpeed() const
    CBaseAnimating::GetIdealAccel() const
    CBaseAnimatingOverlay::StudioFrameAdvance()
    CBaseAnimating::SetSequence(int)
    CAI_BaseNPC::IsActivityFinished()
    CBaseAnimating::GetSequenceGroundSpeed(CStudioHdr*, int)
    CBaseAnimating::ClampRagdollForce(Vector const&, Vector*)
    CBaseAnimating::BecomeRagdollOnClient(Vector const&)
    CBaseAnimating::IsRagdoll()
    CBaseAnimating::CanBecomeRagdoll()
    CBaseAnimatingOverlay::GetSkeleton(CStudioHdr*, Vector*, Quaternion*, int)
    CBaseAnimating::GetBoneTransform(int, matrix3x4_t&)
    CBaseAnimating::SetupBones(matrix3x4_t*, int)
    CBaseAnimating::CalculateIKLocks(float)
    CBaseAnimatingOverlay::DispatchAnimEvents(CBaseAnimating*)
    CAI_BaseNPC::HandleAnimEvent(animevent_t*)
    CAI_BaseNPC::PopulatePoseParameters()
    CBaseAnimating::GetAttachment(int, matrix3x4_t&)
    CBaseAnimating::InitBoneControllers()
    CBaseAnimating::GetGroundSpeedVelocity()
    CBaseAnimating::RefreshCollisionBounds()
    CAI_BaseNPC::Ignite(float, bool, float, bool)
    CBaseAnimating::IgniteLifetime(float)
    CBaseAnimating::IgniteNumHitboxFires(int)
    CBaseAnimating::IgniteHitboxFireScale(float)
    CBaseAnimating::Extinguish()
    CBaseCombatCharacter::SetLightingOriginRelative(CBaseEntity*)
    CBaseAnimating::SetLightingOrigin(CBaseEntity*)
    CBaseFlex::SetViewtarget(Vector const&)
    CBaseFlex::StartSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*, CChoreoActor*, CBaseEntity*)
    CBaseFlex::ProcessSceneEvents()
    CBaseFlex::ProcessSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
    CBaseFlex::ClearSceneEvent(CSceneEventInfo*, bool, bool)
    CBaseFlex::CheckSceneEventCompletion(CSceneEventInfo*, float, CChoreoScene*, CChoreoEvent*)
    CBaseFlex::PlayScene(char const*, float, AI_Response*, IRecipientFilter*)
    CBaseFlex::PlayAutoGeneratedSoundScene(char const*)
    CBaseFlex::GetSpecialDSP()
    CBaseCombatCharacter::GetPhysicsImpactDamageTable()
    CBaseCombatCharacter::FInViewCone(CBaseEntity*)
    CBaseCombatCharacter::FInViewCone(Vector const&)
    CBaseCombatCharacter::FInAimCone(CBaseEntity*)
    CAI_BaseNPC::FInAimCone(Vector const&)
    CBaseCombatCharacter::ShouldShootMissTarget(CBaseCombatCharacter*)
    CBaseCombatCharacter::FindMissTarget()
    CAI_BaseNPC::HandleInteraction(int, void*, CBaseCombatCharacter*)
    CBaseCombatCharacter::BodyAngles()
    CBaseCombatCharacter::BodyDirection2D()
    CBaseCombatCharacter::BodyDirection3D()
    CAI_BaseNPC::HeadDirection2D()
    CAI_BaseNPC::HeadDirection3D()
    CAI_BaseNPC::EyeDirection2D()
    CAI_BaseNPC::EyeDirection3D()
    CBaseCombatCharacter::IsHiddenByFog(Vector const&) const
    CBaseCombatCharacter::IsHiddenByFog(CBaseEntity*) const
    CBaseCombatCharacter::IsHiddenByFog(float) const
    CBaseCombatCharacter::GetFogObscuredRatio(Vector const&) const
    CBaseCombatCharacter::GetFogObscuredRatio(CBaseEntity*) const
    CBaseCombatCharacter::GetFogObscuredRatio(float) const
    CBaseCombatCharacter::IsLookingTowards(CBaseEntity const*, float) const
    CBaseCombatCharacter::IsLookingTowards(Vector const&, float) const
    CBaseCombatCharacter::IsInFieldOfView(CBaseEntity*) const
    CBaseCombatCharacter::IsInFieldOfView(Vector const&) const
    CBaseCombatCharacter::IsLineOfSightClear(CBaseEntity*, CBaseCombatCharacter::LineOfSightCheckType) const
    CBaseCombatCharacter::IsLineOfSightClear(Vector const&, CBaseCombatCharacter::LineOfSightCheckType, CBaseEntity*) const
    CBaseCombatCharacter::GiveAmmo(int, int, bool)
    CBaseCombatCharacter::RemoveAmmo(int, int)
    CBaseCombatCharacter::RemoveAmmo(int, char const*)
    CBaseCombatCharacter::GetAmmoCount(int) const
    CAI_BaseNPC::NPC_TranslateActivity(Activity)
    CBaseCombatCharacter::Weapon_TranslateActivity(Activity, bool*)
    CBaseCombatCharacter::Weapon_FrameUpdate()
    CBaseCombatCharacter::Weapon_HandleAnimEvent(animevent_t*)
    CBaseCombatCharacter::Weapon_CanUse(CBaseCombatWeapon*)
    CBaseCombatCharacter::Weapon_Equip(CBaseCombatWeapon*)
    CBaseCombatCharacter::Weapon_EquipAmmoOnly(CBaseCombatWeapon*)
    CBaseCombatCharacter::Weapon_Drop(CBaseCombatWeapon*, Vector const*, Vector const*)
    CBaseCombatCharacter::Weapon_Switch(CBaseCombatWeapon*, int)
    CAI_BaseNPC::Weapon_ShootPosition()
    CBaseCombatCharacter::Weapon_CanSwitchTo(CBaseCombatWeapon*)
    CBaseCombatCharacter::Weapon_SlotOccupied(CBaseCombatWeapon*)
    CBaseCombatCharacter::Weapon_GetSlot(int) const
    CBaseCombatCharacter::AddPlayerItem(CBaseCombatWeapon*)
    CBaseCombatCharacter::RemovePlayerItem(CBaseCombatWeapon*)
    CBaseCombatCharacter::CanBecomeServerRagdoll()
    CAI_BaseNPC::OnTakeDamage_Alive(CTakeDamageInfo const&)
    CAI_BaseNPC::OnTakeDamage_Dying(CTakeDamageInfo const&)
    CAI_BaseNPC::OnTakeDamage_Dead(CTakeDamageInfo const&)
    CBaseCombatCharacter::GetAliveDuration() const
    CAI_BaseNPC::OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
    CAI_BaseNPC::NotifyFriendsOfDamage(CBaseEntity*)
    CBaseCombatCharacter::HasEverBeenInjured(int) const
    CBaseCombatCharacter::GetTimeSinceLastInjury(int) const
    CBaseCombatCharacter::OnPlayerKilledOther(CBaseEntity*, CTakeDamageInfo const&)
    CBaseCombatCharacter::GetDeathActivity()
    CBaseCombatCharacter::CorpseGib(CTakeDamageInfo const&)
    CBaseCombatCharacter::CorpseFade()
    CBaseCombatCharacter::HasHumanGibs()
    CBaseCombatCharacter::HasAlienGibs()
    CBaseCombatCharacter::ShouldGib(CTakeDamageInfo const&)
    CBaseCombatCharacter::OnKilledNPC(CBaseCombatCharacter*)
    CAI_BaseNPC::Event_Gibbed(CTakeDamageInfo const&)
    CBaseCombatCharacter::Event_Dying(CTakeDamageInfo const&)
    CBaseCombatCharacter::Event_Dying()
    CBaseCombatCharacter::BecomeRagdoll(CTakeDamageInfo const&, Vector const&)
    CBaseCombatCharacter::FixupBurningServerRagdoll(CBaseEntity*)
    CBaseCombatCharacter::BecomeRagdollBoogie(CBaseEntity*, Vector const&, float, int)
    CBaseCombatCharacter::CheckTraceHullAttack(float, Vector const&, Vector const&, int, int, float, bool)
    CBaseCombatCharacter::CheckTraceHullAttack(Vector const&, Vector const&, Vector const&, Vector const&, int, int, float, bool)
    CBaseCombatCharacter::PushawayTouch(CBaseEntity*)
    CBaseCombatCharacter::IRelationType(CBaseEntity*)
    CBaseCombatCharacter::IRelationPriority(CBaseEntity*)
    CBaseCombatCharacter::IsInAVehicle() const
    CBaseCombatCharacter::GetVehicle()
    CBaseCombatCharacter::GetVehicleEntity()
    CBaseCombatCharacter::ExitVehicle()
    CBaseCombatCharacter::RemoveAllWeapons()
    CBaseCombatCharacter::CalcWeaponProficiency(CBaseCombatWeapon*)
    CBaseCombatCharacter::GetAttackSpread(CBaseCombatWeapon*, CBaseEntity*)
    CBaseCombatCharacter::GetSpreadBias(CBaseCombatWeapon*, CBaseEntity*)
    CBaseCombatCharacter::DoMuzzleFlash()
    CAI_BaseNPC::AddEntityRelationship(CBaseEntity*, Disposition_t, int)
    CBaseCombatCharacter::RemoveEntityRelationship(CBaseEntity*)
    CAI_BaseNPC::AddClassRelationship(Class_T, Disposition_t, int)
    CAI_BaseNPC::OnChangeActiveWeapon(CBaseCombatWeapon*, CBaseCombatWeapon*)
    CBaseCombatCharacter::GetLastKnownArea() const
    CBaseCombatCharacter::IsAreaTraversable(CNavArea const*) const
    CBaseCombatCharacter::ClearLastKnownArea()
    CBaseCombatCharacter::UpdateLastKnownArea()
    CBaseCombatCharacter::OnNavAreaChanged(CNavArea*, CNavArea*)
    CBaseCombatCharacter::OnNavAreaRemoved(CNavArea*)
    CBaseCombatCharacter::OnPursuedBy(INextBot*)
    CBaseCombatCharacter::GetBossType() const
    CBaseCombatCharacter::NetworkStateChanged_m_iAmmo()
    CBaseCombatCharacter::NetworkStateChanged_m_iAmmo(void*)
    CAI_BaseNPC::NPCInit()
    CAI_BaseNPC::PostNPCInit()
    CAI_BaseNPC::StartNPC()
    CAI_BaseNPC::CleanupOnDeath(CBaseEntity*, bool)
    CAI_BaseNPC::CreateComponents()
    CAI_BaseNPC::CreateSenses()
    CAI_BaseNPC::CreateMoveProbe()
    CAI_BaseNPC::CreateMotor()
    CAI_BaseNPC::CreateLocalNavigator()
    CAI_BaseNPC::CreateNavigator()
    CAI_BaseNPC::CreatePathfinder()
    CAI_BaseNPC::CreateTacticalServices()
    CAI_BaseNPC::NPCThink()
    CAI_BaseNPC::RunAI()
    CAI_BaseNPC::GatherConditions()
    CAI_BaseNPC::PrescheduleThink()
    CAI_BaseNPC::PostscheduleThink()
    CAI_BaseNPC::OnScheduleChange()
    CAI_BaseNPC::OnStartSchedule(int)
    CAI_BaseNPC::SelectSchedule()
    CAI_BaseNPC::SelectFailSchedule(int, int, int)
    CAI_BaseNPC::TranslateSchedule(int)
    CAI_BaseNPC::StartTask(Task_t const*)
    CAI_BaseNPC::RunTask(Task_t const*)
    CAI_BaseNPC::IsInterruptable()
    CAI_BaseNPC::OnStartScene()
    CAI_BaseNPC::ShouldPlayerAvoid()
    CAI_BaseNPC::SetPlayerAvoidState()
    CAI_BaseNPC::PlayerPenetratingVPhysics()
    CAI_BaseNPC::ShouldAlwaysThink()
    CAI_BaseNPC::LineOfSightDist(Vector const&, float)
    CAI_BaseNPC::PostRunStopMoving()
    CAI_BaseNPC::StartTask(Task_t*)
    CAI_BaseNPC::RunTask(Task_t*)
    CAI_BaseNPC::GetSchedule(int)
    CAI_BaseNPC::GetLocalScheduleId(int)
    CAI_BaseNPC::GetGlobalScheduleId(int)
    CAI_BaseNPC::TaskFail(int)
    CAI_BaseNPC::TaskName(int)
    CAI_BaseNPC::GetLocalTaskId(int)
    CAI_BaseNPC::GetSchedulingErrorName()
    CAI_BaseNPC::LoadedSchedules()
    CAI_BaseNPC::BuildScheduleTestBits()
    CAI_BaseNPC::GetNewSchedule()
    CAI_BaseNPC::GetFailSchedule()
    CAI_BaseNPC::CanFlinch()
    CAI_BaseNPC::CheckFlinches()
    CAI_BaseNPC::PlayFlinchGesture()
    CAI_BaseNPC::IsAllowedToDodge()
    CAI_BaseNPC::SelectDeadSchedule()
    CAI_BaseNPC::GetRunningBehavior()
    CAI_BaseNPC::ShouldAcceptGoal(CAI_BehaviorBase*, CAI_GoalEntity*)
    CAI_BaseNPC::OnClearGoal(CAI_BehaviorBase*, CAI_GoalEntity*)
    CAI_BaseNPC::OnBehaviorChangeStatus(CAI_BehaviorBase*, bool)
    CAI_BaseNPC::AccessBehaviors()
    CAI_BaseNPC::NumBehaviors()
    CAI_BaseNPC::ConditionName(int)
    CAI_BaseNPC::RemoveIgnoredConditions()
    CAI_BaseNPC::SelectIdealState()
    CAI_BaseNPC::ShouldGoToIdleState()
    CAI_BaseNPC::OnStateChange(NPC_STATE, NPC_STATE)
    CAI_BaseNPC::UpdateEfficiency(bool)
    CAI_BaseNPC::Wake(bool)
    CAI_BaseNPC::SetActivity(Activity)
    CAI_BaseNPC::IsActivityMovementPhased(Activity)
    CAI_BaseNPC::OnChangeActivity(Activity)
    CAI_BaseNPC::QueryHearSound(CSound*)
    CAI_BaseNPC::QuerySeeEntity(CBaseEntity*, bool)
    CAI_BaseNPC::OnLooked(int)
    CAI_BaseNPC::OnListened()
    CAI_BaseNPC::OnSeeEntity(CBaseEntity*)
    CAI_BaseNPC::ShouldNotDistanceCull()
    CAI_BaseNPC::GetSoundInterests()
    CAI_BaseNPC::GetSoundPriority(CSound*)
    CAI_BaseNPC::GetBestSound(int)
    CAI_BaseNPC::GetBestScent()
    CAI_BaseNPC::HearingSensitivity()
    CAI_BaseNPC::ShouldIgnoreSound(CSound*)
    CAI_BaseNPC::ClearSenseConditions()
    CAI_BaseNPC::BestEnemy()
    CAI_BaseNPC::IsValidEnemy(CBaseEntity*)
    CAI_BaseNPC::CanBeAnEnemyOf(CBaseEntity*)
    CAI_BaseNPC::ShouldChooseNewEnemy()
    CAI_BaseNPC::GatherEnemyConditions(CBaseEntity*)
    CAI_BaseNPC::EnemyDistTolerance()
    CAI_BaseNPC::StartTargetHandling(CBaseEntity*)
    CAI_BaseNPC::CreateCustomTarget(Vector const&, float)
    CAI_BaseNPC::ShouldPickADeathPose()
    CAI_BaseNPC::AllowedToIgnite()
    CAI_BaseNPC::GetGoalRepathTolerance(CBaseEntity*, GoalType_t, Vector const&, Vector const&)
    CAI_BaseNPC::IsCommandable()
    CAI_BaseNPC::IsPlayerAlly(CBasePlayer*)
    CAI_BaseNPC::IsMedic()
    CAI_BaseNPC::IsCommandMoving()
    CAI_BaseNPC::ShouldAutoSummon()
    CAI_BaseNPC::SetCommandGoal(Vector const&)
    CAI_BaseNPC::ClearCommandGoal()
    CAI_BaseNPC::OnTargetOrder()
    CAI_BaseNPC::OnMoveOrder()
    CAI_BaseNPC::IsValidCommandTarget(CBaseEntity*)
    CAI_BaseNPC::OnMoveToCommandGoalFailed()
    CAI_BaseNPC::GetSquadCommandRepresentative()
    CAI_BaseNPC::TargetOrder(CBaseEntity*, CAI_BaseNPC**, int)
    CAI_BaseNPC::MoveOrder(Vector const&, CAI_BaseNPC**, int)
    CAI_BaseNPC::CanBeUsedAsAFriend()
    CAI_BaseNPC::CanRunAScriptedNPCInteraction(bool)
    CAI_BaseNPC::CanPlaySequence(bool, int)
    CAI_BaseNPC::CanPlaySentence(bool)
    CAI_BaseNPC::PlaySentence(char const*, float, float, soundlevel_t, CBaseEntity*)
    CAI_BaseNPC::PlayScriptedSentence(char const*, float, float, soundlevel_t, bool, CBaseEntity*)
    CAI_BaseNPC::FOkToMakeSound(int)
    CAI_BaseNPC::JustMadeSound(int, float)
    CAI_BaseNPC::DeathSound(CTakeDamageInfo const&)
    CAI_BaseNPC::AlertSound()
    CAI_BaseNPC::IdleSound()
    CAI_BaseNPC::PainSound(CTakeDamageInfo const&)
    CAI_BaseNPC::FearSound()
    CAI_BaseNPC::LostEnemySound()
    CAI_BaseNPC::FoundEnemySound()
    CAI_BaseNPC::BarnacleDeathSound()
    CAI_BaseNPC::SpeakSentence(int)
    CAI_BaseNPC::ShouldPlayIdleSound()
    CAI_BaseNPC::MakeAIFootstepSound(float, float)
    CAI_BaseNPC::GetExpresser()
    CAI_BaseNPC::CanRespondToEvent(char const*)
    CAI_BaseNPC::RespondedTo(char const*, bool, bool)
    CAI_BaseNPC::PlayerHasIlluminatedNPC(CBasePlayer*, float)
    CAI_BaseNPC::CapabilitiesGet() const
    CAI_BaseNPC::IsNavigationUrgent()
    CAI_BaseNPC::ShouldFailNav(bool)
    CAI_BaseNPC::ShouldBruteForceFailedNav()
    CAI_BaseNPC::GetTimeToNavGoal()
    CAI_BaseNPC::MovementCost(int, Vector const&, Vector const&, float*)
    CAI_BaseNPC::CalcIdealYaw(Vector const&)
    CAI_BaseNPC::MaxYawSpeed()
    CAI_BaseNPC::AddFacingTarget(CBaseEntity*, float, float, float)
    CAI_BaseNPC::AddFacingTarget(Vector const&, float, float, float)
    CAI_BaseNPC::AddFacingTarget(CBaseEntity*, Vector const&, float, float, float)
    CAI_BaseNPC::GetFacingDirection(Vector&)
    CAI_BaseNPC::IsJumpLegal(Vector const&, Vector const&, Vector const&) const
    CAI_BaseNPC::StepHeight() const
    CAI_BaseNPC::GetMaxJumpSpeed() const
    CAI_BaseNPC::GetJumpGravity() const
    CAI_BaseNPC::OverrideMove(float)
    CAI_BaseNPC::OverrideMoveFacing(AILocalMoveGoal_t const&, float)
    CAI_BaseNPC::IsUnusableNode(int, CAI_Hint*)
    CAI_BaseNPC::ValidateNavGoal()
    CAI_BaseNPC::IsCurTaskContinuousMove()
    CAI_BaseNPC::IsValidMoveAwayDest(Vector const&)
    CAI_BaseNPC::OnMovementFailed()
    CAI_BaseNPC::OnMovementComplete()
    CAI_BaseNPC::IsUnreachable(CBaseEntity*)
    CAI_BaseNPC::CalcYawSpeed()
    CAI_BaseNPC::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
    CAI_BaseNPC::OnObstructionPreSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
    CAI_BaseNPC::OnObstructingDoor(AILocalMoveGoal_t*, CBaseDoor*, float, AIMoveResult_t*)
    CAI_BaseNPC::OnUpcomingPropDoor(AILocalMoveGoal_t*, CBasePropDoor*, float, AIMoveResult_t*)
    CAI_BaseNPC::GetNodeViewOffset()
    CAI_BaseNPC::EyeOffset(Activity)
    CAI_BaseNPC::EyeLookTarget()
    CAI_BaseNPC::AddLookTarget(CBaseEntity*, float, float, float)
    CAI_BaseNPC::AddLookTarget(Vector const&, float, float, float)
    CAI_BaseNPC::SetHeadDirection(Vector const&, float)
    CAI_BaseNPC::MaintainLookTargets(float)
    CAI_BaseNPC::ValidEyeTarget(Vector const&)
    CAI_BaseNPC::FacingPosition()
    CAI_BaseNPC::MaintainTurnActivity()
    CAI_BaseNPC::AimGun()
    CAI_BaseNPC::SetAim(Vector const&)
    CAI_BaseNPC::RelaxAim()
    CAI_BaseNPC::GetAlternateMoveShootTarget()
    CAI_BaseNPC::InputOutsideTransition(inputdata_t&)
    CAI_BaseNPC::InputInsideTransition(inputdata_t&)
    CAI_BaseNPC::SetScriptedScheduleIgnoreConditions(Interruptability_t)
    CAI_BaseNPC::ScheduledMoveToGoalEntity(int, CBaseEntity*, Activity)
    CAI_BaseNPC::ScheduledFollowPath(int, CBaseEntity*, Activity)
    CAI_BaseNPC::GetEnemies()
    CAI_BaseNPC::RemoveMemory()
    CAI_BaseNPC::UpdateEnemyMemory(CBaseEntity*, Vector const&, CBaseEntity*)
    CAI_BaseNPC::GetReactionDelay(CBaseEntity*)
    CAI_BaseNPC::CanHolsterWeapon()
    CAI_BaseNPC::HolsterWeapon()
    CAI_BaseNPC::UnholsterWeapon()
    CAI_BaseNPC::OnRangeAttack1()
    CAI_BaseNPC::OnUpdateShotRegulator()
    CAI_BaseNPC::InitSquad()
    CAI_BaseNPC::SquadSlotName(int)
    CAI_BaseNPC::SetSquad(CAI_Squad*)
    CAI_BaseNPC::IsSilentSquadMember() const
    CAI_BaseNPC::FindCoverPos(CBaseEntity*, Vector*)
    CAI_BaseNPC::FindCoverPosInRadius(CBaseEntity*, Vector const&, float, Vector*)
    CAI_BaseNPC::FindCoverPos(CSound*, Vector*)
    CAI_BaseNPC::IsValidCover(Vector const&, CAI_Hint const*)
    CAI_BaseNPC::IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
    CAI_BaseNPC::TestShootPosition(Vector const&, Vector const&)
    CAI_BaseNPC::IsCoverPosition(Vector const&, Vector const&)
    CAI_BaseNPC::CoverRadius()
    CAI_BaseNPC::GetMaxTacticalLateralMovement()
    CAI_BaseNPC::OnChangeHintGroup(string_t, string_t)
    CAI_BaseNPC::ShouldFadeOnDeath()
    CAI_BaseNPC::RangeAttack1Conditions(float, float)
    CAI_BaseNPC::RangeAttack2Conditions(float, float)
    CAI_BaseNPC::MeleeAttack1Conditions(float, float)
    CAI_BaseNPC::MeleeAttack2Conditions(float, float)
    CAI_BaseNPC::InnateRange1MinRange()
    CAI_BaseNPC::InnateRange1MaxRange()
    CAI_BaseNPC::OnBeginMoveAndShoot()
    CAI_BaseNPC::OnEndMoveAndShoot()
    CAI_BaseNPC::UseAttackSquadSlots()
    CAI_BaseNPC::FindNamedEntity(char const*, IEntityFindFilter*)
    CAI_BaseNPC::ClearAttackConditions()
    CAI_BaseNPC::ShouldLookForBetterWeapon()
    CAI_BaseNPC::GiveWeapon(string_t)
    CAI_BaseNPC::OnGivenWeapon(CBaseCombatWeapon*)
    CAI_BaseNPC::WeaponLOSCondition(Vector const&, Vector const&, bool)
    CAI_BaseNPC::CurrentWeaponLOSCondition(Vector const&, bool)
    CAI_BaseNPC::IsWaitingToRappel()
    CAI_BaseNPC::BeginRappel()
    CAI_BaseNPC::TranslateNavGoal(CBaseEntity*, Vector&)
    CAI_BaseNPC::GetDefaultNavGoalTolerance()
    CAI_BaseNPC::FCanCheckAttacks()
    CAI_BaseNPC::CheckAmmo()
    CAI_BaseNPC::FValidateHintType(CAI_Hint*)
    CAI_BaseNPC::GetHintActivity(short, Activity)
    CAI_BaseNPC::GetHintDelay(short)
    CAI_BaseNPC::GetCoverActivity(CAI_Hint*)
    CAI_BaseNPC::GetReloadActivity(CAI_Hint*)
    CAI_BaseNPC::SetTurnActivity()
    CAI_BaseNPC::GetHitgroupDamageMultiplier(int, CTakeDamageInfo const&)
    CAI_BaseNPC::PlayerInSpread(Vector const&, Vector const&, float, float, bool)
    CAI_BaseNPC::InnateWeaponLOSCondition(Vector const&, Vector const&, bool)
    CAI_BaseNPC::GetFlinchActivity(bool, bool)
    CAI_BaseNPC::GetShootEnemyDir(Vector const&, bool)
    CAI_BaseNPC::CollectShotStats(Vector const&, Vector const&)
    CAI_BaseNPC::ShouldMoveAndShoot()
    CAI_BaseNPC::IsLightDamage(CTakeDamageInfo const&)
    CAI_BaseNPC::IsHeavyDamage(CTakeDamageInfo const&)
    CAI_BaseNPC::PickupWeapon(CBaseCombatWeapon*)
    CAI_BaseNPC::PickupItem(CBaseEntity*)
    CAI_BaseNPC::NotifyDeadFriend(CBaseEntity*)
    CAI_BaseNPC::CalcReasonableFacing(bool)
    CAI_BaseNPC::IsValidReasonableFacing(Vector const&, float)
    CAI_BaseNPC::GetReasonableFacingDist()
    CAI_BaseNPC::GetClassScheduleIdSpace()
    CAI_BaseNPC::GetSquadSlotDebugName(int)
    CAI_BaseNPC::IsCrouching()
    CAI_BaseNPC::Crouch()
    CAI_BaseNPC::Stand()
    CAI_BaseNPC::DesireCrouch()
    CAI_BaseNPC::IsCrouchedActivity(Activity)
    CAI_BaseNPC::GetCrouchEyeOffset()
    CAI_BaseNPC::GetCrouchGunOffset()
    CAI_BaseNPC::ReportAIState()
    CAI_BaseNPC::ReportOverThinkLimit(float)
    CAI_BaseNPC::ShouldProbeCollideAgainstEntity(CBaseEntity*)
