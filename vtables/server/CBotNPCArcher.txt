VTable for CBotNPCArcher:
    CBotNPCArcher::~CBotNPCArcher()
    CBaseEntity::SetRefEHandle(CBaseHandle const&)
    CBaseEntity::GetRefEHandle() const
    CBaseEntity::GetCollideable()
    CBaseEntity::GetNetworkable()
    CBaseEntity::GetBaseEntity()
    CBaseEntity::GetModelIndex() const
    CBaseEntity::GetModelName() const
    CBaseEntity::SetModelIndex(int)
    NextBotCombatCharacter::GetServerClass()
    NextBotCombatCharacter::YouForgotToImplementOrDeclareServerClass()
    NextBotCombatCharacter::GetDataDescMap()
    NextBotCombatCharacter::GetScriptDesc()
    CBaseEntity::SetModelIndexOverride(int, int)
    CBaseAnimating::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
    CBaseAnimating::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
    CBaseEntity::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
    CBotNPCArcher::ShouldCollide(int, int) const
    CBaseEntity::SetOwnerEntity(CBaseEntity*)
    CBaseEntity::SetScriptOwnerEntity(HSCRIPT__*)
    CBaseEntity::ShouldTransmit(CCheckTransmitInfo const*)
    CBaseEntity::UpdateTransmitState()
    CBaseCombatCharacter::SetTransmit(CCheckTransmitInfo*, bool)
    CBaseEntity::GetTracerType()
    CBotNPCArcher::Spawn()
    CBotNPCArcher::Precache()
    NextBotCombatCharacter::SetModel(char const*)
    CBaseAnimating::OnNewModel()
    CBaseEntity::PostConstructor(char const*)
    CBaseEntity::PostClientActive()
    CBaseEntity::ParseMapData(CEntityMapData*)
    CBaseEntity::KeyValue(char const*, char const*)
    CBaseEntity::KeyValue(char const*, float)
    CBaseEntity::KeyValue(char const*, Vector const&)
    CBaseEntity::GetKeyValue(char const*, char*, int)
    CBaseAnimating::Activate()
    CBaseEntity::SetParent(CBaseEntity*, int)
    CBaseEntity::ObjectCaps()
    CBaseEntity::AcceptInput(char const*, CBaseEntity*, CBaseEntity*, variant_t, int)
    CBaseAnimating::GetInputDispatchEffectPosition(char const*, Vector&, QAngle&)
    CBaseEntity::DrawDebugGeometryOverlays()
    CBaseAnimating::DrawDebugTextOverlays()
    CBaseEntity::Save(ISave&)
    CBaseCombatCharacter::Restore(IRestore&)
    CBaseEntity::ShouldSavePhysics()
    CBaseEntity::OnSave(IEntitySaveUtils*)
    CBaseAnimatingOverlay::OnRestore()
    CBaseEntity::RequiredEdictIndex()
    CBaseEntity::MoveDone()
    CBaseEntity::Think()
    CBaseEntity::NetworkStateChanged_m_nNextThinkTick()
    CBaseEntity::NetworkStateChanged_m_nNextThinkTick(void*)
    CBaseAnimating::GetBaseAnimating()
    CBaseEntity::GetResponseSystem()
    CBaseEntity::DispatchResponse(char const*)
    CBaseEntity::Classify()
    CBaseEntity::DeathNotice(CBaseEntity*)
    CBaseEntity::ShouldAttractAutoAim(CBaseEntity*)
    CBaseEntity::GetAutoAimRadius()
    CBaseEntity::GetAutoAimCenter()
    CBaseEntity::GetBeamTraceFilter()
    CBaseEntity::PassesDamageFilter(CTakeDamageInfo const&)
    CBaseEntity::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*, CDmgAccumulator*)
    CBaseEntity::CanBeHitByMeleeAttack(CBaseEntity*)
    CBaseCombatCharacter::OnTakeDamage(CTakeDamageInfo const&)
    CBaseEntity::AdjustDamageDirection(CTakeDamageInfo const&, Vector&, CBaseEntity*)
    CBaseCombatCharacter::TakeHealth(float, int)
    CBaseEntity::IsAlive()
    NextBotCombatCharacter::Event_Killed(CTakeDamageInfo const&)
    CBaseEntity::Event_KilledOther(CBaseEntity*, CTakeDamageInfo const&)
    CBaseCombatCharacter::BloodColor()
    CBaseEntity::IsTriggered(CBaseEntity*)
    CBaseEntity::IsNPC() const
    CBaseCombatCharacter::MyCombatCharacterPointer()
    NextBotCombatCharacter::MyNextBotPointer()
    CBaseEntity::GetDelay()
    CBaseEntity::IsMoving()
    CBaseEntity::DamageDecal(int, int)
    CBaseEntity::DecalTrace(CGameTrace*, char const*)
    CBaseEntity::ImpactTrace(CGameTrace*, int, char const*)
    CBaseEntity::OnControls(CBaseEntity*)
    CBaseEntity::HasTarget(string_t)
    CBaseEntity::IsPlayer() const
    CBaseEntity::IsNetClient() const
    CBaseEntity::IsTemplate()
    CBaseEntity::IsBaseObject() const
    CBaseEntity::IsBaseTrain() const
    CBaseEntity::IsCombatItem() const
    CBaseEntity::IsProjectileCollisionTarget() const
    CBaseEntity::IsFuncLOD() const
    CBaseEntity::IsBaseProjectile() const
    CBaseEntity::IsBaseCombatWeapon() const
    CBaseEntity::IsWearable() const
    CBaseEntity::MyCombatWeaponPointer()
    CBaseEntity::GetServerVehicle()
    CBaseEntity::IsViewable()
    CBaseCombatCharacter::ChangeTeam(int)
    CBaseEntity::OnEntityEvent(EntityEvent_t, void*)
    CBaseEntity::CanStandOn(CBaseEntity*) const
    CBaseEntity::CanStandOn(edict_t*) const
    CBaseEntity::GetEnemy()
    CBaseEntity::GetEnemy() const
    CBaseEntity::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
    CBaseEntity::StartTouch(CBaseEntity*)
    NextBotCombatCharacter::Touch(CBaseEntity*)
    CBaseEntity::EndTouch(CBaseEntity*)
    CBaseEntity::StartBlocked(CBaseEntity*)
    CBaseEntity::Blocked(CBaseEntity*)
    CBaseEntity::EndBlocked()
    CBaseEntity::PhysicsSimulate()
    CBaseCombatCharacter::UpdateOnRemove()
    CBaseEntity::StopLoopingSounds()
    CBaseEntity::SUB_AllowedToFade()
    CBaseFlex::Teleport(Vector const*, QAngle const*, Vector const*)
    CBaseEntity::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
    CBaseEntity::MakeTracer(Vector const&, CGameTrace const&, int)
    CBaseEntity::GetTracerAttachment()
    CBaseEntity::FireBullets(FireBulletsInfo_t const&)
    CBaseEntity::DoImpactEffect(CGameTrace&, int)
    CBaseEntity::ModifyFireBulletsDamage(CTakeDamageInfo*)
    CBaseEntity::Respawn()
    CBaseEntity::IsLockedByMaster()
    CBaseEntity::GetMaxHealth() const
    CBaseAnimating::ModifyOrAppendCriteria(AI_CriteriaSet&)
    CBaseEntity::NetworkStateChanged_m_iMaxHealth()
    CBaseEntity::NetworkStateChanged_m_iMaxHealth(void*)
    CBaseEntity::NetworkStateChanged_m_iHealth()
    CBaseEntity::NetworkStateChanged_m_iHealth(void*)
    CBaseEntity::NetworkStateChanged_m_lifeState()
    CBaseEntity::NetworkStateChanged_m_lifeState(void*)
    CBaseEntity::NetworkStateChanged_m_takedamage()
    CBaseEntity::NetworkStateChanged_m_takedamage(void*)
    CBaseEntity::RunVScripts()
    CBaseEntity::GetDamageType() const
    CBaseEntity::GetDamage()
    CBaseEntity::SetDamage(float)
    CBotNPCArcher::EyePosition()
    CBaseEntity::EyeAngles()
    CBaseEntity::LocalEyeAngles()
    CBaseEntity::EarPosition()
    CBaseEntity::BodyTarget(Vector const&, bool)
    CBaseEntity::HeadTarget(Vector const&)
    CBaseEntity::GetVectors(Vector*, Vector*, Vector*) const
    CBaseEntity::GetViewOffset() const
    CBaseEntity::SetViewOffset(Vector const&)
    CBaseEntity::GetSmoothedVelocity()
    CBaseAnimating::GetVelocity(Vector*, Vector*)
    CBaseCombatCharacter::FVisible(CBaseEntity*, int, CBaseEntity**)
    CBaseCombatCharacter::FVisible(Vector const&, int, CBaseEntity**)
    CBaseEntity::CanBeSeenBy(CAI_BaseNPC*)
    CBaseEntity::GetAttackDamageScale(CBaseEntity*)
    CBaseEntity::GetReceivedDamageScale(CBaseEntity*)
    CBaseEntity::GetGroundVelocityToApply(Vector&)
    CBaseEntity::PhysicsSplash(Vector const&, Vector const&, float, float)
    CBaseEntity::Splash()
    CBaseEntity::WorldSpaceCenter() const
    CBaseEntity::GetSoundEmissionOrigin() const
    CBaseEntity::ModifyEmitSoundParams(EmitSound_t&)
    CBaseEntity::IsDeflectable()
    CBaseEntity::Deflected(CBaseEntity*, Vector&)
    CBaseEntity::CreateVPhysics()
    CBaseEntity::ForceVPhysicsCollide(CBaseEntity*)
    CBaseEntity::VPhysicsDestroyObject()
    CBaseCombatCharacter::VPhysicsUpdate(IPhysicsObject*)
    CBaseEntity::VPhysicsTakeDamage(CTakeDamageInfo const&)
    CBaseCombatCharacter::VPhysicsShadowCollision(int, gamevcollisionevent_t*)
    CBaseEntity::VPhysicsShadowUpdate(IPhysicsObject*)
    CBaseEntity::VPhysicsCollision(int, gamevcollisionevent_t*)
    CBaseEntity::VPhysicsFriction(IPhysicsObject*, float, int, int)
    CBaseEntity::UpdatePhysicsShadowToCurrentPosition(float)
    CBaseEntity::VPhysicsGetObjectList(IPhysicsObject**, int)
    CBaseEntity::VPhysicsIsFlesh()
    CBaseEntity::HasPhysicsAttacker(float)
    CBotNPCArcher::PhysicsSolidMaskForEntity() const
    CBaseEntity::ResolveFlyCollisionCustom(CGameTrace&, Vector&)
    NextBotCombatCharacter::PerformCustomPhysics(Vector*, Vector*, QAngle*, QAngle*)
    CBaseAnimating::GetStepOrigin() const
    CBaseAnimating::GetStepAngles() const
    CBaseEntity::ShouldDrawWaterImpacts()
    CBaseEntity::NetworkStateChanged_m_fFlags()
    CBaseEntity::NetworkStateChanged_m_fFlags(void*)
    CBaseEntity::NetworkStateChanged_m_nWaterLevel()
    CBaseEntity::NetworkStateChanged_m_nWaterLevel(void*)
    CBaseEntity::NetworkStateChanged_m_hGroundEntity()
    CBaseEntity::NetworkStateChanged_m_hGroundEntity(void*)
    CBaseEntity::NetworkStateChanged_m_vecBaseVelocity()
    CBaseEntity::NetworkStateChanged_m_vecBaseVelocity(void*)
    CBaseEntity::NetworkStateChanged_m_flFriction()
    CBaseEntity::NetworkStateChanged_m_flFriction(void*)
    CBaseEntity::NetworkStateChanged_m_vecVelocity()
    CBaseEntity::NetworkStateChanged_m_vecVelocity(void*)
    CBaseEntity::NetworkStateChanged_m_vecViewOffset()
    CBaseEntity::NetworkStateChanged_m_vecViewOffset(void*)
    CBaseEntity::ShouldBlockNav() const
    CBaseEntity::ShouldForceTransmitsForTeam(int)
    CBaseEntity::IsTruceValidForEnt() const
    CBaseEntity::GetDefaultItemChargeMeterValue() const
    CBaseEntity::BCanCallVote()
    CBaseAnimating::GetIdealSpeed() const
    CBaseAnimating::GetIdealAccel() const
    CBaseAnimatingOverlay::StudioFrameAdvance()
    CBaseAnimating::SetSequence(int)
    CBaseAnimating::IsActivityFinished()
    CBaseAnimating::GetSequenceGroundSpeed(CStudioHdr*, int)
    CBaseAnimating::ClampRagdollForce(Vector const&, Vector*)
    CBaseAnimating::BecomeRagdollOnClient(Vector const&)
    CBaseAnimating::IsRagdoll()
    CBaseAnimating::CanBecomeRagdoll()
    CBaseAnimatingOverlay::GetSkeleton(CStudioHdr*, Vector*, Quaternion*, int)
    CBaseAnimating::GetBoneTransform(int, matrix3x4_t&)
    CBaseAnimating::SetupBones(matrix3x4_t*, int)
    CBaseAnimating::CalculateIKLocks(float)
    CBaseAnimatingOverlay::DispatchAnimEvents(CBaseAnimating*)
    NextBotCombatCharacter::HandleAnimEvent(animevent_t*)
    CBaseAnimating::PopulatePoseParameters()
    CBaseAnimating::GetAttachment(int, matrix3x4_t&)
    CBaseAnimating::InitBoneControllers()
    CBaseAnimating::GetGroundSpeedVelocity()
    CBaseAnimating::RefreshCollisionBounds()
    NextBotCombatCharacter::Ignite(float, bool, float, bool)
    CBaseAnimating::IgniteLifetime(float)
    CBaseAnimating::IgniteNumHitboxFires(int)
    CBaseAnimating::IgniteHitboxFireScale(float)
    CBaseAnimating::Extinguish()
    CBaseCombatCharacter::SetLightingOriginRelative(CBaseEntity*)
    CBaseAnimating::SetLightingOrigin(CBaseEntity*)
    CBaseFlex::SetViewtarget(Vector const&)
    CBaseFlex::StartSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*, CChoreoActor*, CBaseEntity*)
    CBaseFlex::ProcessSceneEvents()
    CBaseFlex::ProcessSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
    CBaseFlex::ClearSceneEvent(CSceneEventInfo*, bool, bool)
    CBaseFlex::CheckSceneEventCompletion(CSceneEventInfo*, float, CChoreoScene*, CChoreoEvent*)
    CBaseFlex::PlayScene(char const*, float, AI_Response*, IRecipientFilter*)
    CBaseFlex::PlayAutoGeneratedSoundScene(char const*)
    CBaseFlex::GetSpecialDSP()
    CBaseCombatCharacter::GetPhysicsImpactDamageTable()
    CBaseCombatCharacter::FInViewCone(CBaseEntity*)
    CBaseCombatCharacter::FInViewCone(Vector const&)
    CBaseCombatCharacter::FInAimCone(CBaseEntity*)
    CBaseCombatCharacter::FInAimCone(Vector const&)
    CBaseCombatCharacter::ShouldShootMissTarget(CBaseCombatCharacter*)
    CBaseCombatCharacter::FindMissTarget()
    CBaseCombatCharacter::HandleInteraction(int, void*, CBaseCombatCharacter*)
    CBaseCombatCharacter::BodyAngles()
    CBaseCombatCharacter::BodyDirection2D()
    CBaseCombatCharacter::BodyDirection3D()
    CBaseCombatCharacter::HeadDirection2D()
    CBaseCombatCharacter::HeadDirection3D()
    CBaseCombatCharacter::EyeDirection2D()
    CBaseCombatCharacter::EyeDirection3D()
    CBaseCombatCharacter::IsHiddenByFog(Vector const&) const
    CBaseCombatCharacter::IsHiddenByFog(CBaseEntity*) const
    CBaseCombatCharacter::IsHiddenByFog(float) const
    CBaseCombatCharacter::GetFogObscuredRatio(Vector const&) const
    CBaseCombatCharacter::GetFogObscuredRatio(CBaseEntity*) const
    CBaseCombatCharacter::GetFogObscuredRatio(float) const
    CBaseCombatCharacter::IsLookingTowards(CBaseEntity const*, float) const
    CBaseCombatCharacter::IsLookingTowards(Vector const&, float) const
    CBaseCombatCharacter::IsInFieldOfView(CBaseEntity*) const
    CBaseCombatCharacter::IsInFieldOfView(Vector const&) const
    CBaseCombatCharacter::IsLineOfSightClear(CBaseEntity*, CBaseCombatCharacter::LineOfSightCheckType) const
    CBaseCombatCharacter::IsLineOfSightClear(Vector const&, CBaseCombatCharacter::LineOfSightCheckType, CBaseEntity*) const
    CBaseCombatCharacter::GiveAmmo(int, int, bool)
    CBaseCombatCharacter::RemoveAmmo(int, int)
    CBaseCombatCharacter::RemoveAmmo(int, char const*)
    CBaseCombatCharacter::GetAmmoCount(int) const
    CBaseCombatCharacter::NPC_TranslateActivity(Activity)
    CBaseCombatCharacter::Weapon_TranslateActivity(Activity, bool*)
    CBaseCombatCharacter::Weapon_FrameUpdate()
    CBaseCombatCharacter::Weapon_HandleAnimEvent(animevent_t*)
    CBaseCombatCharacter::Weapon_CanUse(CBaseCombatWeapon*)
    CBaseCombatCharacter::Weapon_Equip(CBaseCombatWeapon*)
    CBaseCombatCharacter::Weapon_EquipAmmoOnly(CBaseCombatWeapon*)
    CBaseCombatCharacter::Weapon_Drop(CBaseCombatWeapon*, Vector const*, Vector const*)
    CBaseCombatCharacter::Weapon_Switch(CBaseCombatWeapon*, int)
    CBaseCombatCharacter::Weapon_ShootPosition()
    CBaseCombatCharacter::Weapon_CanSwitchTo(CBaseCombatWeapon*)
    CBaseCombatCharacter::Weapon_SlotOccupied(CBaseCombatWeapon*)
    CBaseCombatCharacter::Weapon_GetSlot(int) const
    CBaseCombatCharacter::AddPlayerItem(CBaseCombatWeapon*)
    CBaseCombatCharacter::RemovePlayerItem(CBaseCombatWeapon*)
    CBaseCombatCharacter::CanBecomeServerRagdoll()
    NextBotCombatCharacter::OnTakeDamage_Alive(CTakeDamageInfo const&)
    NextBotCombatCharacter::OnTakeDamage_Dying(CTakeDamageInfo const&)
    CBaseCombatCharacter::OnTakeDamage_Dead(CTakeDamageInfo const&)
    CBaseCombatCharacter::GetAliveDuration() const
    CBaseCombatCharacter::OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
    CBaseCombatCharacter::NotifyFriendsOfDamage(CBaseEntity*)
    CBaseCombatCharacter::HasEverBeenInjured(int) const
    CBaseCombatCharacter::GetTimeSinceLastInjury(int) const
    CBaseCombatCharacter::OnPlayerKilledOther(CBaseEntity*, CTakeDamageInfo const&)
    CBaseCombatCharacter::GetDeathActivity()
    CBaseCombatCharacter::CorpseGib(CTakeDamageInfo const&)
    CBaseCombatCharacter::CorpseFade()
    CBaseCombatCharacter::HasHumanGibs()
    CBaseCombatCharacter::HasAlienGibs()
    CBaseCombatCharacter::ShouldGib(CTakeDamageInfo const&)
    CBaseCombatCharacter::OnKilledNPC(CBaseCombatCharacter*)
    CBaseCombatCharacter::Event_Gibbed(CTakeDamageInfo const&)
    CBaseCombatCharacter::Event_Dying(CTakeDamageInfo const&)
    CBaseCombatCharacter::Event_Dying()
    NextBotCombatCharacter::BecomeRagdoll(CTakeDamageInfo const&, Vector const&)
    CBaseCombatCharacter::FixupBurningServerRagdoll(CBaseEntity*)
    CBaseCombatCharacter::BecomeRagdollBoogie(CBaseEntity*, Vector const&, float, int)
    CBaseCombatCharacter::CheckTraceHullAttack(float, Vector const&, Vector const&, int, int, float, bool)
    CBaseCombatCharacter::CheckTraceHullAttack(Vector const&, Vector const&, Vector const&, Vector const&, int, int, float, bool)
    CBaseCombatCharacter::PushawayTouch(CBaseEntity*)
    CBaseCombatCharacter::IRelationType(CBaseEntity*)
    CBaseCombatCharacter::IRelationPriority(CBaseEntity*)
    CBaseCombatCharacter::IsInAVehicle() const
    CBaseCombatCharacter::GetVehicle()
    CBaseCombatCharacter::GetVehicleEntity()
    CBaseCombatCharacter::ExitVehicle()
    CBaseCombatCharacter::RemoveAllWeapons()
    CBaseCombatCharacter::CalcWeaponProficiency(CBaseCombatWeapon*)
    CBaseCombatCharacter::GetAttackSpread(CBaseCombatWeapon*, CBaseEntity*)
    CBaseCombatCharacter::GetSpreadBias(CBaseCombatWeapon*, CBaseEntity*)
    CBaseCombatCharacter::DoMuzzleFlash()
    CBaseCombatCharacter::AddEntityRelationship(CBaseEntity*, Disposition_t, int)
    CBaseCombatCharacter::RemoveEntityRelationship(CBaseEntity*)
    CBaseCombatCharacter::AddClassRelationship(Class_T, Disposition_t, int)
    CBaseCombatCharacter::OnChangeActiveWeapon(CBaseCombatWeapon*, CBaseCombatWeapon*)
    CBaseCombatCharacter::GetLastKnownArea() const
    NextBotCombatCharacter::IsAreaTraversable(CNavArea const*) const
    CBaseCombatCharacter::ClearLastKnownArea()
    CBaseCombatCharacter::UpdateLastKnownArea()
    NextBotCombatCharacter::OnNavAreaChanged(CNavArea*, CNavArea*)
    CBaseCombatCharacter::OnNavAreaRemoved(CNavArea*)
    CBaseCombatCharacter::OnPursuedBy(INextBot*)
    CBaseCombatCharacter::GetBossType() const
    CBaseCombatCharacter::NetworkStateChanged_m_iAmmo()
    CBaseCombatCharacter::NetworkStateChanged_m_iAmmo(void*)
    NextBotCombatCharacter::Ignite(float, CBaseEntity*)
    NextBotCombatCharacter::IsUseableEntity(CBaseEntity*, unsigned int)
    NextBotCombatCharacter::GetLastAttacker() const
    NextBotCombatCharacter::GetEntity() const
    NextBotCombatCharacter::GetNextBotCombatCharacter() const
    CBotNPCArcher::GetIntentionInterface() const
    CBotNPCArcher::GetLocomotionInterface() const
    CBotNPCArcher::GetBodyInterface() const
