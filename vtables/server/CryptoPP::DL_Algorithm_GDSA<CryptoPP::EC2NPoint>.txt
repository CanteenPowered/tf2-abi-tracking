VTable for CryptoPP::DL_Algorithm_GDSA<CryptoPP::ECPPoint>:
    [0] CryptoPP::DL_ObjectImplBase<CryptoPP::DL_SignerBase<CryptoPP::Integer>, CryptoPP::DL_SignatureSchemeOptions<CryptoPP::DSA2<CryptoPP::SHA1>, CryptoPP::DL_Keys_DSA, CryptoPP::DL_Algorithm_GDSA<CryptoPP::Integer>, CryptoPP::DL_SignatureMessageEncodingMethod_DSA, CryptoPP::SHA1>, CryptoPP::DL_PrivateKey_WithSignaturePairwiseConsistencyTest<CryptoPP::DL_PrivateKey_GFP<CryptoPP::DL_GroupParameters_DSA>, CryptoPP::DSA2<CryptoPP::SHA1>>>::~DL_ObjectImplBase()
    [1] CryptoPP::DL_SignatureSchemeBase<CryptoPP::PK_Signer, CryptoPP::DL_PrivateKey<CryptoPP::Integer>>::SignatureLength() const
    [2] CryptoPP::PK_SignatureScheme::MaxSignatureLength(unsigned int) const
    [3] CryptoPP::DL_SignatureSchemeBase<CryptoPP::PK_Signer, CryptoPP::DL_PrivateKey<CryptoPP::Integer>>::MaxRecoverableLength() const
    [4] CryptoPP::DL_SignatureSchemeBase<CryptoPP::PK_Signer, CryptoPP::DL_PrivateKey<CryptoPP::Integer>>::MaxRecoverableLengthFromSignatureLength(unsigned int) const
    [5] CryptoPP::DL_SignatureSchemeBase<CryptoPP::PK_Signer, CryptoPP::DL_PrivateKey<CryptoPP::Integer>>::IsProbabilistic() const
    [6] CryptoPP::DL_SignatureSchemeBase<CryptoPP::PK_Signer, CryptoPP::DL_PrivateKey<CryptoPP::Integer>>::AllowNonrecoverablePart() const
    [7] CryptoPP::PK_SignatureScheme::SignatureUpfront() const
    [8] CryptoPP::DL_SignatureSchemeBase<CryptoPP::PK_Signer, CryptoPP::DL_PrivateKey<CryptoPP::Integer>>::RecoverablePartFirst() const
VTable for CryptoPP::DL_Algorithm_GDSA<CryptoPP::Integer>:
    [0] CryptoPP::CryptoMaterial::ThrowIfInvalid(CryptoPP::RandomNumberGenerator&, unsigned int) const
    [1] CryptoPP::CryptoMaterial::Save(CryptoPP::BufferedTransformation&) const
    [2] CryptoPP::CryptoMaterial::Load(CryptoPP::BufferedTransformation&)
    [3] CryptoPP::CryptoMaterial::SupportsPrecomputation() const
    [4] CryptoPP::CryptoMaterial::Precompute(unsigned int)
    [5] CryptoPP::CryptoMaterial::LoadPrecomputation(CryptoPP::BufferedTransformation&)
    [6] CryptoPP::CryptoMaterial::SavePrecomputation(CryptoPP::BufferedTransformation&) const
    [7] CryptoPP::GeneratableCryptoMaterial::GenerateRandom(CryptoPP::RandomNumberGenerator&, CryptoPP::NameValuePairs const&)
VTable for CryptoPP::DL_Algorithm_GDSA<CryptoPP::EC2NPoint>:
