VTable for CSingleplayRules:
    [0] CBaseGameSystemPerFrame::Init()
    [1] CBaseGameSystemPerFrame::PostInit()
    [2] CBaseGameSystemPerFrame::Shutdown()
    [3] CBaseGameSystemPerFrame::LevelInitPreEntity()
    [4] CBaseGameSystemPerFrame::LevelInitPostEntity()
    [5] CBaseGameSystemPerFrame::LevelShutdownPreClearSteamAPIContext()
    [6] CBaseGameSystemPerFrame::LevelShutdownPreEntity()
    [7] CGameRules::LevelShutdownPostEntity()
    [8] CBaseGameSystemPerFrame::OnSave()
    [9] CBaseGameSystemPerFrame::OnRestore()
    [10] CBaseGameSystemPerFrame::SafeRemoveIfDesired()
    [11] CBaseGameSystemPerFrame::IsPerFrame()
    [12] CSingleplayRules::~CSingleplayRules()
    [13] CSingleplayRules::~CSingleplayRules()
    [14] CBaseGameSystemPerFrame::FrameUpdatePreEntityThink()
    [15] CGameRules::FrameUpdatePostEntityThink()
    [16] CBaseGameSystemPerFrame::PreClientUpdate()
    [17] CSingleplayRules::Damage_IsTimeBased(int)
    [18] CSingleplayRules::Damage_ShouldGibCorpse(int)
    [19] CSingleplayRules::Damage_ShowOnHUD(int)
    [20] CSingleplayRules::Damage_NoPhysicsForce(int)
    [21] CSingleplayRules::Damage_ShouldNotBleed(int)
    [22] CSingleplayRules::Damage_GetTimeBased()
    [23] CSingleplayRules::Damage_GetShouldGibCorpse()
    [24] CSingleplayRules::Damage_GetShowOnHud()
    [25] CSingleplayRules::Damage_GetNoPhysicsForce()
    [26] CSingleplayRules::Damage_GetShouldNotBleed()
    [27] CSingleplayRules::SwitchToNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
    [28] CSingleplayRules::GetNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
    [29] CGameRules::ShouldCollide(int, int)
    [30] CGameRules::DefaultFOV()
    [31] CGameRules::GetViewVectors() const
    [32] CGameRules::GetAmmoDamage(CBaseEntity*, CBaseEntity*, int)
    [33] CGameRules::GetDamageMultiplier()
    [34] CSingleplayRules::IsMultiplayer()
    [35] CGameRules::GetEncryptionKey()
    [36] CGameRules::InRoundRestart()
    [37] CGameRules::AllowThirdPersonCamera()
    [38] CGameRules::ClientCommandKeyValues(edict_t*, KeyValues*)
    [39] CGameRules::IsConnectedUserInfoChangeAllowed(CBasePlayer*)
    [40] CGameRules::Status(void (*)(char const*, ...))
    [41] CGameRules::GetTaggedConVarList(KeyValues*)
    [42] CGameRules::CheckHaptics(CBasePlayer*)
    [43] CGameRules::LevelShutdown()
    [44] CGameRules::Precache()
    [45] CGameRules::RefreshSkillData(bool)
    [46] CSingleplayRules::Think()
    [47] CSingleplayRules::IsAllowedToSpawn(CBaseEntity*)
    [48] CGameRules::EndGameFrame()
    [49] CGameRules::IsSkillLevel(int)
    [50] CGameRules::GetSkillLevel()
    [51] CGameRules::OnSkillLevelChanged(int)
    [52] CGameRules::SetSkillLevel(int)
    [53] CSingleplayRules::FAllowFlashlight()
    [54] CSingleplayRules::FShouldSwitchWeapon(CBasePlayer*, CBaseCombatWeapon*)
    [55] CSingleplayRules::IsDeathmatch()
    [56] CGameRules::IsTeamplay()
    [57] CSingleplayRules::IsCoOp()
    [58] CGameRules::GetGameDescription()
    [59] CSingleplayRules::ClientConnected(edict_t*, char const*, char const*, char*, int)
    [60] CSingleplayRules::InitHUD(CBasePlayer*)
    [61] CSingleplayRules::ClientDisconnected(edict_t*)
    [62] CSingleplayRules::FlPlayerFallDamage(CBasePlayer*)
    [63] CGameRules::FPlayerCanTakeDamage(CBasePlayer*, CBaseEntity*, CTakeDamageInfo const&)
    [64] CGameRules::ShouldAutoAim(CBasePlayer*, edict_t*)
    [65] CGameRules::GetAutoAimScale(CBasePlayer*)
    [66] CSingleplayRules::GetAutoAimMode()
    [67] CGameRules::ShouldUseRobustRadiusDamage(CBaseEntity*)
    [68] CGameRules::RadiusDamage(CTakeDamageInfo const&, Vector const&, float, int, CBaseEntity*)
    [69] CGameRules::FlPlayerFallDeathDoesScreenFade(CBasePlayer*)
    [70] CSingleplayRules::AllowDamage(CBaseEntity*, CTakeDamageInfo const&)
    [71] CSingleplayRules::PlayerSpawn(CBasePlayer*)
