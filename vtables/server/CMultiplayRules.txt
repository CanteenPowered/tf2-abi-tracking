VTable for CMultiplayRules:
    [0] CMultiplayRules::Init()
    [1] CBaseGameSystemPerFrame::PostInit()
    [2] CBaseGameSystemPerFrame::Shutdown()
    [3] CBaseGameSystemPerFrame::LevelInitPreEntity()
    [4] CBaseGameSystemPerFrame::LevelInitPostEntity()
    [5] CBaseGameSystemPerFrame::LevelShutdownPreClearSteamAPIContext()
    [6] CBaseGameSystemPerFrame::LevelShutdownPreEntity()
    [7] CBaseGameSystemPerFrame::LevelShutdownPostEntity()
    [8] CBaseGameSystemPerFrame::OnSave()
    [9] CBaseGameSystemPerFrame::OnRestore()
    [10] CBaseGameSystemPerFrame::SafeRemoveIfDesired()
    [11] CBaseGameSystemPerFrame::IsPerFrame()
    [12] CMultiplayRules::~CMultiplayRules()
    [13] CMultiplayRules::~CMultiplayRules()
    [14] CBaseGameSystemPerFrame::FrameUpdatePreEntityThink()
    [15] CMultiplayRules::FrameUpdatePostEntityThink()
    [16] CBaseGameSystemPerFrame::PreClientUpdate()
    [17] CMultiplayRules::Damage_IsTimeBased(int)
    [18] CMultiplayRules::Damage_ShouldGibCorpse(int)
    [19] CMultiplayRules::Damage_ShowOnHUD(int)
    [20] CMultiplayRules::Damage_NoPhysicsForce(int)
    [21] CMultiplayRules::Damage_ShouldNotBleed(int)
    [22] CMultiplayRules::Damage_GetTimeBased()
    [23] CMultiplayRules::Damage_GetShouldGibCorpse()
    [24] CMultiplayRules::Damage_GetShowOnHud()
    [25] CMultiplayRules::Damage_GetNoPhysicsForce()
    [26] CMultiplayRules::Damage_GetShouldNotBleed()
    [27] CMultiplayRules::SwitchToNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
    [28] CMultiplayRules::GetNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
    [29] CGameRules::ShouldCollide(int, int)
    [30] CGameRules::DefaultFOV()
    [31] CGameRules::GetViewVectors() const
    [32] CGameRules::GetAmmoDamage(CBaseEntity*, CBaseEntity*, int)
    [33] CGameRules::GetDamageMultiplier()
    [34] CMultiplayRules::IsMultiplayer()
    [35] CGameRules::GetEncryptionKey()
    [36] CGameRules::InRoundRestart()
    [37] CGameRules::AllowThirdPersonCamera()
    [38] CMultiplayRules::ClientCommandKeyValues(edict_t*, KeyValues*)
    [39] CGameRules::IsConnectedUserInfoChangeAllowed(CBasePlayer*)
    [40] CGameRules::Status(void (*)(char const*, ...))
    [41] CMultiplayRules::GetTaggedConVarList(KeyValues*)
    [42] CGameRules::CheckHaptics(CBasePlayer*)
    [43] CGameRules::LevelShutdown()
    [44] CGameRules::Precache()
    [45] CMultiplayRules::RefreshSkillData(bool)
    [46] CMultiplayRules::Think()
    [47] CMultiplayRules::IsAllowedToSpawn(CBaseEntity*)
    [48] CGameRules::EndGameFrame()
    [49] CGameRules::IsSkillLevel(int)
    [50] CGameRules::GetSkillLevel()
    [51] CGameRules::OnSkillLevelChanged(int)
    [52] CGameRules::SetSkillLevel(int)
    [53] CMultiplayRules::FAllowFlashlight()
    [54] CMultiplayRules::FShouldSwitchWeapon(CBasePlayer*, CBaseCombatWeapon*)
    [55] CMultiplayRules::IsDeathmatch()
    [56] CGameRules::IsTeamplay()
    [57] CMultiplayRules::IsCoOp()
    [58] CGameRules::GetGameDescription()
    [59] CMultiplayRules::ClientConnected(edict_t*, char const*, char const*, char*, int)
    [60] CMultiplayRules::InitHUD(CBasePlayer*)
    [61] CMultiplayRules::ClientDisconnected(edict_t*)
    [62] CMultiplayRules::FlPlayerFallDamage(CBasePlayer*)
    [63] CMultiplayRules::FPlayerCanTakeDamage(CBasePlayer*, CBaseEntity*, CTakeDamageInfo const&)
    [64] CGameRules::ShouldAutoAim(CBasePlayer*, edict_t*)
    [65] CGameRules::GetAutoAimScale(CBasePlayer*)
    [66] CGameRules::GetAutoAimMode()
    [67] CGameRules::ShouldUseRobustRadiusDamage(CBaseEntity*)
    [68] CGameRules::RadiusDamage(CTakeDamageInfo const&, Vector const&, float, int, CBaseEntity*)
    [69] CGameRules::FlPlayerFallDeathDoesScreenFade(CBasePlayer*)
    [70] CMultiplayRules::AllowDamage(CBaseEntity*, CTakeDamageInfo const&)
    [71] CMultiplayRules::PlayerSpawn(CBasePlayer*)
    [72] CMultiplayRules::PlayerThink(CBasePlayer*)
    [73] CMultiplayRules::FPlayerCanRespawn(CBasePlayer*)
    [74] CMultiplayRules::FlPlayerSpawnTime(CBasePlayer*)
    [75] CMultiplayRules::GetPlayerSpawnSpot(CBasePlayer*)
    [76] CGameRules::IsSpawnPointValid(CBaseEntity*, CBasePlayer*)
    [77] CMultiplayRules::AllowAutoTargetCrosshair()
    [78] CMultiplayRules::ClientCommand(CBaseEntity*, CCommand const&)
    [79] CMultiplayRules::ClientSettingsChanged(CBasePlayer*)
    [80] CMultiplayRules::IPointsForKill(CBasePlayer*, CBasePlayer*)
    [81] CMultiplayRules::PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)
    [82] CMultiplayRules::DeathNotice(CBasePlayer*, CTakeDamageInfo const&)
    [83] CGameRules::GetDamageCustomString(CTakeDamageInfo const&)
    [84] CGameRules::AdjustPlayerDamageInflicted(float)
    [85] CGameRules::AdjustPlayerDamageTaken(CTakeDamageInfo*)
    [86] CMultiplayRules::CanHavePlayerItem(CBasePlayer*, CBaseCombatWeapon*)
    [87] CMultiplayRules::WeaponShouldRespawn(CBaseCombatWeapon*)
    [88] CMultiplayRules::FlWeaponRespawnTime(CBaseCombatWeapon*)
    [89] CMultiplayRules::FlWeaponTryRespawn(CBaseCombatWeapon*)
    [90] CMultiplayRules::VecWeaponRespawnSpot(CBaseCombatWeapon*)
    [91] CMultiplayRules::CanHaveItem(CBasePlayer*, CItem*)
    [92] CMultiplayRules::PlayerGotItem(CBasePlayer*, CItem*)
    [93] CMultiplayRules::ItemShouldRespawn(CItem*)
    [94] CMultiplayRules::FlItemRespawnTime(CItem*)
    [95] CMultiplayRules::VecItemRespawnSpot(CItem*)
    [96] CMultiplayRules::VecItemRespawnAngles(CItem*)
    [97] CGameRules::CanHaveAmmo(CBaseCombatCharacter*, int)
    [98] CGameRules::CanHaveAmmo(CBaseCombatCharacter*, char const*)
    [99] CMultiplayRules::PlayerGotAmmo(CBaseCombatCharacter*, char*, int)
    [100] CGameRules::GetAmmoQuantityScale(int)
    [101] CGameRules::InitDefaultAIRelationships()
    [102] CGameRules::AIClassText(int)
    [103] CMultiplayRules::FlHealthChargerRechargeTime()
    [104] CMultiplayRules::FlHEVChargerRechargeTime()
    [105] CMultiplayRules::DeadPlayerWeapons(CBasePlayer*)
    [106] CMultiplayRules::DeadPlayerAmmo(CBasePlayer*)
    [107] CMultiplayRules::GetTeamID(CBaseEntity*)
    [108] CMultiplayRules::PlayerRelationship(CBaseEntity*, CBaseEntity*)
    [109] CMultiplayRules::PlayerCanHearChat(CBasePlayer*, CBasePlayer*)
    [110] CGameRules::CheckChatText(CBasePlayer*, char*)
    [111] CGameRules::GetTeamIndex(char const*)
    [112] CGameRules::GetIndexedTeamName(int)
    [113] CGameRules::IsValidTeam(char const*)
    [114] CGameRules::ChangePlayerTeam(CBasePlayer*, char const*, bool, bool)
    [115] CGameRules::SetDefaultPlayerTeam(CBasePlayer*)
    [116] CGameRules::UpdateClientData(CBasePlayer*)
    [117] CMultiplayRules::PlayTextureSounds()
    [118] CMultiplayRules::PlayFootstepSounds(CBasePlayer*)
    [119] CMultiplayRules::FAllowNPCs()
    [120] CMultiplayRules::EndMultiplayerGame()
    [121] CGameRules::WeaponTraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, CGameTrace*)
    [122] CGameRules::CreateStandardEntities()
    [123] CGameRules::GetChatPrefix(bool, CBasePlayer*)
    [124] CGameRules::GetChatLocation(bool, CBasePlayer*)
    [125] CGameRules::GetChatFormat(bool, CBasePlayer*)
    [126] CGameRules::ShouldBurningPropsEmitLight()
    [127] CGameRules::CanEntityBeUsePushed(CBaseEntity*)
    [128] CGameRules::CreateCustomNetworkStringTables()
    [129] CGameRules::MarkAchievement(IRecipientFilter&, char const*)
    [130] CMultiplayRules::ResetMapCycleTimeStamp()
    [131] CGameRules::OnNavMeshLoad()
    [132] CGameRules::TacticalMissionManagerFactory()
    [133] CGameRules::ProcessVerboseLogOutput()
    [134] CGameRules::GetGameTypeName()
    [135] CGameRules::GetGameType()
    [136] CMultiplayRules::ShouldDrawHeadLabels()
    [137] CGameRules::ClientSpawned(edict_t*)
    [138] CGameRules::OnFileReceived(char const*, unsigned int)
    [139] CGameRules::IsHolidayActive(int) const
    [140] CMultiplayRules::IsManualMapChangeOkay(char const**)
    [141] CMultiplayRules::GetDeathScorer(CBaseEntity*, CBaseEntity*, CBaseEntity*)
    [142] CMultiplayRules::VoiceCommand(CBaseMultiplayerPlayer*, int, int)
    [143] CMultiplayRules::HandleTimeLimitChange()
    [144] CMultiplayRules::InitCustomResponseRulesDicts()
    [145] CMultiplayRules::ShutdownCustomResponseRulesDicts()
    [146] CMultiplayRules::GetNextLevelName(char*, int, bool)
    [147] CMultiplayRules::LoadMapCycleFileIntoVector(char const*, CUtlVector<char*, CUtlMemory<char*, int>>&)
    [148] CMultiplayRules::UseSuicidePenalty()
    [149] CMultiplayRules::GetLastMajorEventTime()
    [150] CMultiplayRules::ChangeLevel()
    [151] CMultiplayRules::GoToIntermission()
    [152] CMultiplayRules::LoadMapCycleFile()
