VTable for CMultiplayRules:
    CMultiplayRules::Init()
    CBaseGameSystemPerFrame::PostInit()
    CBaseGameSystemPerFrame::Shutdown()
    CBaseGameSystemPerFrame::LevelInitPreEntity()
    CBaseGameSystemPerFrame::LevelInitPostEntity()
    CBaseGameSystemPerFrame::LevelShutdownPreClearSteamAPIContext()
    CBaseGameSystemPerFrame::LevelShutdownPreEntity()
    CGameRules::LevelShutdownPostEntity()
    CBaseGameSystemPerFrame::OnSave()
    CBaseGameSystemPerFrame::OnRestore()
    CBaseGameSystemPerFrame::SafeRemoveIfDesired()
    CBaseGameSystemPerFrame::IsPerFrame()
    CMultiplayRules::~CMultiplayRules()
    CMultiplayRules::~CMultiplayRules()
    CBaseGameSystemPerFrame::FrameUpdatePreEntityThink()
    CMultiplayRules::FrameUpdatePostEntityThink()
    CBaseGameSystemPerFrame::PreClientUpdate()
    CMultiplayRules::Damage_IsTimeBased(int)
    CMultiplayRules::Damage_ShouldGibCorpse(int)
    CMultiplayRules::Damage_ShowOnHUD(int)
    CMultiplayRules::Damage_NoPhysicsForce(int)
    CMultiplayRules::Damage_ShouldNotBleed(int)
    CMultiplayRules::Damage_GetTimeBased()
    CMultiplayRules::Damage_GetShouldGibCorpse()
    CMultiplayRules::Damage_GetShowOnHud()
    CMultiplayRules::Damage_GetNoPhysicsForce()
    CMultiplayRules::Damage_GetShouldNotBleed()
    CMultiplayRules::SwitchToNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
    CMultiplayRules::GetNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
    CGameRules::ShouldCollide(int, int)
    CGameRules::DefaultFOV()
    CGameRules::GetViewVectors() const
    CGameRules::GetAmmoDamage(CBaseEntity*, CBaseEntity*, int)
    CGameRules::GetDamageMultiplier()
    CMultiplayRules::IsMultiplayer()
    CGameRules::GetEncryptionKey()
    CGameRules::InRoundRestart()
    CGameRules::AllowThirdPersonCamera()
    CMultiplayRules::ClientCommandKeyValues(edict_t*, KeyValues*)
    CGameRules::IsConnectedUserInfoChangeAllowed(CBasePlayer*)
    CGameRules::Status(void (*)(char const*, ...))
    CMultiplayRules::GetTaggedConVarList(KeyValues*)
    CGameRules::CheckHaptics(CBasePlayer*)
    CGameRules::LevelShutdown()
    CGameRules::Precache()
    CMultiplayRules::RefreshSkillData(bool)
    CMultiplayRules::Think()
    CMultiplayRules::IsAllowedToSpawn(CBaseEntity*)
    CGameRules::EndGameFrame()
    CGameRules::IsSkillLevel(int)
    CGameRules::GetSkillLevel()
    CGameRules::OnSkillLevelChanged(int)
    CGameRules::SetSkillLevel(int)
    CMultiplayRules::FAllowFlashlight()
    CMultiplayRules::FShouldSwitchWeapon(CBasePlayer*, CBaseCombatWeapon*)
    CMultiplayRules::IsDeathmatch()
    CGameRules::IsTeamplay()
    CMultiplayRules::IsCoOp()
    CGameRules::GetGameDescription()
    CMultiplayRules::ClientConnected(edict_t*, char const*, char const*, char*, int)
    CMultiplayRules::InitHUD(CBasePlayer*)
    CMultiplayRules::ClientDisconnected(edict_t*)
    CMultiplayRules::FlPlayerFallDamage(CBasePlayer*)
    CMultiplayRules::FPlayerCanTakeDamage(CBasePlayer*, CBaseEntity*, CTakeDamageInfo const&)
    CGameRules::ShouldAutoAim(CBasePlayer*, edict_t*)
    CGameRules::GetAutoAimScale(CBasePlayer*)
    CGameRules::GetAutoAimMode()
    CGameRules::ShouldUseRobustRadiusDamage(CBaseEntity*)
    CGameRules::RadiusDamage(CTakeDamageInfo const&, Vector const&, float, int, CBaseEntity*)
    CGameRules::FlPlayerFallDeathDoesScreenFade(CBasePlayer*)
    CMultiplayRules::AllowDamage(CBaseEntity*, CTakeDamageInfo const&)
    CMultiplayRules::PlayerSpawn(CBasePlayer*)
    CMultiplayRules::PlayerThink(CBasePlayer*)
    CMultiplayRules::FPlayerCanRespawn(CBasePlayer*)
    CMultiplayRules::FlPlayerSpawnTime(CBasePlayer*)
    CMultiplayRules::GetPlayerSpawnSpot(CBasePlayer*)
    CGameRules::IsSpawnPointValid(CBaseEntity*, CBasePlayer*)
    CMultiplayRules::AllowAutoTargetCrosshair()
    CMultiplayRules::ClientCommand(CBaseEntity*, CCommand const&)
    CMultiplayRules::ClientSettingsChanged(CBasePlayer*)
    CMultiplayRules::IPointsForKill(CBasePlayer*, CBasePlayer*)
    CMultiplayRules::PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)
    CMultiplayRules::DeathNotice(CBasePlayer*, CTakeDamageInfo const&)
    CGameRules::GetDamageCustomString(CTakeDamageInfo const&)
    CGameRules::AdjustPlayerDamageInflicted(float)
    CGameRules::AdjustPlayerDamageTaken(CTakeDamageInfo*)
    CMultiplayRules::CanHavePlayerItem(CBasePlayer*, CBaseCombatWeapon*)
    CMultiplayRules::WeaponShouldRespawn(CBaseCombatWeapon*)
    CMultiplayRules::FlWeaponRespawnTime(CBaseCombatWeapon*)
    CMultiplayRules::FlWeaponTryRespawn(CBaseCombatWeapon*)
    CMultiplayRules::VecWeaponRespawnSpot(CBaseCombatWeapon*)
    CMultiplayRules::CanHaveItem(CBasePlayer*, CItem*)
    CMultiplayRules::PlayerGotItem(CBasePlayer*, CItem*)
    CMultiplayRules::ItemShouldRespawn(CItem*)
    CMultiplayRules::FlItemRespawnTime(CItem*)
    CMultiplayRules::VecItemRespawnSpot(CItem*)
    CMultiplayRules::VecItemRespawnAngles(CItem*)
    CGameRules::CanHaveAmmo(CBaseCombatCharacter*, int)
    CGameRules::CanHaveAmmo(CBaseCombatCharacter*, char const*)
    CMultiplayRules::PlayerGotAmmo(CBaseCombatCharacter*, char*, int)
    CGameRules::GetAmmoQuantityScale(int)
    CGameRules::InitDefaultAIRelationships()
    CGameRules::AIClassText(int)
    CMultiplayRules::FlHealthChargerRechargeTime()
    CMultiplayRules::FlHEVChargerRechargeTime()
    CMultiplayRules::DeadPlayerWeapons(CBasePlayer*)
    CMultiplayRules::DeadPlayerAmmo(CBasePlayer*)
    CMultiplayRules::GetTeamID(CBaseEntity*)
    CMultiplayRules::PlayerRelationship(CBaseEntity*, CBaseEntity*)
    CMultiplayRules::PlayerCanHearChat(CBasePlayer*, CBasePlayer*)
    CGameRules::CheckChatText(CBasePlayer*, char*)
    CGameRules::GetTeamIndex(char const*)
    CGameRules::GetIndexedTeamName(int)
    CGameRules::IsValidTeam(char const*)
    CGameRules::ChangePlayerTeam(CBasePlayer*, char const*, bool, bool)
    CGameRules::SetDefaultPlayerTeam(CBasePlayer*)
    CGameRules::UpdateClientData(CBasePlayer*)
    CMultiplayRules::PlayTextureSounds()
    CMultiplayRules::PlayFootstepSounds(CBasePlayer*)
    CMultiplayRules::FAllowNPCs()
    CMultiplayRules::EndMultiplayerGame()
    CGameRules::WeaponTraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, CGameTrace*)
    CGameRules::CreateStandardEntities()
    CGameRules::GetChatPrefix(bool, CBasePlayer*)
    CGameRules::GetChatLocation(bool, CBasePlayer*)
    CGameRules::GetChatFormat(bool, CBasePlayer*)
    CGameRules::ShouldBurningPropsEmitLight()
    CGameRules::CanEntityBeUsePushed(CBaseEntity*)
    CGameRules::CreateCustomNetworkStringTables()
    CGameRules::MarkAchievement(IRecipientFilter&, char const*)
    CMultiplayRules::ResetMapCycleTimeStamp()
    CGameRules::OnNavMeshLoad()
    CGameRules::TacticalMissionManagerFactory()
    CGameRules::ProcessVerboseLogOutput()
    CGameRules::GetGameTypeName()
    CGameRules::GetGameType()
    CMultiplayRules::ShouldDrawHeadLabels()
    CGameRules::ClientSpawned(edict_t*)
    CGameRules::OnFileReceived(char const*, unsigned int)
    CGameRules::IsHolidayActive(int) const
    CMultiplayRules::IsManualMapChangeOkay(char const**)
    CGameRules::RegisterScriptFunctions()
    CGameRules::SaveConvar(ConVarRef const&)
    CGameRules::RevertSavedConvars()
    CGameRules::HasSavedConvar(string_t)
    CMultiplayRules::GetDeathScorer(CBaseEntity*, CBaseEntity*, CBaseEntity*)
    CMultiplayRules::VoiceCommand(CBaseMultiplayerPlayer*, int, int)
    CMultiplayRules::HandleTimeLimitChange()
    CMultiplayRules::InitCustomResponseRulesDicts()
    CMultiplayRules::ShutdownCustomResponseRulesDicts()
    CMultiplayRules::GetNextLevelName(char*, int, bool)
    CMultiplayRules::LoadMapCycleFileIntoVector(char const*, CUtlVector<char*, CUtlMemory<char*, int>>&)
    CMultiplayRules::UseSuicidePenalty()
    CMultiplayRules::GetLastMajorEventTime()
    CMultiplayRules::ChangeLevel()
    CMultiplayRules::GoToIntermission()
    CMultiplayRules::LoadMapCycleFile()
