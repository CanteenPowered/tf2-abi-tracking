{
	"classname": "CObjectTeleporter",
	"classname_mangled": "_ZTV17CObjectTeleporter",
	"members": [
		{
			"name": "CObjectTeleporter::~CObjectTeleporter()",
			"name_mangled": "_ZN17CObjectTeleporterD0Ev"
		},
		{
			"name": "CBaseEntity::SetRefEHandle(CBaseHandle const&)",
			"name_mangled": "_ZN11CBaseEntity13SetRefEHandleERK11CBaseHandle"
		},
		{
			"name": "CBaseEntity::GetRefEHandle() const",
			"name_mangled": "_ZNK11CBaseEntity13GetRefEHandleEv"
		},
		{
			"name": "CBaseEntity::GetCollideable()",
			"name_mangled": "_ZN11CBaseEntity14GetCollideableEv"
		},
		{
			"name": "CBaseEntity::GetNetworkable()",
			"name_mangled": "_ZN11CBaseEntity14GetNetworkableEv"
		},
		{
			"name": "CBaseEntity::GetBaseEntity()",
			"name_mangled": "_ZN11CBaseEntity13GetBaseEntityEv"
		},
		{
			"name": "CBaseEntity::GetModelIndex() const",
			"name_mangled": "_ZNK11CBaseEntity13GetModelIndexEv"
		},
		{
			"name": "CBaseEntity::GetModelName() const",
			"name_mangled": "_ZNK11CBaseEntity12GetModelNameEv"
		},
		{
			"name": "CBaseEntity::SetModelIndex(int)",
			"name_mangled": "_ZN11CBaseEntity13SetModelIndexEi"
		},
		{
			"name": "CObjectTeleporter::GetServerClass()",
			"name_mangled": "_ZN17CObjectTeleporter14GetServerClassEv"
		},
		{
			"name": "CObjectTeleporter::YouForgotToImplementOrDeclareServerClass()",
			"name_mangled": "_ZN17CObjectTeleporter40YouForgotToImplementOrDeclareServerClassEv"
		},
		{
			"name": "CObjectTeleporter::GetDataDescMap()",
			"name_mangled": "_ZN17CObjectTeleporter14GetDataDescMapEv"
		},
		{
			"name": "CBaseCombatCharacter::GetScriptDesc()",
			"name_mangled": "_ZN20CBaseCombatCharacter13GetScriptDescEv"
		},
		{
			"name": "CBaseEntity::SetModelIndexOverride(int, int)",
			"name_mangled": "_ZN11CBaseEntity21SetModelIndexOverrideEii"
		},
		{
			"name": "CBaseAnimating::TestCollision(Ray_t const&, unsigned int, CGameTrace&)",
			"name_mangled": "_ZN14CBaseAnimating13TestCollisionERK5Ray_tjR10CGameTrace"
		},
		{
			"name": "CBaseObject::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)",
			"name_mangled": "_ZN11CBaseObject12TestHitboxesERK5Ray_tjR10CGameTrace"
		},
		{
			"name": "CBaseEntity::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)",
			"name_mangled": "_ZN11CBaseEntity31ComputeWorldSpaceSurroundingBoxEP6VectorS1_"
		},
		{
			"name": "CBaseObject::ShouldCollide(int, int) const",
			"name_mangled": "_ZNK11CBaseObject13ShouldCollideEii"
		},
		{
			"name": "CBaseEntity::SetOwnerEntity(CBaseEntity*)",
			"name_mangled": "_ZN11CBaseEntity14SetOwnerEntityEPS_"
		},
		{
			"name": "CBaseEntity::SetScriptOwnerEntity(HSCRIPT__*)",
			"name_mangled": "_ZN11CBaseEntity20SetScriptOwnerEntityEP9HSCRIPT__"
		},
		{
			"name": "CBaseObject::ShouldTransmit(CCheckTransmitInfo const*)",
			"name_mangled": "_ZN11CBaseObject14ShouldTransmitEPK18CCheckTransmitInfo"
		},
		{
			"name": "CBaseObject::UpdateTransmitState()",
			"name_mangled": "_ZN11CBaseObject19UpdateTransmitStateEv"
		},
		{
			"name": "CBaseObject::SetTransmit(CCheckTransmitInfo*, bool)",
			"name_mangled": "_ZN11CBaseObject11SetTransmitEP18CCheckTransmitInfob"
		},
		{
			"name": "CBaseEntity::GetTracerType()",
			"name_mangled": "_ZN11CBaseEntity13GetTracerTypeEv"
		},
		{
			"name": "CObjectTeleporter::Spawn()",
			"name_mangled": "_ZN17CObjectTeleporter5SpawnEv"
		},
		{
			"name": "CObjectTeleporter::Precache()",
			"name_mangled": "_ZN17CObjectTeleporter8PrecacheEv"
		},
		{
			"name": "CObjectTeleporter::SetModel(char const*)",
			"name_mangled": "_ZN17CObjectTeleporter8SetModelEPKc"
		},
		{
			"name": "CBaseAnimating::OnNewModel()",
			"name_mangled": "_ZN14CBaseAnimating10OnNewModelEv"
		},
		{
			"name": "CBaseEntity::PostConstructor(char const*)",
			"name_mangled": "_ZN11CBaseEntity15PostConstructorEPKc"
		},
		{
			"name": "CBaseEntity::PostClientActive()",
			"name_mangled": "_ZN11CBaseEntity16PostClientActiveEv"
		},
		{
			"name": "CBaseEntity::ParseMapData(CEntityMapData*)",
			"name_mangled": "_ZN11CBaseEntity12ParseMapDataEP14CEntityMapData"
		},
		{
			"name": "CBaseEntity::KeyValue(char const*, char const*)",
			"name_mangled": "_ZN11CBaseEntity8KeyValueEPKcS1_"
		},
		{
			"name": "CBaseEntity::KeyValue(char const*, float)",
			"name_mangled": "_ZN11CBaseEntity8KeyValueEPKcf"
		},
		{
			"name": "CBaseEntity::KeyValue(char const*, Vector const&)",
			"name_mangled": "_ZN11CBaseEntity8KeyValueEPKcRK6Vector"
		},
		{
			"name": "CBaseEntity::GetKeyValue(char const*, char*, int)",
			"name_mangled": "_ZN11CBaseEntity11GetKeyValueEPKcPci"
		},
		{
			"name": "CBaseObject::Activate()",
			"name_mangled": "_ZN11CBaseObject8ActivateEv"
		},
		{
			"name": "CBaseEntity::SetParent(CBaseEntity*, int)",
			"name_mangled": "_ZN11CBaseEntity9SetParentEPS_i"
		},
		{
			"name": "CBaseEntity::ObjectCaps()",
			"name_mangled": "_ZN11CBaseEntity10ObjectCapsEv"
		},
		{
			"name": "CBaseEntity::AcceptInput(char const*, CBaseEntity*, CBaseEntity*, variant_t, int)",
			"name_mangled": "_ZN11CBaseEntity11AcceptInputEPKcPS_S2_9variant_ti"
		},
		{
			"name": "CBaseAnimating::GetInputDispatchEffectPosition(char const*, Vector&, QAngle&)",
			"name_mangled": "_ZN14CBaseAnimating30GetInputDispatchEffectPositionEPKcR6VectorR6QAngle"
		},
		{
			"name": "CBaseEntity::DrawDebugGeometryOverlays()",
			"name_mangled": "_ZN11CBaseEntity25DrawDebugGeometryOverlaysEv"
		},
		{
			"name": "CObjectTeleporter::DrawDebugTextOverlays()",
			"name_mangled": "_ZN17CObjectTeleporter21DrawDebugTextOverlaysEv"
		},
		{
			"name": "CBaseEntity::Save(ISave&)",
			"name_mangled": "_ZN11CBaseEntity4SaveER5ISave"
		},
		{
			"name": "CBaseCombatCharacter::Restore(IRestore&)",
			"name_mangled": "_ZN20CBaseCombatCharacter7RestoreER8IRestore"
		},
		{
			"name": "CBaseEntity::ShouldSavePhysics()",
			"name_mangled": "_ZN11CBaseEntity17ShouldSavePhysicsEv"
		},
		{
			"name": "CBaseEntity::OnSave(IEntitySaveUtils*)",
			"name_mangled": "_ZN11CBaseEntity6OnSaveEP16IEntitySaveUtils"
		},
		{
			"name": "CBaseAnimatingOverlay::OnRestore()",
			"name_mangled": "_ZN21CBaseAnimatingOverlay9OnRestoreEv"
		},
		{
			"name": "CBaseEntity::RequiredEdictIndex()",
			"name_mangled": "_ZN11CBaseEntity18RequiredEdictIndexEv"
		},
		{
			"name": "CBaseEntity::MoveDone()",
			"name_mangled": "_ZN11CBaseEntity8MoveDoneEv"
		},
		{
			"name": "CBaseEntity::Think()",
			"name_mangled": "_ZN11CBaseEntity5ThinkEv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_nNextThinkTick()",
			"name_mangled": "_ZN11CBaseEntity36NetworkStateChanged_m_nNextThinkTickEv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_nNextThinkTick(void*)",
			"name_mangled": "_ZN11CBaseEntity36NetworkStateChanged_m_nNextThinkTickEPv"
		},
		{
			"name": "CBaseAnimating::GetBaseAnimating()",
			"name_mangled": "_ZN14CBaseAnimating16GetBaseAnimatingEv"
		},
		{
			"name": "CBaseEntity::GetResponseSystem()",
			"name_mangled": "_ZN11CBaseEntity17GetResponseSystemEv"
		},
		{
			"name": "CBaseEntity::DispatchResponse(char const*)",
			"name_mangled": "_ZN11CBaseEntity16DispatchResponseEPKc"
		},
		{
			"name": "CBaseObject::Classify()",
			"name_mangled": "_ZN11CBaseObject8ClassifyEv"
		},
		{
			"name": "CBaseEntity::DeathNotice(CBaseEntity*)",
			"name_mangled": "_ZN11CBaseEntity11DeathNoticeEPS_"
		},
		{
			"name": "CBaseEntity::ShouldAttractAutoAim(CBaseEntity*)",
			"name_mangled": "_ZN11CBaseEntity20ShouldAttractAutoAimEPS_"
		},
		{
			"name": "CBaseEntity::GetAutoAimRadius()",
			"name_mangled": "_ZN11CBaseEntity16GetAutoAimRadiusEv"
		},
		{
			"name": "CBaseEntity::GetAutoAimCenter()",
			"name_mangled": "_ZN11CBaseEntity16GetAutoAimCenterEv"
		},
		{
			"name": "CBaseEntity::GetBeamTraceFilter()",
			"name_mangled": "_ZN11CBaseEntity18GetBeamTraceFilterEv"
		},
		{
			"name": "CBaseEntity::PassesDamageFilter(CTakeDamageInfo const&)",
			"name_mangled": "_ZN11CBaseEntity18PassesDamageFilterERK15CTakeDamageInfo"
		},
		{
			"name": "CBaseObject::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*, CDmgAccumulator*)",
			"name_mangled": "_ZN11CBaseObject11TraceAttackERK15CTakeDamageInfoRK6VectorP10CGameTraceP15CDmgAccumulator"
		},
		{
			"name": "CBaseEntity::CanBeHitByMeleeAttack(CBaseEntity*)",
			"name_mangled": "_ZN11CBaseEntity21CanBeHitByMeleeAttackEPS_"
		},
		{
			"name": "CBaseObject::OnTakeDamage(CTakeDamageInfo const&)",
			"name_mangled": "_ZN11CBaseObject12OnTakeDamageERK15CTakeDamageInfo"
		},
		{
			"name": "CBaseEntity::AdjustDamageDirection(CTakeDamageInfo const&, Vector&, CBaseEntity*)",
			"name_mangled": "_ZN11CBaseEntity21AdjustDamageDirectionERK15CTakeDamageInfoR6VectorPS_"
		},
		{
			"name": "CBaseCombatCharacter::TakeHealth(float, int)",
			"name_mangled": "_ZN20CBaseCombatCharacter10TakeHealthEfi"
		},
		{
			"name": "CBaseEntity::IsAlive()",
			"name_mangled": "_ZN11CBaseEntity7IsAliveEv"
		},
		{
			"name": "CBaseCombatCharacter::Event_Killed(CTakeDamageInfo const&)",
			"name_mangled": "_ZN20CBaseCombatCharacter12Event_KilledERK15CTakeDamageInfo"
		},
		{
			"name": "CBaseEntity::Event_KilledOther(CBaseEntity*, CTakeDamageInfo const&)",
			"name_mangled": "_ZN11CBaseEntity17Event_KilledOtherEPS_RK15CTakeDamageInfo"
		},
		{
			"name": "CBaseObject::BloodColor()",
			"name_mangled": "_ZN11CBaseObject10BloodColorEv"
		},
		{
			"name": "CBaseEntity::IsTriggered(CBaseEntity*)",
			"name_mangled": "_ZN11CBaseEntity11IsTriggeredEPS_"
		},
		{
			"name": "CBaseEntity::IsNPC() const",
			"name_mangled": "_ZNK11CBaseEntity5IsNPCEv"
		},
		{
			"name": "CBaseCombatCharacter::MyCombatCharacterPointer()",
			"name_mangled": "_ZN20CBaseCombatCharacter24MyCombatCharacterPointerEv"
		},
		{
			"name": "CBaseEntity::MyNextBotPointer()",
			"name_mangled": "_ZN11CBaseEntity16MyNextBotPointerEv"
		},
		{
			"name": "CBaseEntity::GetDelay()",
			"name_mangled": "_ZN11CBaseEntity8GetDelayEv"
		},
		{
			"name": "CBaseEntity::IsMoving()",
			"name_mangled": "_ZN11CBaseEntity8IsMovingEv"
		},
		{
			"name": "CBaseEntity::DamageDecal(int, int)",
			"name_mangled": "_ZN11CBaseEntity11DamageDecalEii"
		},
		{
			"name": "CBaseEntity::DecalTrace(CGameTrace*, char const*)",
			"name_mangled": "_ZN11CBaseEntity10DecalTraceEP10CGameTracePKc"
		},
		{
			"name": "CBaseEntity::ImpactTrace(CGameTrace*, int, char const*)",
			"name_mangled": "_ZN11CBaseEntity11ImpactTraceEP10CGameTraceiPKc"
		},
		{
			"name": "CBaseEntity::OnControls(CBaseEntity*)",
			"name_mangled": "_ZN11CBaseEntity10OnControlsEPS_"
		},
		{
			"name": "CBaseEntity::HasTarget(string_t)",
			"name_mangled": "_ZN11CBaseEntity9HasTargetE8string_t"
		},
		{
			"name": "CBaseEntity::IsPlayer() const",
			"name_mangled": "_ZNK11CBaseEntity8IsPlayerEv"
		},
		{
			"name": "CBaseEntity::IsNetClient() const",
			"name_mangled": "_ZNK11CBaseEntity11IsNetClientEv"
		},
		{
			"name": "CBaseEntity::IsTemplate()",
			"name_mangled": "_ZN11CBaseEntity10IsTemplateEv"
		},
		{
			"name": "CBaseObject::IsBaseObject() const",
			"name_mangled": "_ZNK11CBaseObject12IsBaseObjectEv"
		},
		{
			"name": "CBaseEntity::IsBaseTrain() const",
			"name_mangled": "_ZNK11CBaseEntity11IsBaseTrainEv"
		},
		{
			"name": "CBaseEntity::IsCombatItem() const",
			"name_mangled": "_ZNK11CBaseEntity12IsCombatItemEv"
		},
		{
			"name": "CBaseEntity::IsProjectileCollisionTarget() const",
			"name_mangled": "_ZNK11CBaseEntity27IsProjectileCollisionTargetEv"
		},
		{
			"name": "CBaseEntity::IsFuncLOD() const",
			"name_mangled": "_ZNK11CBaseEntity9IsFuncLODEv"
		},
		{
			"name": "CBaseEntity::IsBaseProjectile() const",
			"name_mangled": "_ZNK11CBaseEntity16IsBaseProjectileEv"
		},
		{
			"name": "CBaseEntity::IsBaseCombatWeapon() const",
			"name_mangled": "_ZNK11CBaseEntity18IsBaseCombatWeaponEv"
		},
		{
			"name": "CBaseEntity::IsWearable() const",
			"name_mangled": "_ZNK11CBaseEntity10IsWearableEv"
		},
		{
			"name": "CBaseEntity::MyCombatWeaponPointer()",
			"name_mangled": "_ZN11CBaseEntity21MyCombatWeaponPointerEv"
		},
		{
			"name": "CBaseEntity::GetServerVehicle()",
			"name_mangled": "_ZN11CBaseEntity16GetServerVehicleEv"
		},
		{
			"name": "CBaseEntity::IsViewable()",
			"name_mangled": "_ZN11CBaseEntity10IsViewableEv"
		},
		{
			"name": "CBaseObject::ChangeTeam(int)",
			"name_mangled": "_ZN11CBaseObject10ChangeTeamEi"
		},
		{
			"name": "CBaseEntity::OnEntityEvent(EntityEvent_t, void*)",
			"name_mangled": "_ZN11CBaseEntity13OnEntityEventE13EntityEvent_tPv"
		},
		{
			"name": "CBaseEntity::CanStandOn(CBaseEntity*) const",
			"name_mangled": "_ZNK11CBaseEntity10CanStandOnEPS_"
		},
		{
			"name": "CBaseEntity::CanStandOn(edict_t*) const",
			"name_mangled": "_ZNK11CBaseEntity10CanStandOnEP7edict_t"
		},
		{
			"name": "CBaseEntity::GetEnemy()",
			"name_mangled": "_ZN11CBaseEntity8GetEnemyEv"
		},
		{
			"name": "CBaseEntity::GetEnemy() const",
			"name_mangled": "_ZNK11CBaseEntity8GetEnemyEv"
		},
		{
			"name": "CBaseEntity::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)",
			"name_mangled": "_ZN11CBaseEntity3UseEPS_S0_8USE_TYPEf"
		},
		{
			"name": "CObjectTeleporter::StartTouch(CBaseEntity*)",
			"name_mangled": "_ZN17CObjectTeleporter10StartTouchEP11CBaseEntity"
		},
		{
			"name": "CBaseEntity::Touch(CBaseEntity*)",
			"name_mangled": "_ZN11CBaseEntity5TouchEPS_"
		},
		{
			"name": "CObjectTeleporter::EndTouch(CBaseEntity*)",
			"name_mangled": "_ZN17CObjectTeleporter8EndTouchEP11CBaseEntity"
		},
		{
			"name": "CBaseEntity::StartBlocked(CBaseEntity*)",
			"name_mangled": "_ZN11CBaseEntity12StartBlockedEPS_"
		},
		{
			"name": "CBaseEntity::Blocked(CBaseEntity*)",
			"name_mangled": "_ZN11CBaseEntity7BlockedEPS_"
		},
		{
			"name": "CBaseEntity::EndBlocked()",
			"name_mangled": "_ZN11CBaseEntity10EndBlockedEv"
		},
		{
			"name": "CBaseEntity::PhysicsSimulate()",
			"name_mangled": "_ZN11CBaseEntity15PhysicsSimulateEv"
		},
		{
			"name": "CObjectTeleporter::UpdateOnRemove()",
			"name_mangled": "_ZN17CObjectTeleporter14UpdateOnRemoveEv"
		},
		{
			"name": "CBaseEntity::StopLoopingSounds()",
			"name_mangled": "_ZN11CBaseEntity17StopLoopingSoundsEv"
		},
		{
			"name": "CBaseEntity::SUB_AllowedToFade()",
			"name_mangled": "_ZN11CBaseEntity17SUB_AllowedToFadeEv"
		},
		{
			"name": "CBaseFlex::Teleport(Vector const*, QAngle const*, Vector const*)",
			"name_mangled": "_ZN9CBaseFlex8TeleportEPK6VectorPK6QAngleS2_"
		},
		{
			"name": "CBaseEntity::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)",
			"name_mangled": "_ZN11CBaseEntity17NotifySystemEventEPS_21notify_system_event_tRK28notify_system_event_params_t"
		},
		{
			"name": "CBaseEntity::MakeTracer(Vector const&, CGameTrace const&, int)",
			"name_mangled": "_ZN11CBaseEntity10MakeTracerERK6VectorRK10CGameTracei"
		},
		{
			"name": "CBaseEntity::GetTracerAttachment()",
			"name_mangled": "_ZN11CBaseEntity19GetTracerAttachmentEv"
		},
		{
			"name": "CBaseEntity::FireBullets(FireBulletsInfo_t const&)",
			"name_mangled": "_ZN11CBaseEntity11FireBulletsERK17FireBulletsInfo_t"
		},
		{
			"name": "CBaseEntity::DoImpactEffect(CGameTrace&, int)",
			"name_mangled": "_ZN11CBaseEntity14DoImpactEffectER10CGameTracei"
		},
		{
			"name": "CBaseEntity::ModifyFireBulletsDamage(CTakeDamageInfo*)",
			"name_mangled": "_ZN11CBaseEntity23ModifyFireBulletsDamageEP15CTakeDamageInfo"
		},
		{
			"name": "CBaseEntity::Respawn()",
			"name_mangled": "_ZN11CBaseEntity7RespawnEv"
		},
		{
			"name": "CBaseEntity::IsLockedByMaster()",
			"name_mangled": "_ZN11CBaseEntity16IsLockedByMasterEv"
		},
		{
			"name": "CBaseEntity::GetMaxHealth() const",
			"name_mangled": "_ZNK11CBaseEntity12GetMaxHealthEv"
		},
		{
			"name": "CBaseAnimating::ModifyOrAppendCriteria(AI_CriteriaSet&)",
			"name_mangled": "_ZN14CBaseAnimating22ModifyOrAppendCriteriaER14AI_CriteriaSet"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_iMaxHealth()",
			"name_mangled": "_ZN11CBaseEntity32NetworkStateChanged_m_iMaxHealthEv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_iMaxHealth(void*)",
			"name_mangled": "_ZN11CBaseEntity32NetworkStateChanged_m_iMaxHealthEPv"
		},
		{
			"name": "CBaseObject::NetworkStateChanged_m_iHealth()",
			"name_mangled": "_ZN11CBaseObject29NetworkStateChanged_m_iHealthEv"
		},
		{
			"name": "CBaseObject::NetworkStateChanged_m_iHealth(void*)",
			"name_mangled": "_ZN11CBaseObject29NetworkStateChanged_m_iHealthEPv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_lifeState()",
			"name_mangled": "_ZN11CBaseEntity31NetworkStateChanged_m_lifeStateEv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_lifeState(void*)",
			"name_mangled": "_ZN11CBaseEntity31NetworkStateChanged_m_lifeStateEPv"
		},
		{
			"name": "CBaseObject::NetworkStateChanged_m_takedamage()",
			"name_mangled": "_ZN11CBaseObject32NetworkStateChanged_m_takedamageEv"
		},
		{
			"name": "CBaseObject::NetworkStateChanged_m_takedamage(void*)",
			"name_mangled": "_ZN11CBaseObject32NetworkStateChanged_m_takedamageEPv"
		},
		{
			"name": "CBaseEntity::RunVScripts()",
			"name_mangled": "_ZN11CBaseEntity11RunVScriptsEv"
		},
		{
			"name": "CBaseEntity::GetDamageType() const",
			"name_mangled": "_ZNK11CBaseEntity13GetDamageTypeEv"
		},
		{
			"name": "CBaseEntity::GetDamage()",
			"name_mangled": "_ZN11CBaseEntity9GetDamageEv"
		},
		{
			"name": "CBaseEntity::SetDamage(float)",
			"name_mangled": "_ZN11CBaseEntity9SetDamageEf"
		},
		{
			"name": "CBaseEntity::EyePosition()",
			"name_mangled": "_ZN11CBaseEntity11EyePositionEv"
		},
		{
			"name": "CBaseEntity::EyeAngles()",
			"name_mangled": "_ZN11CBaseEntity9EyeAnglesEv"
		},
		{
			"name": "CBaseEntity::LocalEyeAngles()",
			"name_mangled": "_ZN11CBaseEntity14LocalEyeAnglesEv"
		},
		{
			"name": "CBaseEntity::EarPosition()",
			"name_mangled": "_ZN11CBaseEntity11EarPositionEv"
		},
		{
			"name": "CBaseEntity::BodyTarget(Vector const&, bool)",
			"name_mangled": "_ZN11CBaseEntity10BodyTargetERK6Vectorb"
		},
		{
			"name": "CBaseEntity::HeadTarget(Vector const&)",
			"name_mangled": "_ZN11CBaseEntity10HeadTargetERK6Vector"
		},
		{
			"name": "CBaseEntity::GetVectors(Vector*, Vector*, Vector*) const",
			"name_mangled": "_ZNK11CBaseEntity10GetVectorsEP6VectorS1_S1_"
		},
		{
			"name": "CBaseEntity::GetViewOffset() const",
			"name_mangled": "_ZNK11CBaseEntity13GetViewOffsetEv"
		},
		{
			"name": "CBaseEntity::SetViewOffset(Vector const&)",
			"name_mangled": "_ZN11CBaseEntity13SetViewOffsetERK6Vector"
		},
		{
			"name": "CBaseEntity::GetSmoothedVelocity()",
			"name_mangled": "_ZN11CBaseEntity19GetSmoothedVelocityEv"
		},
		{
			"name": "CBaseAnimating::GetVelocity(Vector*, Vector*)",
			"name_mangled": "_ZN14CBaseAnimating11GetVelocityEP6VectorS1_"
		},
		{
			"name": "CBaseCombatCharacter::FVisible(CBaseEntity*, int, CBaseEntity**)",
			"name_mangled": "_ZN20CBaseCombatCharacter8FVisibleEP11CBaseEntityiPS1_"
		},
		{
			"name": "CBaseCombatCharacter::FVisible(Vector const&, int, CBaseEntity**)",
			"name_mangled": "_ZN20CBaseCombatCharacter8FVisibleERK6VectoriPP11CBaseEntity"
		},
		{
			"name": "CBaseEntity::CanBeSeenBy(CAI_BaseNPC*)",
			"name_mangled": "_ZN11CBaseEntity11CanBeSeenByEP11CAI_BaseNPC"
		},
		{
			"name": "CBaseEntity::GetAttackDamageScale(CBaseEntity*)",
			"name_mangled": "_ZN11CBaseEntity20GetAttackDamageScaleEPS_"
		},
		{
			"name": "CBaseEntity::GetReceivedDamageScale(CBaseEntity*)",
			"name_mangled": "_ZN11CBaseEntity22GetReceivedDamageScaleEPS_"
		},
		{
			"name": "CBaseEntity::GetGroundVelocityToApply(Vector&)",
			"name_mangled": "_ZN11CBaseEntity24GetGroundVelocityToApplyER6Vector"
		},
		{
			"name": "CBaseEntity::PhysicsSplash(Vector const&, Vector const&, float, float)",
			"name_mangled": "_ZN11CBaseEntity13PhysicsSplashERK6VectorS2_ff"
		},
		{
			"name": "CBaseEntity::Splash()",
			"name_mangled": "_ZN11CBaseEntity6SplashEv"
		},
		{
			"name": "CBaseEntity::WorldSpaceCenter() const",
			"name_mangled": "_ZNK11CBaseEntity16WorldSpaceCenterEv"
		},
		{
			"name": "CBaseEntity::GetSoundEmissionOrigin() const",
			"name_mangled": "_ZNK11CBaseEntity22GetSoundEmissionOriginEv"
		},
		{
			"name": "CBaseEntity::ModifyEmitSoundParams(EmitSound_t&)",
			"name_mangled": "_ZN11CBaseEntity21ModifyEmitSoundParamsER11EmitSound_t"
		},
		{
			"name": "CBaseEntity::IsDeflectable()",
			"name_mangled": "_ZN11CBaseEntity13IsDeflectableEv"
		},
		{
			"name": "CBaseEntity::Deflected(CBaseEntity*, Vector&)",
			"name_mangled": "_ZN11CBaseEntity9DeflectedEPS_R6Vector"
		},
		{
			"name": "CBaseEntity::CreateVPhysics()",
			"name_mangled": "_ZN11CBaseEntity14CreateVPhysicsEv"
		},
		{
			"name": "CBaseEntity::ForceVPhysicsCollide(CBaseEntity*)",
			"name_mangled": "_ZN11CBaseEntity20ForceVPhysicsCollideEPS_"
		},
		{
			"name": "CBaseEntity::VPhysicsDestroyObject()",
			"name_mangled": "_ZN11CBaseEntity21VPhysicsDestroyObjectEv"
		},
		{
			"name": "CBaseCombatCharacter::VPhysicsUpdate(IPhysicsObject*)",
			"name_mangled": "_ZN20CBaseCombatCharacter14VPhysicsUpdateEP14IPhysicsObject"
		},
		{
			"name": "CBaseEntity::VPhysicsTakeDamage(CTakeDamageInfo const&)",
			"name_mangled": "_ZN11CBaseEntity18VPhysicsTakeDamageERK15CTakeDamageInfo"
		},
		{
			"name": "CBaseCombatCharacter::VPhysicsShadowCollision(int, gamevcollisionevent_t*)",
			"name_mangled": "_ZN20CBaseCombatCharacter23VPhysicsShadowCollisionEiP21gamevcollisionevent_t"
		},
		{
			"name": "CBaseEntity::VPhysicsShadowUpdate(IPhysicsObject*)",
			"name_mangled": "_ZN11CBaseEntity20VPhysicsShadowUpdateEP14IPhysicsObject"
		},
		{
			"name": "CBaseEntity::VPhysicsCollision(int, gamevcollisionevent_t*)",
			"name_mangled": "_ZN11CBaseEntity17VPhysicsCollisionEiP21gamevcollisionevent_t"
		},
		{
			"name": "CBaseEntity::VPhysicsFriction(IPhysicsObject*, float, int, int)",
			"name_mangled": "_ZN11CBaseEntity16VPhysicsFrictionEP14IPhysicsObjectfii"
		},
		{
			"name": "CBaseEntity::UpdatePhysicsShadowToCurrentPosition(float)",
			"name_mangled": "_ZN11CBaseEntity36UpdatePhysicsShadowToCurrentPositionEf"
		},
		{
			"name": "CBaseEntity::VPhysicsGetObjectList(IPhysicsObject**, int)",
			"name_mangled": "_ZN11CBaseEntity21VPhysicsGetObjectListEPP14IPhysicsObjecti"
		},
		{
			"name": "CBaseEntity::VPhysicsIsFlesh()",
			"name_mangled": "_ZN11CBaseEntity15VPhysicsIsFleshEv"
		},
		{
			"name": "CBaseEntity::HasPhysicsAttacker(float)",
			"name_mangled": "_ZN11CBaseEntity18HasPhysicsAttackerEf"
		},
		{
			"name": "CBaseEntity::PhysicsSolidMaskForEntity() const",
			"name_mangled": "_ZNK11CBaseEntity25PhysicsSolidMaskForEntityEv"
		},
		{
			"name": "CBaseEntity::ResolveFlyCollisionCustom(CGameTrace&, Vector&)",
			"name_mangled": "_ZN11CBaseEntity25ResolveFlyCollisionCustomER10CGameTraceR6Vector"
		},
		{
			"name": "CBaseEntity::PerformCustomPhysics(Vector*, Vector*, QAngle*, QAngle*)",
			"name_mangled": "_ZN11CBaseEntity20PerformCustomPhysicsEP6VectorS1_P6QAngleS3_"
		},
		{
			"name": "CBaseAnimating::GetStepOrigin() const",
			"name_mangled": "_ZNK14CBaseAnimating13GetStepOriginEv"
		},
		{
			"name": "CBaseAnimating::GetStepAngles() const",
			"name_mangled": "_ZNK14CBaseAnimating13GetStepAnglesEv"
		},
		{
			"name": "CBaseEntity::ShouldDrawWaterImpacts()",
			"name_mangled": "_ZN11CBaseEntity22ShouldDrawWaterImpactsEv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_fFlags()",
			"name_mangled": "_ZN11CBaseEntity28NetworkStateChanged_m_fFlagsEv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_fFlags(void*)",
			"name_mangled": "_ZN11CBaseEntity28NetworkStateChanged_m_fFlagsEPv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_nWaterLevel()",
			"name_mangled": "_ZN11CBaseEntity33NetworkStateChanged_m_nWaterLevelEv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_nWaterLevel(void*)",
			"name_mangled": "_ZN11CBaseEntity33NetworkStateChanged_m_nWaterLevelEPv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_hGroundEntity()",
			"name_mangled": "_ZN11CBaseEntity35NetworkStateChanged_m_hGroundEntityEv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_hGroundEntity(void*)",
			"name_mangled": "_ZN11CBaseEntity35NetworkStateChanged_m_hGroundEntityEPv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_vecBaseVelocity()",
			"name_mangled": "_ZN11CBaseEntity37NetworkStateChanged_m_vecBaseVelocityEv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_vecBaseVelocity(void*)",
			"name_mangled": "_ZN11CBaseEntity37NetworkStateChanged_m_vecBaseVelocityEPv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_flFriction()",
			"name_mangled": "_ZN11CBaseEntity32NetworkStateChanged_m_flFrictionEv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_flFriction(void*)",
			"name_mangled": "_ZN11CBaseEntity32NetworkStateChanged_m_flFrictionEPv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_vecVelocity()",
			"name_mangled": "_ZN11CBaseEntity33NetworkStateChanged_m_vecVelocityEv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_vecVelocity(void*)",
			"name_mangled": "_ZN11CBaseEntity33NetworkStateChanged_m_vecVelocityEPv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_vecViewOffset()",
			"name_mangled": "_ZN11CBaseEntity35NetworkStateChanged_m_vecViewOffsetEv"
		},
		{
			"name": "CBaseEntity::NetworkStateChanged_m_vecViewOffset(void*)",
			"name_mangled": "_ZN11CBaseEntity35NetworkStateChanged_m_vecViewOffsetEPv"
		},
		{
			"name": "CBaseObject::ShouldBlockNav() const",
			"name_mangled": "_ZNK11CBaseObject14ShouldBlockNavEv"
		},
		{
			"name": "CBaseEntity::ShouldForceTransmitsForTeam(int)",
			"name_mangled": "_ZN11CBaseEntity27ShouldForceTransmitsForTeamEi"
		},
		{
			"name": "CBaseEntity::IsTruceValidForEnt() const",
			"name_mangled": "_ZNK11CBaseEntity18IsTruceValidForEntEv"
		},
		{
			"name": "CBaseEntity::GetDefaultItemChargeMeterValue() const",
			"name_mangled": "_ZNK11CBaseEntity30GetDefaultItemChargeMeterValueEv"
		},
		{
			"name": "CBaseEntity::BCanCallVote()",
			"name_mangled": "_ZN11CBaseEntity12BCanCallVoteEv"
		},
		{
			"name": "CBaseAnimating::GetIdealSpeed() const",
			"name_mangled": "_ZNK14CBaseAnimating13GetIdealSpeedEv"
		},
		{
			"name": "CBaseAnimating::GetIdealAccel() const",
			"name_mangled": "_ZNK14CBaseAnimating13GetIdealAccelEv"
		},
		{
			"name": "CBaseAnimatingOverlay::StudioFrameAdvance()",
			"name_mangled": "_ZN21CBaseAnimatingOverlay18StudioFrameAdvanceEv"
		},
		{
			"name": "CBaseAnimating::SetSequence(int)",
			"name_mangled": "_ZN14CBaseAnimating11SetSequenceEi"
		},
		{
			"name": "CBaseAnimating::IsActivityFinished()",
			"name_mangled": "_ZN14CBaseAnimating18IsActivityFinishedEv"
		},
		{
			"name": "CBaseAnimating::GetSequenceGroundSpeed(CStudioHdr*, int)",
			"name_mangled": "_ZN14CBaseAnimating22GetSequenceGroundSpeedEP10CStudioHdri"
		},
		{
			"name": "CBaseAnimating::ClampRagdollForce(Vector const&, Vector*)",
			"name_mangled": "_ZN14CBaseAnimating17ClampRagdollForceERK6VectorPS0_"
		},
		{
			"name": "CBaseAnimating::BecomeRagdollOnClient(Vector const&)",
			"name_mangled": "_ZN14CBaseAnimating21BecomeRagdollOnClientERK6Vector"
		},
		{
			"name": "CBaseAnimating::IsRagdoll()",
			"name_mangled": "_ZN14CBaseAnimating9IsRagdollEv"
		},
		{
			"name": "CBaseAnimating::CanBecomeRagdoll()",
			"name_mangled": "_ZN14CBaseAnimating16CanBecomeRagdollEv"
		},
		{
			"name": "CBaseAnimatingOverlay::GetSkeleton(CStudioHdr*, Vector*, Quaternion*, int)",
			"name_mangled": "_ZN21CBaseAnimatingOverlay11GetSkeletonEP10CStudioHdrP6VectorP10Quaternioni"
		},
		{
			"name": "CBaseAnimating::GetBoneTransform(int, matrix3x4_t&)",
			"name_mangled": "_ZN14CBaseAnimating16GetBoneTransformEiR11matrix3x4_t"
		},
		{
			"name": "CBaseAnimating::SetupBones(matrix3x4_t*, int)",
			"name_mangled": "_ZN14CBaseAnimating10SetupBonesEP11matrix3x4_ti"
		},
		{
			"name": "CBaseAnimating::CalculateIKLocks(float)",
			"name_mangled": "_ZN14CBaseAnimating16CalculateIKLocksEf"
		},
		{
			"name": "CBaseAnimatingOverlay::DispatchAnimEvents(CBaseAnimating*)",
			"name_mangled": "_ZN21CBaseAnimatingOverlay18DispatchAnimEventsEP14CBaseAnimating"
		},
		{
			"name": "CBaseAnimating::HandleAnimEvent(animevent_t*)",
			"name_mangled": "_ZN14CBaseAnimating15HandleAnimEventEP11animevent_t"
		},
		{
			"name": "CBaseAnimating::PopulatePoseParameters()",
			"name_mangled": "_ZN14CBaseAnimating22PopulatePoseParametersEv"
		},
		{
			"name": "CBaseAnimating::GetAttachment(int, matrix3x4_t&)",
			"name_mangled": "_ZN14CBaseAnimating13GetAttachmentEiR11matrix3x4_t"
		},
		{
			"name": "CBaseAnimating::InitBoneControllers()",
			"name_mangled": "_ZN14CBaseAnimating19InitBoneControllersEv"
		},
		{
			"name": "CBaseAnimating::GetGroundSpeedVelocity()",
			"name_mangled": "_ZN14CBaseAnimating22GetGroundSpeedVelocityEv"
		},
		{
			"name": "CBaseAnimating::RefreshCollisionBounds()",
			"name_mangled": "_ZN14CBaseAnimating22RefreshCollisionBoundsEv"
		},
		{
			"name": "CBaseAnimating::Ignite(float, bool, float, bool)",
			"name_mangled": "_ZN14CBaseAnimating6IgniteEfbfb"
		},
		{
			"name": "CBaseAnimating::IgniteLifetime(float)",
			"name_mangled": "_ZN14CBaseAnimating14IgniteLifetimeEf"
		},
		{
			"name": "CBaseAnimating::IgniteNumHitboxFires(int)",
			"name_mangled": "_ZN14CBaseAnimating20IgniteNumHitboxFiresEi"
		},
		{
			"name": "CBaseAnimating::IgniteHitboxFireScale(float)",
			"name_mangled": "_ZN14CBaseAnimating21IgniteHitboxFireScaleEf"
		},
		{
			"name": "CBaseAnimating::Extinguish()",
			"name_mangled": "_ZN14CBaseAnimating10ExtinguishEv"
		},
		{
			"name": "CBaseCombatCharacter::SetLightingOriginRelative(CBaseEntity*)",
			"name_mangled": "_ZN20CBaseCombatCharacter25SetLightingOriginRelativeEP11CBaseEntity"
		},
		{
			"name": "CBaseAnimating::SetLightingOrigin(CBaseEntity*)",
			"name_mangled": "_ZN14CBaseAnimating17SetLightingOriginEP11CBaseEntity"
		},
		{
			"name": "CBaseFlex::SetViewtarget(Vector const&)",
			"name_mangled": "_ZN9CBaseFlex13SetViewtargetERK6Vector"
		},
		{
			"name": "CBaseFlex::StartSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*, CChoreoActor*, CBaseEntity*)",
			"name_mangled": "_ZN9CBaseFlex15StartSceneEventEP15CSceneEventInfoP12CChoreoSceneP12CChoreoEventP12CChoreoActorP11CBaseEntity"
		},
		{
			"name": "CBaseFlex::ProcessSceneEvents()",
			"name_mangled": "_ZN9CBaseFlex18ProcessSceneEventsEv"
		},
		{
			"name": "CBaseFlex::ProcessSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)",
			"name_mangled": "_ZN9CBaseFlex17ProcessSceneEventEP15CSceneEventInfoP12CChoreoSceneP12CChoreoEvent"
		},
		{
			"name": "CBaseFlex::ClearSceneEvent(CSceneEventInfo*, bool, bool)",
			"name_mangled": "_ZN9CBaseFlex15ClearSceneEventEP15CSceneEventInfobb"
		},
		{
			"name": "CBaseFlex::CheckSceneEventCompletion(CSceneEventInfo*, float, CChoreoScene*, CChoreoEvent*)",
			"name_mangled": "_ZN9CBaseFlex25CheckSceneEventCompletionEP15CSceneEventInfofP12CChoreoSceneP12CChoreoEvent"
		},
		{
			"name": "CBaseFlex::PlayScene(char const*, float, AI_Response*, IRecipientFilter*)",
			"name_mangled": "_ZN9CBaseFlex9PlaySceneEPKcfP11AI_ResponseP16IRecipientFilter"
		},
		{
			"name": "CBaseFlex::PlayAutoGeneratedSoundScene(char const*)",
			"name_mangled": "_ZN9CBaseFlex27PlayAutoGeneratedSoundSceneEPKc"
		},
		{
			"name": "CBaseFlex::GetSpecialDSP()",
			"name_mangled": "_ZN9CBaseFlex13GetSpecialDSPEv"
		},
		{
			"name": "CBaseCombatCharacter::GetPhysicsImpactDamageTable()",
			"name_mangled": "_ZN20CBaseCombatCharacter27GetPhysicsImpactDamageTableEv"
		},
		{
			"name": "CBaseCombatCharacter::FInViewCone(CBaseEntity*)",
			"name_mangled": "_ZN20CBaseCombatCharacter11FInViewConeEP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::FInViewCone(Vector const&)",
			"name_mangled": "_ZN20CBaseCombatCharacter11FInViewConeERK6Vector"
		},
		{
			"name": "CBaseCombatCharacter::FInAimCone(CBaseEntity*)",
			"name_mangled": "_ZN20CBaseCombatCharacter10FInAimConeEP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::FInAimCone(Vector const&)",
			"name_mangled": "_ZN20CBaseCombatCharacter10FInAimConeERK6Vector"
		},
		{
			"name": "CBaseCombatCharacter::ShouldShootMissTarget(CBaseCombatCharacter*)",
			"name_mangled": "_ZN20CBaseCombatCharacter21ShouldShootMissTargetEPS_"
		},
		{
			"name": "CBaseCombatCharacter::FindMissTarget()",
			"name_mangled": "_ZN20CBaseCombatCharacter14FindMissTargetEv"
		},
		{
			"name": "CBaseCombatCharacter::HandleInteraction(int, void*, CBaseCombatCharacter*)",
			"name_mangled": "_ZN20CBaseCombatCharacter17HandleInteractionEiPvPS_"
		},
		{
			"name": "CBaseCombatCharacter::BodyAngles()",
			"name_mangled": "_ZN20CBaseCombatCharacter10BodyAnglesEv"
		},
		{
			"name": "CBaseCombatCharacter::BodyDirection2D()",
			"name_mangled": "_ZN20CBaseCombatCharacter15BodyDirection2DEv"
		},
		{
			"name": "CBaseCombatCharacter::BodyDirection3D()",
			"name_mangled": "_ZN20CBaseCombatCharacter15BodyDirection3DEv"
		},
		{
			"name": "CBaseCombatCharacter::HeadDirection2D()",
			"name_mangled": "_ZN20CBaseCombatCharacter15HeadDirection2DEv"
		},
		{
			"name": "CBaseCombatCharacter::HeadDirection3D()",
			"name_mangled": "_ZN20CBaseCombatCharacter15HeadDirection3DEv"
		},
		{
			"name": "CBaseCombatCharacter::EyeDirection2D()",
			"name_mangled": "_ZN20CBaseCombatCharacter14EyeDirection2DEv"
		},
		{
			"name": "CBaseCombatCharacter::EyeDirection3D()",
			"name_mangled": "_ZN20CBaseCombatCharacter14EyeDirection3DEv"
		},
		{
			"name": "CBaseCombatCharacter::IsHiddenByFog(Vector const&) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter13IsHiddenByFogERK6Vector"
		},
		{
			"name": "CBaseCombatCharacter::IsHiddenByFog(CBaseEntity*) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter13IsHiddenByFogEP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::IsHiddenByFog(float) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter13IsHiddenByFogEf"
		},
		{
			"name": "CBaseCombatCharacter::GetFogObscuredRatio(Vector const&) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter19GetFogObscuredRatioERK6Vector"
		},
		{
			"name": "CBaseCombatCharacter::GetFogObscuredRatio(CBaseEntity*) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter19GetFogObscuredRatioEP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::GetFogObscuredRatio(float) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter19GetFogObscuredRatioEf"
		},
		{
			"name": "CBaseCombatCharacter::IsLookingTowards(CBaseEntity const*, float) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter16IsLookingTowardsEPK11CBaseEntityf"
		},
		{
			"name": "CBaseCombatCharacter::IsLookingTowards(Vector const&, float) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter16IsLookingTowardsERK6Vectorf"
		},
		{
			"name": "CBaseCombatCharacter::IsInFieldOfView(CBaseEntity*) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter15IsInFieldOfViewEP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::IsInFieldOfView(Vector const&) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter15IsInFieldOfViewERK6Vector"
		},
		{
			"name": "CBaseCombatCharacter::IsLineOfSightClear(CBaseEntity*, CBaseCombatCharacter::LineOfSightCheckType) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter18IsLineOfSightClearEP11CBaseEntityNS_20LineOfSightCheckTypeE"
		},
		{
			"name": "CBaseCombatCharacter::IsLineOfSightClear(Vector const&, CBaseCombatCharacter::LineOfSightCheckType, CBaseEntity*) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter18IsLineOfSightClearERK6VectorNS_20LineOfSightCheckTypeEP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::GiveAmmo(int, int, bool)",
			"name_mangled": "_ZN20CBaseCombatCharacter8GiveAmmoEiib"
		},
		{
			"name": "CBaseCombatCharacter::RemoveAmmo(int, int)",
			"name_mangled": "_ZN20CBaseCombatCharacter10RemoveAmmoEii"
		},
		{
			"name": "CBaseCombatCharacter::RemoveAmmo(int, char const*)",
			"name_mangled": "_ZN20CBaseCombatCharacter10RemoveAmmoEiPKc"
		},
		{
			"name": "CBaseCombatCharacter::GetAmmoCount(int) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter12GetAmmoCountEi"
		},
		{
			"name": "CBaseCombatCharacter::NPC_TranslateActivity(Activity)",
			"name_mangled": "_ZN20CBaseCombatCharacter21NPC_TranslateActivityE8Activity"
		},
		{
			"name": "CBaseCombatCharacter::Weapon_TranslateActivity(Activity, bool*)",
			"name_mangled": "_ZN20CBaseCombatCharacter24Weapon_TranslateActivityE8ActivityPb"
		},
		{
			"name": "CBaseCombatCharacter::Weapon_FrameUpdate()",
			"name_mangled": "_ZN20CBaseCombatCharacter18Weapon_FrameUpdateEv"
		},
		{
			"name": "CBaseCombatCharacter::Weapon_HandleAnimEvent(animevent_t*)",
			"name_mangled": "_ZN20CBaseCombatCharacter22Weapon_HandleAnimEventEP11animevent_t"
		},
		{
			"name": "CBaseCombatCharacter::Weapon_CanUse(CBaseCombatWeapon*)",
			"name_mangled": "_ZN20CBaseCombatCharacter13Weapon_CanUseEP17CBaseCombatWeapon"
		},
		{
			"name": "CBaseCombatCharacter::Weapon_Equip(CBaseCombatWeapon*)",
			"name_mangled": "_ZN20CBaseCombatCharacter12Weapon_EquipEP17CBaseCombatWeapon"
		},
		{
			"name": "CBaseCombatCharacter::Weapon_EquipAmmoOnly(CBaseCombatWeapon*)",
			"name_mangled": "_ZN20CBaseCombatCharacter20Weapon_EquipAmmoOnlyEP17CBaseCombatWeapon"
		},
		{
			"name": "CBaseCombatCharacter::Weapon_Drop(CBaseCombatWeapon*, Vector const*, Vector const*)",
			"name_mangled": "_ZN20CBaseCombatCharacter11Weapon_DropEP17CBaseCombatWeaponPK6VectorS4_"
		},
		{
			"name": "CBaseCombatCharacter::Weapon_Switch(CBaseCombatWeapon*, int)",
			"name_mangled": "_ZN20CBaseCombatCharacter13Weapon_SwitchEP17CBaseCombatWeaponi"
		},
		{
			"name": "CBaseCombatCharacter::Weapon_ShootPosition()",
			"name_mangled": "_ZN20CBaseCombatCharacter20Weapon_ShootPositionEv"
		},
		{
			"name": "CBaseCombatCharacter::Weapon_CanSwitchTo(CBaseCombatWeapon*)",
			"name_mangled": "_ZN20CBaseCombatCharacter18Weapon_CanSwitchToEP17CBaseCombatWeapon"
		},
		{
			"name": "CBaseCombatCharacter::Weapon_SlotOccupied(CBaseCombatWeapon*)",
			"name_mangled": "_ZN20CBaseCombatCharacter19Weapon_SlotOccupiedEP17CBaseCombatWeapon"
		},
		{
			"name": "CBaseCombatCharacter::Weapon_GetSlot(int) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter14Weapon_GetSlotEi"
		},
		{
			"name": "CBaseCombatCharacter::AddPlayerItem(CBaseCombatWeapon*)",
			"name_mangled": "_ZN20CBaseCombatCharacter13AddPlayerItemEP17CBaseCombatWeapon"
		},
		{
			"name": "CBaseCombatCharacter::RemovePlayerItem(CBaseCombatWeapon*)",
			"name_mangled": "_ZN20CBaseCombatCharacter16RemovePlayerItemEP17CBaseCombatWeapon"
		},
		{
			"name": "CBaseCombatCharacter::CanBecomeServerRagdoll()",
			"name_mangled": "_ZN20CBaseCombatCharacter22CanBecomeServerRagdollEv"
		},
		{
			"name": "CBaseCombatCharacter::OnTakeDamage_Alive(CTakeDamageInfo const&)",
			"name_mangled": "_ZN20CBaseCombatCharacter18OnTakeDamage_AliveERK15CTakeDamageInfo"
		},
		{
			"name": "CBaseCombatCharacter::OnTakeDamage_Dying(CTakeDamageInfo const&)",
			"name_mangled": "_ZN20CBaseCombatCharacter18OnTakeDamage_DyingERK15CTakeDamageInfo"
		},
		{
			"name": "CBaseCombatCharacter::OnTakeDamage_Dead(CTakeDamageInfo const&)",
			"name_mangled": "_ZN20CBaseCombatCharacter17OnTakeDamage_DeadERK15CTakeDamageInfo"
		},
		{
			"name": "CBaseCombatCharacter::GetAliveDuration() const",
			"name_mangled": "_ZNK20CBaseCombatCharacter16GetAliveDurationEv"
		},
		{
			"name": "CBaseCombatCharacter::OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)",
			"name_mangled": "_ZN20CBaseCombatCharacter15OnFriendDamagedEPS_P11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::NotifyFriendsOfDamage(CBaseEntity*)",
			"name_mangled": "_ZN20CBaseCombatCharacter21NotifyFriendsOfDamageEP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::HasEverBeenInjured(int) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter18HasEverBeenInjuredEi"
		},
		{
			"name": "CBaseCombatCharacter::GetTimeSinceLastInjury(int) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter22GetTimeSinceLastInjuryEi"
		},
		{
			"name": "CBaseCombatCharacter::OnPlayerKilledOther(CBaseEntity*, CTakeDamageInfo const&)",
			"name_mangled": "_ZN20CBaseCombatCharacter19OnPlayerKilledOtherEP11CBaseEntityRK15CTakeDamageInfo"
		},
		{
			"name": "CBaseCombatCharacter::GetDeathActivity()",
			"name_mangled": "_ZN20CBaseCombatCharacter16GetDeathActivityEv"
		},
		{
			"name": "CBaseCombatCharacter::CorpseGib(CTakeDamageInfo const&)",
			"name_mangled": "_ZN20CBaseCombatCharacter9CorpseGibERK15CTakeDamageInfo"
		},
		{
			"name": "CBaseCombatCharacter::CorpseFade()",
			"name_mangled": "_ZN20CBaseCombatCharacter10CorpseFadeEv"
		},
		{
			"name": "CBaseCombatCharacter::HasHumanGibs()",
			"name_mangled": "_ZN20CBaseCombatCharacter12HasHumanGibsEv"
		},
		{
			"name": "CBaseCombatCharacter::HasAlienGibs()",
			"name_mangled": "_ZN20CBaseCombatCharacter12HasAlienGibsEv"
		},
		{
			"name": "CBaseCombatCharacter::ShouldGib(CTakeDamageInfo const&)",
			"name_mangled": "_ZN20CBaseCombatCharacter9ShouldGibERK15CTakeDamageInfo"
		},
		{
			"name": "CBaseCombatCharacter::OnKilledNPC(CBaseCombatCharacter*)",
			"name_mangled": "_ZN20CBaseCombatCharacter11OnKilledNPCEPS_"
		},
		{
			"name": "CBaseCombatCharacter::Event_Gibbed(CTakeDamageInfo const&)",
			"name_mangled": "_ZN20CBaseCombatCharacter12Event_GibbedERK15CTakeDamageInfo"
		},
		{
			"name": "CBaseCombatCharacter::Event_Dying(CTakeDamageInfo const&)",
			"name_mangled": "_ZN20CBaseCombatCharacter11Event_DyingERK15CTakeDamageInfo"
		},
		{
			"name": "CBaseCombatCharacter::Event_Dying()",
			"name_mangled": "_ZN20CBaseCombatCharacter11Event_DyingEv"
		},
		{
			"name": "CBaseCombatCharacter::BecomeRagdoll(CTakeDamageInfo const&, Vector const&)",
			"name_mangled": "_ZN20CBaseCombatCharacter13BecomeRagdollERK15CTakeDamageInfoRK6Vector"
		},
		{
			"name": "CBaseCombatCharacter::FixupBurningServerRagdoll(CBaseEntity*)",
			"name_mangled": "_ZN20CBaseCombatCharacter25FixupBurningServerRagdollEP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::BecomeRagdollBoogie(CBaseEntity*, Vector const&, float, int)",
			"name_mangled": "_ZN20CBaseCombatCharacter19BecomeRagdollBoogieEP11CBaseEntityRK6Vectorfi"
		},
		{
			"name": "CBaseCombatCharacter::CheckTraceHullAttack(float, Vector const&, Vector const&, int, int, float, bool)",
			"name_mangled": "_ZN20CBaseCombatCharacter20CheckTraceHullAttackEfRK6VectorS2_iifb"
		},
		{
			"name": "CBaseCombatCharacter::CheckTraceHullAttack(Vector const&, Vector const&, Vector const&, Vector const&, int, int, float, bool)",
			"name_mangled": "_ZN20CBaseCombatCharacter20CheckTraceHullAttackERK6VectorS2_S2_S2_iifb"
		},
		{
			"name": "CBaseCombatCharacter::PushawayTouch(CBaseEntity*)",
			"name_mangled": "_ZN20CBaseCombatCharacter13PushawayTouchEP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::IRelationType(CBaseEntity*)",
			"name_mangled": "_ZN20CBaseCombatCharacter13IRelationTypeEP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::IRelationPriority(CBaseEntity*)",
			"name_mangled": "_ZN20CBaseCombatCharacter17IRelationPriorityEP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::IsInAVehicle() const",
			"name_mangled": "_ZNK20CBaseCombatCharacter12IsInAVehicleEv"
		},
		{
			"name": "CBaseCombatCharacter::GetVehicle()",
			"name_mangled": "_ZN20CBaseCombatCharacter10GetVehicleEv"
		},
		{
			"name": "CBaseCombatCharacter::GetVehicleEntity()",
			"name_mangled": "_ZN20CBaseCombatCharacter16GetVehicleEntityEv"
		},
		{
			"name": "CBaseCombatCharacter::ExitVehicle()",
			"name_mangled": "_ZN20CBaseCombatCharacter11ExitVehicleEv"
		},
		{
			"name": "CBaseCombatCharacter::RemoveAllWeapons()",
			"name_mangled": "_ZN20CBaseCombatCharacter16RemoveAllWeaponsEv"
		},
		{
			"name": "CBaseCombatCharacter::CalcWeaponProficiency(CBaseCombatWeapon*)",
			"name_mangled": "_ZN20CBaseCombatCharacter21CalcWeaponProficiencyEP17CBaseCombatWeapon"
		},
		{
			"name": "CBaseCombatCharacter::GetAttackSpread(CBaseCombatWeapon*, CBaseEntity*)",
			"name_mangled": "_ZN20CBaseCombatCharacter15GetAttackSpreadEP17CBaseCombatWeaponP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::GetSpreadBias(CBaseCombatWeapon*, CBaseEntity*)",
			"name_mangled": "_ZN20CBaseCombatCharacter13GetSpreadBiasEP17CBaseCombatWeaponP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::DoMuzzleFlash()",
			"name_mangled": "_ZN20CBaseCombatCharacter13DoMuzzleFlashEv"
		},
		{
			"name": "CBaseCombatCharacter::AddEntityRelationship(CBaseEntity*, Disposition_t, int)",
			"name_mangled": "_ZN20CBaseCombatCharacter21AddEntityRelationshipEP11CBaseEntity13Disposition_ti"
		},
		{
			"name": "CBaseCombatCharacter::RemoveEntityRelationship(CBaseEntity*)",
			"name_mangled": "_ZN20CBaseCombatCharacter24RemoveEntityRelationshipEP11CBaseEntity"
		},
		{
			"name": "CBaseCombatCharacter::AddClassRelationship(Class_T, Disposition_t, int)",
			"name_mangled": "_ZN20CBaseCombatCharacter20AddClassRelationshipE7Class_T13Disposition_ti"
		},
		{
			"name": "CBaseCombatCharacter::OnChangeActiveWeapon(CBaseCombatWeapon*, CBaseCombatWeapon*)",
			"name_mangled": "_ZN20CBaseCombatCharacter20OnChangeActiveWeaponEP17CBaseCombatWeaponS1_"
		},
		{
			"name": "CBaseCombatCharacter::GetLastKnownArea() const",
			"name_mangled": "_ZNK20CBaseCombatCharacter16GetLastKnownAreaEv"
		},
		{
			"name": "CBaseCombatCharacter::IsAreaTraversable(CNavArea const*) const",
			"name_mangled": "_ZNK20CBaseCombatCharacter17IsAreaTraversableEPK8CNavArea"
		},
		{
			"name": "CBaseCombatCharacter::ClearLastKnownArea()",
			"name_mangled": "_ZN20CBaseCombatCharacter18ClearLastKnownAreaEv"
		},
		{
			"name": "CBaseCombatCharacter::UpdateLastKnownArea()",
			"name_mangled": "_ZN20CBaseCombatCharacter19UpdateLastKnownAreaEv"
		},
		{
			"name": "CBaseCombatCharacter::OnNavAreaChanged(CNavArea*, CNavArea*)",
			"name_mangled": "_ZN20CBaseCombatCharacter16OnNavAreaChangedEP8CNavAreaS1_"
		},
		{
			"name": "CBaseCombatCharacter::OnNavAreaRemoved(CNavArea*)",
			"name_mangled": "_ZN20CBaseCombatCharacter16OnNavAreaRemovedEP8CNavArea"
		},
		{
			"name": "CBaseCombatCharacter::OnPursuedBy(INextBot*)",
			"name_mangled": "_ZN20CBaseCombatCharacter11OnPursuedByEP8INextBot"
		},
		{
			"name": "CBaseCombatCharacter::GetBossType() const",
			"name_mangled": "_ZNK20CBaseCombatCharacter11GetBossTypeEv"
		},
		{
			"name": "CBaseCombatCharacter::NetworkStateChanged_m_iAmmo()",
			"name_mangled": "_ZN20CBaseCombatCharacter27NetworkStateChanged_m_iAmmoEv"
		},
		{
			"name": "CBaseCombatCharacter::NetworkStateChanged_m_iAmmo(void*)",
			"name_mangled": "_ZN20CBaseCombatCharacter27NetworkStateChanged_m_iAmmoEPv"
		},
		{
			"name": "CBaseObject::BaseObjectThink()",
			"name_mangled": "_ZN11CBaseObject15BaseObjectThinkEv"
		},
		{
			"name": "CBaseObject::GetOwner()",
			"name_mangled": "_ZN11CBaseObject8GetOwnerEv"
		},
		{
			"name": "CObjectTeleporter::FirstSpawn()",
			"name_mangled": "_ZN17CObjectTeleporter10FirstSpawnEv"
		},
		{
			"name": "CBaseObject::SetBuilder(CTFPlayer*)",
			"name_mangled": "_ZN11CBaseObject10SetBuilderEP9CTFPlayer"
		},
		{
			"name": "CBaseObject::SetType(int)",
			"name_mangled": "_ZN11CBaseObject7SetTypeEi"
		},
		{
			"name": "CBaseObject::GetTotalTime()",
			"name_mangled": "_ZN11CBaseObject12GetTotalTimeEv"
		},
		{
			"name": "CBaseObject::StartPlacement(CTFPlayer*)",
			"name_mangled": "_ZN11CBaseObject14StartPlacementEP9CTFPlayer"
		},
		{
			"name": "CBaseObject::GetNearbyObjectCheckRadius()",
			"name_mangled": "_ZN11CBaseObject26GetNearbyObjectCheckRadiusEv"
		},
		{
			"name": "CObjectTeleporter::IsPlacementPosValid()",
			"name_mangled": "_ZN17CObjectTeleporter19IsPlacementPosValidEv"
		},
		{
			"name": "CBaseObject::FindObjectOnBuildPoint(CBaseObject*)",
			"name_mangled": "_ZN11CBaseObject22FindObjectOnBuildPointEPS_"
		},
		{
			"name": "CObjectTeleporter::StartBuilding(CBaseEntity*)",
			"name_mangled": "_ZN17CObjectTeleporter13StartBuildingEP11CBaseEntity"
		},
		{
			"name": "CObjectTeleporter::SetStartBuildingModel()",
			"name_mangled": "_ZN17CObjectTeleporter21SetStartBuildingModelEv"
		},
		{
			"name": "CObjectTeleporter::FinishedBuilding()",
			"name_mangled": "_ZN17CObjectTeleporter16FinishedBuildingEv"
		},
		{
			"name": "CObjectTeleporter::IsUpgrading() const",
			"name_mangled": "_ZNK17CObjectTeleporter11IsUpgradingEv"
		},
		{
			"name": "CBaseObject::OnEndBeingCarried(CBaseEntity*)",
			"name_mangled": "_ZN11CBaseObject17OnEndBeingCarriedEP11CBaseEntity"
		},
		{
			"name": "CBaseObject::GetControlPanelInfo(int, char const*&)",
			"name_mangled": "_ZN11CBaseObject19GetControlPanelInfoEiRPKc"
		},
		{
			"name": "CBaseObject::GetControlPanelClassName(int, char const*&)",
			"name_mangled": "_ZN11CBaseObject24GetControlPanelClassNameEiRPKc"
		},
		{
			"name": "CBaseObject::ClientCommand(CTFPlayer*, CCommand const&)",
			"name_mangled": "_ZN11CBaseObject13ClientCommandEP9CTFPlayerRK8CCommand"
		},
		{
			"name": "CBaseObject::Construct(float)",
			"name_mangled": "_ZN11CBaseObject9ConstructEf"
		},
		{
			"name": "CBaseObject::GetConstructionMultiplier()",
			"name_mangled": "_ZN11CBaseObject25GetConstructionMultiplierEv"
		},
		{
			"name": "CBaseObject::DetonateObject()",
			"name_mangled": "_ZN11CBaseObject14DetonateObjectEv"
		},
		{
			"name": "CBaseObject::ShouldAutoRemove()",
			"name_mangled": "_ZN11CBaseObject16ShouldAutoRemoveEv"
		},
		{
			"name": "CObjectTeleporter::Explode()",
			"name_mangled": "_ZN17CObjectTeleporter7ExplodeEv"
		},
		{
			"name": "CBaseObject::Killed(CTakeDamageInfo const&)",
			"name_mangled": "_ZN11CBaseObject6KilledERK15CTakeDamageInfo"
		},
		{
			"name": "CBaseObject::DestroyObject()",
			"name_mangled": "_ZN11CBaseObject13DestroyObjectEv"
		},
		{
			"name": "CBaseObject::IsDying()",
			"name_mangled": "_ZN11CBaseObject7IsDyingEv"
		},
		{
			"name": "CBaseObject::GetType() const",
			"name_mangled": "_ZNK11CBaseObject7GetTypeEv"
		},
		{
			"name": "CBaseObject::GetBuilder() const",
			"name_mangled": "_ZNK11CBaseObject10GetBuilderEv"
		},
		{
			"name": "CBaseObject::IsAnUpgrade()",
			"name_mangled": "_ZN11CBaseObject11IsAnUpgradeEv"
		},
		{
			"name": "CBaseObject::IsHostileUpgrade()",
			"name_mangled": "_ZN11CBaseObject16IsHostileUpgradeEv"
		},
		{
			"name": "CObjectTeleporter::InputEnable(inputdata_t&)",
			"name_mangled": "_ZN17CObjectTeleporter11InputEnableER11inputdata_t"
		},
		{
			"name": "CObjectTeleporter::InputDisable(inputdata_t&)",
			"name_mangled": "_ZN17CObjectTeleporter12InputDisableER11inputdata_t"
		},
		{
			"name": "CObjectTeleporter::InputWrenchHit(CTFPlayer*, CTFWrench*, Vector)",
			"name_mangled": "_ZN17CObjectTeleporter14InputWrenchHitEP9CTFPlayerP9CTFWrench6Vector"
		},
		{
			"name": "CBaseObject::OnWrenchHit(CTFPlayer*, CTFWrench*, Vector)",
			"name_mangled": "_ZN11CBaseObject11OnWrenchHitEP9CTFPlayerP9CTFWrench6Vector"
		},
		{
			"name": "CObjectTeleporter::CheckUpgradeOnHit(CTFPlayer*)",
			"name_mangled": "_ZN17CObjectTeleporter17CheckUpgradeOnHitEP9CTFPlayer"
		},
		{
			"name": "CObjectTeleporter::Command_Repair(CTFPlayer*, float, float, float, bool)",
			"name_mangled": "_ZN17CObjectTeleporter14Command_RepairEP9CTFPlayerfffb"
		},
		{
			"name": "CBaseObject::DoWrenchHitEffect(Vector, bool, bool)",
			"name_mangled": "_ZN11CBaseObject17DoWrenchHitEffectE6Vectorbb"
		},
		{
			"name": "CBaseObject::ShouldBeMiniBuilding(CTFPlayer*)",
			"name_mangled": "_ZN11CBaseObject20ShouldBeMiniBuildingEP9CTFPlayer"
		},
		{
			"name": "CBaseObject::MakeMiniBuilding(CTFPlayer*)",
			"name_mangled": "_ZN11CBaseObject16MakeMiniBuildingEP9CTFPlayer"
		},
		{
			"name": "CBaseObject::MakeDisposableBuilding(CTFPlayer*)",
			"name_mangled": "_ZN11CBaseObject22MakeDisposableBuildingEP9CTFPlayer"
		},
		{
			"name": "CBaseObject::ShouldBeActive()",
			"name_mangled": "_ZN11CBaseObject14ShouldBeActiveEv"
		},
		{
			"name": "CObjectTeleporter::OnGoActive()",
			"name_mangled": "_ZN17CObjectTeleporter10OnGoActiveEv"
		},
		{
			"name": "CBaseObject::OnGoInactive()",
			"name_mangled": "_ZN11CBaseObject12OnGoInactiveEv"
		},
		{
			"name": "CBaseObject::UpdateDisabledState()",
			"name_mangled": "_ZN11CBaseObject19UpdateDisabledStateEv"
		},
		{
			"name": "CBaseObject::OnStartDisabled()",
			"name_mangled": "_ZN11CBaseObject15OnStartDisabledEv"
		},
		{
			"name": "CBaseObject::OnEndDisabled()",
			"name_mangled": "_ZN11CBaseObject13OnEndDisabledEv"
		},
		{
			"name": "CBaseObject::PlayStartupAnimation()",
			"name_mangled": "_ZN11CBaseObject20PlayStartupAnimationEv"
		},
		{
			"name": "CBaseObject::SetupAttachedVersion()",
			"name_mangled": "_ZN11CBaseObject20SetupAttachedVersionEv"
		},
		{
			"name": "CBaseObject::ShouldPlayersAvoid()",
			"name_mangled": "_ZN11CBaseObject18ShouldPlayersAvoidEv"
		},
		{
			"name": "CObjectTeleporter::InitializeMapPlacedObject()",
			"name_mangled": "_ZN17CObjectTeleporter25InitializeMapPlacedObjectEv"
		},
		{
			"name": "CBaseObject::CanBeUpgraded(CTFPlayer*)",
			"name_mangled": "_ZN11CBaseObject13CanBeUpgradedEP9CTFPlayer"
		},
		{
			"name": "CObjectTeleporter::StartUpgrading()",
			"name_mangled": "_ZN17CObjectTeleporter14StartUpgradingEv"
		},
		{
			"name": "CObjectTeleporter::FinishUpgrading()",
			"name_mangled": "_ZN17CObjectTeleporter15FinishUpgradingEv"
		},
		{
			"name": "CBaseObject::GetUpgradeLevel() const",
			"name_mangled": "_ZNK11CBaseObject15GetUpgradeLevelEv"
		},
		{
			"name": "CObjectTeleporter::GetBaseHealth()",
			"name_mangled": "_ZN17CObjectTeleporter13GetBaseHealthEv"
		},
		{
			"name": "CBaseObject::GetMaxUpgradeLevel()",
			"name_mangled": "_ZN11CBaseObject18GetMaxUpgradeLevelEv"
		},
		{
			"name": "CObjectTeleporter::MakeCarriedObject(CTFPlayer*)",
			"name_mangled": "_ZN17CObjectTeleporter17MakeCarriedObjectEP9CTFPlayer"
		},
		{
			"name": "CBaseObject::DropCarriedObject(CTFPlayer*)",
			"name_mangled": "_ZN11CBaseObject17DropCarriedObjectEP9CTFPlayer"
		},
		{
			"name": "CBaseObject::GetMiniBuildingStartingHealth()",
			"name_mangled": "_ZN11CBaseObject29GetMiniBuildingStartingHealthEv"
		},
		{
			"name": "CBaseObject::GetMaxHealthForCurrentLevel()",
			"name_mangled": "_ZN11CBaseObject27GetMaxHealthForCurrentLevelEv"
		},
		{
			"name": "CBaseObject::GetScorer()",
			"name_mangled": "_ZN11CBaseObject9GetScorerEv"
		},
		{
			"name": "CBaseObject::GetAssistant()",
			"name_mangled": "_ZN11CBaseObject12GetAssistantEv"
		},
		{
			"name": "CBaseObject::AddBuildPoint(int)",
			"name_mangled": "_ZN11CBaseObject13AddBuildPointEi"
		},
		{
			"name": "CBaseObject::AddValidObjectToBuildPoint(int, int)",
			"name_mangled": "_ZN11CBaseObject26AddValidObjectToBuildPointEii"
		},
		{
			"name": "CBaseObject::GetBuildPointObject(int)",
			"name_mangled": "_ZN11CBaseObject19GetBuildPointObjectEi"
		},
		{
			"name": "CBaseObject::DetachObjectFromObject()",
			"name_mangled": "_ZN11CBaseObject22DetachObjectFromObjectEv"
		},
		{
			"name": "CObjectTeleporter::SetObjectMode(int)",
			"name_mangled": "_ZN17CObjectTeleporter13SetObjectModeEi"
		},
		{
			"name": "CBaseObject::GetNumBuildPoints() const",
			"name_mangled": "_ZNK11CBaseObject17GetNumBuildPointsEv"
		},
		{
			"name": "CBaseObject::GetBuildPoint(int, Vector&, QAngle&)",
			"name_mangled": "_ZN11CBaseObject13GetBuildPointEiR6VectorR6QAngle"
		},
		{
			"name": "CBaseObject::GetBuildPointAttachmentIndex(int) const",
			"name_mangled": "_ZNK11CBaseObject28GetBuildPointAttachmentIndexEi"
		},
		{
			"name": "CBaseObject::CanBuildObjectOnBuildPoint(int, int)",
			"name_mangled": "_ZN11CBaseObject26CanBuildObjectOnBuildPointEii"
		},
		{
			"name": "CBaseObject::SetObjectOnBuildPoint(int, CBaseObject*)",
			"name_mangled": "_ZN11CBaseObject21SetObjectOnBuildPointEiPS_"
		},
		{
			"name": "CBaseObject::GetMaxSnapDistance(int)",
			"name_mangled": "_ZN11CBaseObject18GetMaxSnapDistanceEi"
		},
		{
			"name": "CBaseObject::ShouldCheckForMovement()",
			"name_mangled": "_ZN11CBaseObject22ShouldCheckForMovementEv"
		},
		{
			"name": "CBaseObject::GetNumObjectsOnMe()",
			"name_mangled": "_ZN11CBaseObject17GetNumObjectsOnMeEv"
		},
		{
			"name": "CBaseObject::GetFirstFriendlyObjectOnMe()",
			"name_mangled": "_ZN11CBaseObject26GetFirstFriendlyObjectOnMeEv"
		},
		{
			"name": "CBaseObject::GetObjectOfTypeOnMe(int)",
			"name_mangled": "_ZN11CBaseObject19GetObjectOfTypeOnMeEi"
		},
		{
			"name": "CBaseObject::RemoveAllObjects()",
			"name_mangled": "_ZN11CBaseObject16RemoveAllObjectsEv"
		},
		{
			"name": "CBaseObject::GetShieldLevel()",
			"name_mangled": "_ZN11CBaseObject14GetShieldLevelEv"
		},
		{
			"name": "CBaseObject::CanBeRepaired() const",
			"name_mangled": "_ZNK11CBaseObject13CanBeRepairedEv"
		},
		{
			"name": "CBaseObject::CanBeUpgraded() const",
			"name_mangled": "_ZNK11CBaseObject13CanBeUpgradedEv"
		},
		{
			"name": "CObjectTeleporter::GetUpgradeMetalRequired()",
			"name_mangled": "_ZN17CObjectTeleporter23GetUpgradeMetalRequiredEv"
		},
		{
			"name": "CBaseObject::DetermineAnimation()",
			"name_mangled": "_ZN11CBaseObject18DetermineAnimationEv"
		},
		{
			"name": "CObjectTeleporter::DeterminePlaybackRate()",
			"name_mangled": "_ZN17CObjectTeleporter21DeterminePlaybackRateEv"
		},
		{
			"name": "CObjectTeleporter::TeleporterSend(CTFPlayer*)",
			"name_mangled": "_ZN17CObjectTeleporter14TeleporterSendEP9CTFPlayer"
		},
		{
			"name": "CObjectTeleporter::TeleporterReceive(CTFPlayer*, float)",
			"name_mangled": "_ZN17CObjectTeleporter17TeleporterReceiveEP9CTFPlayerf"
		},
		{
			"name": "CObjectTeleporter::FireGameEvent(IGameEvent*)",
			"name_mangled": "_ZN17CObjectTeleporter13FireGameEventEP10IGameEvent"
		}
	]
}