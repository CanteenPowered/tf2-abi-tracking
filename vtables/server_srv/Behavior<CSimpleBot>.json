{
	"classname": "Behavior<CSimpleBot>",
	"classname_mangled": "_ZTV8BehaviorI10CSimpleBotE",
	"members": [
		{
			"name": "Behavior<CSimpleBot>::~Behavior()",
			"name_mangled": "_ZN8BehaviorI10CSimpleBotED0Ev"
		},
		{
			"name": "Behavior<CSimpleBot>::FirstContainedResponder() const",
			"name_mangled": "_ZNK8BehaviorI10CSimpleBotE23FirstContainedResponderEv"
		},
		{
			"name": "Behavior<CSimpleBot>::NextContainedResponder(INextBotEventResponder*) const",
			"name_mangled": "_ZNK8BehaviorI10CSimpleBotE22NextContainedResponderEP22INextBotEventResponder"
		},
		{
			"name": "INextBotEventResponder::OnLeaveGround(CBaseEntity*)",
			"name_mangled": "_ZN22INextBotEventResponder13OnLeaveGroundEP11CBaseEntity"
		},
		{
			"name": "INextBotEventResponder::OnLandOnGround(CBaseEntity*)",
			"name_mangled": "_ZN22INextBotEventResponder14OnLandOnGroundEP11CBaseEntity"
		},
		{
			"name": "INextBotEventResponder::OnContact(CBaseEntity*, CGameTrace*)",
			"name_mangled": "_ZN22INextBotEventResponder9OnContactEP11CBaseEntityP10CGameTrace"
		},
		{
			"name": "INextBotEventResponder::OnMoveToSuccess(Path const*)",
			"name_mangled": "_ZN22INextBotEventResponder15OnMoveToSuccessEPK4Path"
		},
		{
			"name": "INextBotEventResponder::OnMoveToFailure(Path const*, MoveToFailureType)",
			"name_mangled": "_ZN22INextBotEventResponder15OnMoveToFailureEPK4Path17MoveToFailureType"
		},
		{
			"name": "INextBotEventResponder::OnStuck()",
			"name_mangled": "_ZN22INextBotEventResponder7OnStuckEv"
		},
		{
			"name": "INextBotEventResponder::OnUnStuck()",
			"name_mangled": "_ZN22INextBotEventResponder9OnUnStuckEv"
		},
		{
			"name": "INextBotEventResponder::OnPostureChanged()",
			"name_mangled": "_ZN22INextBotEventResponder16OnPostureChangedEv"
		},
		{
			"name": "INextBotEventResponder::OnAnimationActivityComplete(int)",
			"name_mangled": "_ZN22INextBotEventResponder27OnAnimationActivityCompleteEi"
		},
		{
			"name": "INextBotEventResponder::OnAnimationActivityInterrupted(int)",
			"name_mangled": "_ZN22INextBotEventResponder30OnAnimationActivityInterruptedEi"
		},
		{
			"name": "INextBotEventResponder::OnAnimationEvent(animevent_t*)",
			"name_mangled": "_ZN22INextBotEventResponder16OnAnimationEventEP11animevent_t"
		},
		{
			"name": "INextBotEventResponder::OnIgnite()",
			"name_mangled": "_ZN22INextBotEventResponder8OnIgniteEv"
		},
		{
			"name": "INextBotEventResponder::OnInjured(CTakeDamageInfo const&)",
			"name_mangled": "_ZN22INextBotEventResponder9OnInjuredERK15CTakeDamageInfo"
		},
		{
			"name": "INextBotEventResponder::OnKilled(CTakeDamageInfo const&)",
			"name_mangled": "_ZN22INextBotEventResponder8OnKilledERK15CTakeDamageInfo"
		},
		{
			"name": "INextBotEventResponder::OnOtherKilled(CBaseCombatCharacter*, CTakeDamageInfo const&)",
			"name_mangled": "_ZN22INextBotEventResponder13OnOtherKilledEP20CBaseCombatCharacterRK15CTakeDamageInfo"
		},
		{
			"name": "INextBotEventResponder::OnSight(CBaseEntity*)",
			"name_mangled": "_ZN22INextBotEventResponder7OnSightEP11CBaseEntity"
		},
		{
			"name": "INextBotEventResponder::OnLostSight(CBaseEntity*)",
			"name_mangled": "_ZN22INextBotEventResponder11OnLostSightEP11CBaseEntity"
		},
		{
			"name": "INextBotEventResponder::OnSound(CBaseEntity*, Vector const&, KeyValues*)",
			"name_mangled": "_ZN22INextBotEventResponder7OnSoundEP11CBaseEntityRK6VectorP9KeyValues"
		},
		{
			"name": "INextBotEventResponder::OnSpokeConcept(CBaseCombatCharacter*, char const*, AI_Response*)",
			"name_mangled": "_ZN22INextBotEventResponder14OnSpokeConceptEP20CBaseCombatCharacterPKcP11AI_Response"
		},
		{
			"name": "INextBotEventResponder::OnWeaponFired(CBaseCombatCharacter*, CBaseCombatWeapon*)",
			"name_mangled": "_ZN22INextBotEventResponder13OnWeaponFiredEP20CBaseCombatCharacterP17CBaseCombatWeapon"
		},
		{
			"name": "INextBotEventResponder::OnNavAreaChanged(CNavArea*, CNavArea*)",
			"name_mangled": "_ZN22INextBotEventResponder16OnNavAreaChangedEP8CNavAreaS1_"
		},
		{
			"name": "INextBotEventResponder::OnModelChanged()",
			"name_mangled": "_ZN22INextBotEventResponder14OnModelChangedEv"
		},
		{
			"name": "INextBotEventResponder::OnPickUp(CBaseEntity*, CBaseCombatCharacter*)",
			"name_mangled": "_ZN22INextBotEventResponder8OnPickUpEP11CBaseEntityP20CBaseCombatCharacter"
		},
		{
			"name": "INextBotEventResponder::OnDrop(CBaseEntity*)",
			"name_mangled": "_ZN22INextBotEventResponder6OnDropEP11CBaseEntity"
		},
		{
			"name": "INextBotEventResponder::OnActorEmoted(CBaseCombatCharacter*, int)",
			"name_mangled": "_ZN22INextBotEventResponder13OnActorEmotedEP20CBaseCombatCharacteri"
		},
		{
			"name": "INextBotEventResponder::OnCommandAttack(CBaseEntity*)",
			"name_mangled": "_ZN22INextBotEventResponder15OnCommandAttackEP11CBaseEntity"
		},
		{
			"name": "INextBotEventResponder::OnCommandApproach(Vector const&, float)",
			"name_mangled": "_ZN22INextBotEventResponder17OnCommandApproachERK6Vectorf"
		},
		{
			"name": "INextBotEventResponder::OnCommandApproach(CBaseEntity*)",
			"name_mangled": "_ZN22INextBotEventResponder17OnCommandApproachEP11CBaseEntity"
		},
		{
			"name": "INextBotEventResponder::OnCommandRetreat(CBaseEntity*, float)",
			"name_mangled": "_ZN22INextBotEventResponder16OnCommandRetreatEP11CBaseEntityf"
		},
		{
			"name": "INextBotEventResponder::OnCommandPause(float)",
			"name_mangled": "_ZN22INextBotEventResponder14OnCommandPauseEf"
		},
		{
			"name": "INextBotEventResponder::OnCommandResume()",
			"name_mangled": "_ZN22INextBotEventResponder15OnCommandResumeEv"
		},
		{
			"name": "INextBotEventResponder::OnCommandString(char const*)",
			"name_mangled": "_ZN22INextBotEventResponder15OnCommandStringEPKc"
		},
		{
			"name": "INextBotEventResponder::OnShoved(CBaseEntity*)",
			"name_mangled": "_ZN22INextBotEventResponder8OnShovedEP11CBaseEntity"
		},
		{
			"name": "INextBotEventResponder::OnBlinded(CBaseEntity*)",
			"name_mangled": "_ZN22INextBotEventResponder9OnBlindedEP11CBaseEntity"
		},
		{
			"name": "INextBotEventResponder::OnTerritoryContested(int)",
			"name_mangled": "_ZN22INextBotEventResponder20OnTerritoryContestedEi"
		},
		{
			"name": "INextBotEventResponder::OnTerritoryCaptured(int)",
			"name_mangled": "_ZN22INextBotEventResponder19OnTerritoryCapturedEi"
		},
		{
			"name": "INextBotEventResponder::OnTerritoryLost(int)",
			"name_mangled": "_ZN22INextBotEventResponder15OnTerritoryLostEi"
		},
		{
			"name": "INextBotEventResponder::OnWin()",
			"name_mangled": "_ZN22INextBotEventResponder5OnWinEv"
		},
		{
			"name": "INextBotEventResponder::OnLose()",
			"name_mangled": "_ZN22INextBotEventResponder6OnLoseEv"
		},
		{
			"name": "Behavior<CSimpleBot>::ShouldPickUp(INextBot const*, CBaseEntity*) const",
			"name_mangled": "_ZNK8BehaviorI10CSimpleBotE12ShouldPickUpEPK8INextBotP11CBaseEntity"
		},
		{
			"name": "Behavior<CSimpleBot>::ShouldHurry(INextBot const*) const",
			"name_mangled": "_ZNK8BehaviorI10CSimpleBotE11ShouldHurryEPK8INextBot"
		},
		{
			"name": "Behavior<CSimpleBot>::ShouldRetreat(INextBot const*) const",
			"name_mangled": "_ZNK8BehaviorI10CSimpleBotE13ShouldRetreatEPK8INextBot"
		},
		{
			"name": "Behavior<CSimpleBot>::ShouldAttack(INextBot const*, CKnownEntity const*) const",
			"name_mangled": "_ZNK8BehaviorI10CSimpleBotE12ShouldAttackEPK8INextBotPK12CKnownEntity"
		},
		{
			"name": "Behavior<CSimpleBot>::IsHindrance(INextBot const*, CBaseEntity*) const",
			"name_mangled": "_ZNK8BehaviorI10CSimpleBotE11IsHindranceEPK8INextBotP11CBaseEntity"
		},
		{
			"name": "Behavior<CSimpleBot>::SelectTargetPoint(INextBot const*, CBaseCombatCharacter const*) const",
			"name_mangled": "_ZNK8BehaviorI10CSimpleBotE17SelectTargetPointEPK8INextBotPK20CBaseCombatCharacter"
		},
		{
			"name": "Behavior<CSimpleBot>::IsPositionAllowed(INextBot const*, Vector const&) const",
			"name_mangled": "_ZNK8BehaviorI10CSimpleBotE17IsPositionAllowedEPK8INextBotRK6Vector"
		},
		{
			"name": "Behavior<CSimpleBot>::SelectMoreDangerousThreat(INextBot const*, CBaseCombatCharacter const*, CKnownEntity const*, CKnownEntity const*) const",
			"name_mangled": "_ZNK8BehaviorI10CSimpleBotE25SelectMoreDangerousThreatEPK8INextBotPK20CBaseCombatCharacterPK12CKnownEntitySA_"
		}
	]
}