{
	"classname": "CTFGameRules",
	"classname_mangled": "_ZTV12CTFGameRules",
	"members": [
		{
			"name": "CMultiplayRules::Init()",
			"name_mangled": "_ZN15CMultiplayRules4InitEv"
		},
		{
			"name": "CBaseGameSystemPerFrame::PostInit()",
			"name_mangled": "_ZN23CBaseGameSystemPerFrame8PostInitEv"
		},
		{
			"name": "CBaseGameSystemPerFrame::Shutdown()",
			"name_mangled": "_ZN23CBaseGameSystemPerFrame8ShutdownEv"
		},
		{
			"name": "CBaseGameSystemPerFrame::LevelInitPreEntity()",
			"name_mangled": "_ZN23CBaseGameSystemPerFrame18LevelInitPreEntityEv"
		},
		{
			"name": "CTFGameRules::LevelInitPostEntity()",
			"name_mangled": "_ZN12CTFGameRules19LevelInitPostEntityEv"
		},
		{
			"name": "CBaseGameSystemPerFrame::LevelShutdownPreClearSteamAPIContext()",
			"name_mangled": "_ZN23CBaseGameSystemPerFrame36LevelShutdownPreClearSteamAPIContextEv"
		},
		{
			"name": "CBaseGameSystemPerFrame::LevelShutdownPreEntity()",
			"name_mangled": "_ZN23CBaseGameSystemPerFrame22LevelShutdownPreEntityEv"
		},
		{
			"name": "CGameRules::LevelShutdownPostEntity()",
			"name_mangled": "_ZN10CGameRules23LevelShutdownPostEntityEv"
		},
		{
			"name": "CBaseGameSystemPerFrame::OnSave()",
			"name_mangled": "_ZN23CBaseGameSystemPerFrame6OnSaveEv"
		},
		{
			"name": "CBaseGameSystemPerFrame::OnRestore()",
			"name_mangled": "_ZN23CBaseGameSystemPerFrame9OnRestoreEv"
		},
		{
			"name": "CBaseGameSystemPerFrame::SafeRemoveIfDesired()",
			"name_mangled": "_ZN23CBaseGameSystemPerFrame19SafeRemoveIfDesiredEv"
		},
		{
			"name": "CBaseGameSystemPerFrame::IsPerFrame()",
			"name_mangled": "_ZN23CBaseGameSystemPerFrame10IsPerFrameEv"
		},
		{
			"name": "CTFGameRules::~CTFGameRules()",
			"name_mangled": "_ZN12CTFGameRulesD2Ev"
		},
		{
			"name": "CTFGameRules::~CTFGameRules()",
			"name_mangled": "_ZN12CTFGameRulesD0Ev"
		},
		{
			"name": "CBaseGameSystemPerFrame::FrameUpdatePreEntityThink()",
			"name_mangled": "_ZN23CBaseGameSystemPerFrame25FrameUpdatePreEntityThinkEv"
		},
		{
			"name": "CTFGameRules::FrameUpdatePostEntityThink()",
			"name_mangled": "_ZN12CTFGameRules26FrameUpdatePostEntityThinkEv"
		},
		{
			"name": "CBaseGameSystemPerFrame::PreClientUpdate()",
			"name_mangled": "_ZN23CBaseGameSystemPerFrame15PreClientUpdateEv"
		},
		{
			"name": "CTFGameRules::Damage_IsTimeBased(int)",
			"name_mangled": "_ZN12CTFGameRules18Damage_IsTimeBasedEi"
		},
		{
			"name": "CMultiplayRules::Damage_ShouldGibCorpse(int)",
			"name_mangled": "_ZN15CMultiplayRules22Damage_ShouldGibCorpseEi"
		},
		{
			"name": "CTFGameRules::Damage_ShowOnHUD(int)",
			"name_mangled": "_ZN12CTFGameRules16Damage_ShowOnHUDEi"
		},
		{
			"name": "CMultiplayRules::Damage_NoPhysicsForce(int)",
			"name_mangled": "_ZN15CMultiplayRules21Damage_NoPhysicsForceEi"
		},
		{
			"name": "CTFGameRules::Damage_ShouldNotBleed(int)",
			"name_mangled": "_ZN12CTFGameRules21Damage_ShouldNotBleedEi"
		},
		{
			"name": "CTFGameRules::Damage_GetTimeBased()",
			"name_mangled": "_ZN12CTFGameRules19Damage_GetTimeBasedEv"
		},
		{
			"name": "CMultiplayRules::Damage_GetShouldGibCorpse()",
			"name_mangled": "_ZN15CMultiplayRules25Damage_GetShouldGibCorpseEv"
		},
		{
			"name": "CTFGameRules::Damage_GetShowOnHud()",
			"name_mangled": "_ZN12CTFGameRules19Damage_GetShowOnHudEv"
		},
		{
			"name": "CMultiplayRules::Damage_GetNoPhysicsForce()",
			"name_mangled": "_ZN15CMultiplayRules24Damage_GetNoPhysicsForceEv"
		},
		{
			"name": "CTFGameRules::Damage_GetShouldNotBleed()",
			"name_mangled": "_ZN12CTFGameRules24Damage_GetShouldNotBleedEv"
		},
		{
			"name": "CTFGameRules::SwitchToNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)",
			"name_mangled": "_ZN12CTFGameRules22SwitchToNextBestWeaponEP20CBaseCombatCharacterP17CBaseCombatWeapon"
		},
		{
			"name": "CMultiplayRules::GetNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)",
			"name_mangled": "_ZN15CMultiplayRules17GetNextBestWeaponEP20CBaseCombatCharacterP17CBaseCombatWeapon"
		},
		{
			"name": "CTFGameRules::ShouldCollide(int, int)",
			"name_mangled": "_ZN12CTFGameRules13ShouldCollideEii"
		},
		{
			"name": "CTFGameRules::DefaultFOV()",
			"name_mangled": "_ZN12CTFGameRules10DefaultFOVEv"
		},
		{
			"name": "CTFGameRules::GetViewVectors() const",
			"name_mangled": "_ZNK12CTFGameRules14GetViewVectorsEv"
		},
		{
			"name": "CGameRules::GetAmmoDamage(CBaseEntity*, CBaseEntity*, int)",
			"name_mangled": "_ZN10CGameRules13GetAmmoDamageEP11CBaseEntityS1_i"
		},
		{
			"name": "CGameRules::GetDamageMultiplier()",
			"name_mangled": "_ZN10CGameRules19GetDamageMultiplierEv"
		},
		{
			"name": "CMultiplayRules::IsMultiplayer()",
			"name_mangled": "_ZN15CMultiplayRules13IsMultiplayerEv"
		},
		{
			"name": "CTFGameRules::GetEncryptionKey()",
			"name_mangled": "_ZN12CTFGameRules16GetEncryptionKeyEv"
		},
		{
			"name": "CTeamplayRoundBasedRules::InRoundRestart()",
			"name_mangled": "_ZN24CTeamplayRoundBasedRules14InRoundRestartEv"
		},
		{
			"name": "CTFGameRules::AllowThirdPersonCamera()",
			"name_mangled": "_ZN12CTFGameRules22AllowThirdPersonCameraEv"
		},
		{
			"name": "CTFGameRules::ClientCommandKeyValues(edict_t*, KeyValues*)",
			"name_mangled": "_ZN12CTFGameRules22ClientCommandKeyValuesEP7edict_tP9KeyValues"
		},
		{
			"name": "CTFGameRules::IsConnectedUserInfoChangeAllowed(CBasePlayer*)",
			"name_mangled": "_ZN12CTFGameRules32IsConnectedUserInfoChangeAllowedEP11CBasePlayer"
		},
		{
			"name": "CTFGameRules::Status(void (*)(char const*, ...))",
			"name_mangled": "_ZN12CTFGameRules6StatusEPFvPKczE"
		},
		{
			"name": "CTFGameRules::GetTaggedConVarList(KeyValues*)",
			"name_mangled": "_ZN12CTFGameRules19GetTaggedConVarListEP9KeyValues"
		},
		{
			"name": "CGameRules::CheckHaptics(CBasePlayer*)",
			"name_mangled": "_ZN10CGameRules12CheckHapticsEP11CBasePlayer"
		},
		{
			"name": "CTFGameRules::LevelShutdown()",
			"name_mangled": "_ZN12CTFGameRules13LevelShutdownEv"
		},
		{
			"name": "CTFGameRules::Precache()",
			"name_mangled": "_ZN12CTFGameRules8PrecacheEv"
		},
		{
			"name": "CMultiplayRules::RefreshSkillData(bool)",
			"name_mangled": "_ZN15CMultiplayRules16RefreshSkillDataEb"
		},
		{
			"name": "CTFGameRules::Think()",
			"name_mangled": "_ZN12CTFGameRules5ThinkEv"
		},
		{
			"name": "CMultiplayRules::IsAllowedToSpawn(CBaseEntity*)",
			"name_mangled": "_ZN15CMultiplayRules16IsAllowedToSpawnEP11CBaseEntity"
		},
		{
			"name": "CGameRules::EndGameFrame()",
			"name_mangled": "_ZN10CGameRules12EndGameFrameEv"
		},
		{
			"name": "CGameRules::IsSkillLevel(int)",
			"name_mangled": "_ZN10CGameRules12IsSkillLevelEi"
		},
		{
			"name": "CGameRules::GetSkillLevel()",
			"name_mangled": "_ZN10CGameRules13GetSkillLevelEv"
		},
		{
			"name": "CGameRules::OnSkillLevelChanged(int)",
			"name_mangled": "_ZN10CGameRules19OnSkillLevelChangedEi"
		},
		{
			"name": "CGameRules::SetSkillLevel(int)",
			"name_mangled": "_ZN10CGameRules13SetSkillLevelEi"
		},
		{
			"name": "CMultiplayRules::FAllowFlashlight()",
			"name_mangled": "_ZN15CMultiplayRules16FAllowFlashlightEv"
		},
		{
			"name": "CMultiplayRules::FShouldSwitchWeapon(CBasePlayer*, CBaseCombatWeapon*)",
			"name_mangled": "_ZN15CMultiplayRules19FShouldSwitchWeaponEP11CBasePlayerP17CBaseCombatWeapon"
		},
		{
			"name": "CMultiplayRules::IsDeathmatch()",
			"name_mangled": "_ZN15CMultiplayRules12IsDeathmatchEv"
		},
		{
			"name": "CTeamplayRules::IsTeamplay()",
			"name_mangled": "_ZN14CTeamplayRules10IsTeamplayEv"
		},
		{
			"name": "CMultiplayRules::IsCoOp()",
			"name_mangled": "_ZN15CMultiplayRules6IsCoOpEv"
		},
		{
			"name": "CTFGameRules::GetGameDescription()",
			"name_mangled": "_ZN12CTFGameRules18GetGameDescriptionEv"
		},
		{
			"name": "CTFGameRules::ClientConnected(edict_t*, char const*, char const*, char*, int)",
			"name_mangled": "_ZN12CTFGameRules15ClientConnectedEP7edict_tPKcS3_Pci"
		},
		{
			"name": "CTeamplayRules::InitHUD(CBasePlayer*)",
			"name_mangled": "_ZN14CTeamplayRules7InitHUDEP11CBasePlayer"
		},
		{
			"name": "CTFGameRules::ClientDisconnected(edict_t*)",
			"name_mangled": "_ZN12CTFGameRules18ClientDisconnectedEP7edict_t"
		},
		{
			"name": "CTFGameRules::FlPlayerFallDamage(CBasePlayer*)",
			"name_mangled": "_ZN12CTFGameRules18FlPlayerFallDamageEP11CBasePlayer"
		},
		{
			"name": "CTFGameRules::FPlayerCanTakeDamage(CBasePlayer*, CBaseEntity*, CTakeDamageInfo const&)",
			"name_mangled": "_ZN12CTFGameRules20FPlayerCanTakeDamageEP11CBasePlayerP11CBaseEntityRK15CTakeDamageInfo"
		},
		{
			"name": "CTeamplayRules::ShouldAutoAim(CBasePlayer*, edict_t*)",
			"name_mangled": "_ZN14CTeamplayRules13ShouldAutoAimEP11CBasePlayerP7edict_t"
		},
		{
			"name": "CGameRules::GetAutoAimScale(CBasePlayer*)",
			"name_mangled": "_ZN10CGameRules15GetAutoAimScaleEP11CBasePlayer"
		},
		{
			"name": "CTFGameRules::GetAutoAimMode()",
			"name_mangled": "_ZN12CTFGameRules14GetAutoAimModeEv"
		},
		{
			"name": "CGameRules::ShouldUseRobustRadiusDamage(CBaseEntity*)",
			"name_mangled": "_ZN10CGameRules27ShouldUseRobustRadiusDamageEP11CBaseEntity"
		},
		{
			"name": "CTFGameRules::RadiusDamage(CTakeDamageInfo const&, Vector const&, float, int, CBaseEntity*)",
			"name_mangled": "_ZN12CTFGameRules12RadiusDamageERK15CTakeDamageInfoRK6VectorfiP11CBaseEntity"
		},
		{
			"name": "CTFGameRules::FlPlayerFallDeathDoesScreenFade(CBasePlayer*)",
			"name_mangled": "_ZN12CTFGameRules31FlPlayerFallDeathDoesScreenFadeEP11CBasePlayer"
		},
		{
			"name": "CTFGameRules::AllowDamage(CBaseEntity*, CTakeDamageInfo const&)",
			"name_mangled": "_ZN12CTFGameRules11AllowDamageEP11CBaseEntityRK15CTakeDamageInfo"
		},
		{
			"name": "CMultiplayRules::PlayerSpawn(CBasePlayer*)",
			"name_mangled": "_ZN15CMultiplayRules11PlayerSpawnEP11CBasePlayer"
		},
		{
			"name": "CMultiplayRules::PlayerThink(CBasePlayer*)",
			"name_mangled": "_ZN15CMultiplayRules11PlayerThinkEP11CBasePlayer"
		},
		{
			"name": "CMultiplayRules::FPlayerCanRespawn(CBasePlayer*)",
			"name_mangled": "_ZN15CMultiplayRules17FPlayerCanRespawnEP11CBasePlayer"
		},
		{
			"name": "CMultiplayRules::FlPlayerSpawnTime(CBasePlayer*)",
			"name_mangled": "_ZN15CMultiplayRules17FlPlayerSpawnTimeEP11CBasePlayer"
		},
		{
			"name": "CTFGameRules::GetPlayerSpawnSpot(CBasePlayer*)",
			"name_mangled": "_ZN12CTFGameRules18GetPlayerSpawnSpotEP11CBasePlayer"
		},
		{
			"name": "CGameRules::IsSpawnPointValid(CBaseEntity*, CBasePlayer*)",
			"name_mangled": "_ZN10CGameRules17IsSpawnPointValidEP11CBaseEntityP11CBasePlayer"
		},
		{
			"name": "CMultiplayRules::AllowAutoTargetCrosshair()",
			"name_mangled": "_ZN15CMultiplayRules24AllowAutoTargetCrosshairEv"
		},
		{
			"name": "CTFGameRules::ClientCommand(CBaseEntity*, CCommand const&)",
			"name_mangled": "_ZN12CTFGameRules13ClientCommandEP11CBaseEntityRK8CCommand"
		},
		{
			"name": "CTFGameRules::ClientSettingsChanged(CBasePlayer*)",
			"name_mangled": "_ZN12CTFGameRules21ClientSettingsChangedEP11CBasePlayer"
		},
		{
			"name": "CTeamplayRules::IPointsForKill(CBasePlayer*, CBasePlayer*)",
			"name_mangled": "_ZN14CTeamplayRules14IPointsForKillEP11CBasePlayerS1_"
		},
		{
			"name": "CTFGameRules::PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)",
			"name_mangled": "_ZN12CTFGameRules12PlayerKilledEP11CBasePlayerRK15CTakeDamageInfo"
		},
		{
			"name": "CTFGameRules::DeathNotice(CBasePlayer*, CTakeDamageInfo const&)",
			"name_mangled": "_ZN12CTFGameRules11DeathNoticeEP11CBasePlayerRK15CTakeDamageInfo"
		},
		{
			"name": "CGameRules::GetDamageCustomString(CTakeDamageInfo const&)",
			"name_mangled": "_ZN10CGameRules21GetDamageCustomStringERK15CTakeDamageInfo"
		},
		{
			"name": "CGameRules::AdjustPlayerDamageInflicted(float)",
			"name_mangled": "_ZN10CGameRules27AdjustPlayerDamageInflictedEf"
		},
		{
			"name": "CGameRules::AdjustPlayerDamageTaken(CTakeDamageInfo*)",
			"name_mangled": "_ZN10CGameRules23AdjustPlayerDamageTakenEP15CTakeDamageInfo"
		},
		{
			"name": "CMultiplayRules::CanHavePlayerItem(CBasePlayer*, CBaseCombatWeapon*)",
			"name_mangled": "_ZN15CMultiplayRules17CanHavePlayerItemEP11CBasePlayerP17CBaseCombatWeapon"
		},
		{
			"name": "CMultiplayRules::WeaponShouldRespawn(CBaseCombatWeapon*)",
			"name_mangled": "_ZN15CMultiplayRules19WeaponShouldRespawnEP17CBaseCombatWeapon"
		},
		{
			"name": "CMultiplayRules::FlWeaponRespawnTime(CBaseCombatWeapon*)",
			"name_mangled": "_ZN15CMultiplayRules19FlWeaponRespawnTimeEP17CBaseCombatWeapon"
		},
		{
			"name": "CMultiplayRules::FlWeaponTryRespawn(CBaseCombatWeapon*)",
			"name_mangled": "_ZN15CMultiplayRules18FlWeaponTryRespawnEP17CBaseCombatWeapon"
		},
		{
			"name": "CMultiplayRules::VecWeaponRespawnSpot(CBaseCombatWeapon*)",
			"name_mangled": "_ZN15CMultiplayRules20VecWeaponRespawnSpotEP17CBaseCombatWeapon"
		},
		{
			"name": "CMultiplayRules::CanHaveItem(CBasePlayer*, CItem*)",
			"name_mangled": "_ZN15CMultiplayRules11CanHaveItemEP11CBasePlayerP5CItem"
		},
		{
			"name": "CMultiplayRules::PlayerGotItem(CBasePlayer*, CItem*)",
			"name_mangled": "_ZN15CMultiplayRules13PlayerGotItemEP11CBasePlayerP5CItem"
		},
		{
			"name": "CTFGameRules::ItemShouldRespawn(CItem*)",
			"name_mangled": "_ZN12CTFGameRules17ItemShouldRespawnEP5CItem"
		},
		{
			"name": "CTFGameRules::FlItemRespawnTime(CItem*)",
			"name_mangled": "_ZN12CTFGameRules17FlItemRespawnTimeEP5CItem"
		},
		{
			"name": "CTFGameRules::VecItemRespawnSpot(CItem*)",
			"name_mangled": "_ZN12CTFGameRules18VecItemRespawnSpotEP5CItem"
		},
		{
			"name": "CTFGameRules::VecItemRespawnAngles(CItem*)",
			"name_mangled": "_ZN12CTFGameRules20VecItemRespawnAnglesEP5CItem"
		},
		{
			"name": "CTFGameRules::CanHaveAmmo(CBaseCombatCharacter*, int)",
			"name_mangled": "_ZN12CTFGameRules11CanHaveAmmoEP20CBaseCombatCharacteri"
		},
		{
			"name": "CGameRules::CanHaveAmmo(CBaseCombatCharacter*, char const*)",
			"name_mangled": "_ZN10CGameRules11CanHaveAmmoEP20CBaseCombatCharacterPKc"
		},
		{
			"name": "CMultiplayRules::PlayerGotAmmo(CBaseCombatCharacter*, char*, int)",
			"name_mangled": "_ZN15CMultiplayRules13PlayerGotAmmoEP20CBaseCombatCharacterPci"
		},
		{
			"name": "CGameRules::GetAmmoQuantityScale(int)",
			"name_mangled": "_ZN10CGameRules20GetAmmoQuantityScaleEi"
		},
		{
			"name": "CGameRules::InitDefaultAIRelationships()",
			"name_mangled": "_ZN10CGameRules26InitDefaultAIRelationshipsEv"
		},
		{
			"name": "CGameRules::AIClassText(int)",
			"name_mangled": "_ZN10CGameRules11AIClassTextEi"
		},
		{
			"name": "CMultiplayRules::FlHealthChargerRechargeTime()",
			"name_mangled": "_ZN15CMultiplayRules27FlHealthChargerRechargeTimeEv"
		},
		{
			"name": "CMultiplayRules::FlHEVChargerRechargeTime()",
			"name_mangled": "_ZN15CMultiplayRules24FlHEVChargerRechargeTimeEv"
		},
		{
			"name": "CMultiplayRules::DeadPlayerWeapons(CBasePlayer*)",
			"name_mangled": "_ZN15CMultiplayRules17DeadPlayerWeaponsEP11CBasePlayer"
		},
		{
			"name": "CMultiplayRules::DeadPlayerAmmo(CBasePlayer*)",
			"name_mangled": "_ZN15CMultiplayRules14DeadPlayerAmmoEP11CBasePlayer"
		},
		{
			"name": "CTeamplayRules::GetTeamID(CBaseEntity*)",
			"name_mangled": "_ZN14CTeamplayRules9GetTeamIDEP11CBaseEntity"
		},
		{
			"name": "CTeamplayRules::PlayerRelationship(CBaseEntity*, CBaseEntity*)",
			"name_mangled": "_ZN14CTeamplayRules18PlayerRelationshipEP11CBaseEntityS1_"
		},
		{
			"name": "CTeamplayRules::PlayerCanHearChat(CBasePlayer*, CBasePlayer*)",
			"name_mangled": "_ZN14CTeamplayRules17PlayerCanHearChatEP11CBasePlayerS1_"
		},
		{
			"name": "CTeamplayRoundBasedRules::CheckChatText(CBasePlayer*, char*)",
			"name_mangled": "_ZN24CTeamplayRoundBasedRules13CheckChatTextEP11CBasePlayerPc"
		},
		{
			"name": "CTeamplayRules::GetTeamIndex(char const*)",
			"name_mangled": "_ZN14CTeamplayRules12GetTeamIndexEPKc"
		},
		{
			"name": "CTeamplayRules::GetIndexedTeamName(int)",
			"name_mangled": "_ZN14CTeamplayRules18GetIndexedTeamNameEi"
		},
		{
			"name": "CTeamplayRules::IsValidTeam(char const*)",
			"name_mangled": "_ZN14CTeamplayRules11IsValidTeamEPKc"
		},
		{
			"name": "CTeamplayRules::ChangePlayerTeam(CBasePlayer*, char const*, bool, bool)",
			"name_mangled": "_ZN14CTeamplayRules16ChangePlayerTeamEP11CBasePlayerPKcbb"
		},
		{
			"name": "CTeamplayRules::SetDefaultPlayerTeam(CBasePlayer*)",
			"name_mangled": "_ZN14CTeamplayRules20SetDefaultPlayerTeamEP11CBasePlayer"
		},
		{
			"name": "CGameRules::UpdateClientData(CBasePlayer*)",
			"name_mangled": "_ZN10CGameRules16UpdateClientDataEP11CBasePlayer"
		},
		{
			"name": "CMultiplayRules::PlayTextureSounds()",
			"name_mangled": "_ZN15CMultiplayRules17PlayTextureSoundsEv"
		},
		{
			"name": "CMultiplayRules::PlayFootstepSounds(CBasePlayer*)",
			"name_mangled": "_ZN15CMultiplayRules18PlayFootstepSoundsEP11CBasePlayer"
		},
		{
			"name": "CMultiplayRules::FAllowNPCs()",
			"name_mangled": "_ZN15CMultiplayRules10FAllowNPCsEv"
		},
		{
			"name": "CMultiplayRules::EndMultiplayerGame()",
			"name_mangled": "_ZN15CMultiplayRules18EndMultiplayerGameEv"
		},
		{
			"name": "CGameRules::WeaponTraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, CGameTrace*)",
			"name_mangled": "_ZN10CGameRules17WeaponTraceEntityEP11CBaseEntityRK6VectorS4_jP10CGameTrace"
		},
		{
			"name": "CTFGameRules::CreateStandardEntities()",
			"name_mangled": "_ZN12CTFGameRules22CreateStandardEntitiesEv"
		},
		{
			"name": "CGameRules::GetChatPrefix(bool, CBasePlayer*)",
			"name_mangled": "_ZN10CGameRules13GetChatPrefixEbP11CBasePlayer"
		},
		{
			"name": "CGameRules::GetChatLocation(bool, CBasePlayer*)",
			"name_mangled": "_ZN10CGameRules15GetChatLocationEbP11CBasePlayer"
		},
		{
			"name": "CTFGameRules::GetChatFormat(bool, CBasePlayer*)",
			"name_mangled": "_ZN12CTFGameRules13GetChatFormatEbP11CBasePlayer"
		},
		{
			"name": "CGameRules::ShouldBurningPropsEmitLight()",
			"name_mangled": "_ZN10CGameRules27ShouldBurningPropsEmitLightEv"
		},
		{
			"name": "CGameRules::CanEntityBeUsePushed(CBaseEntity*)",
			"name_mangled": "_ZN10CGameRules20CanEntityBeUsePushedEP11CBaseEntity"
		},
		{
			"name": "CGameRules::CreateCustomNetworkStringTables()",
			"name_mangled": "_ZN10CGameRules31CreateCustomNetworkStringTablesEv"
		},
		{
			"name": "CGameRules::MarkAchievement(IRecipientFilter&, char const*)",
			"name_mangled": "_ZN10CGameRules15MarkAchievementER16IRecipientFilterPKc"
		},
		{
			"name": "CMultiplayRules::ResetMapCycleTimeStamp()",
			"name_mangled": "_ZN15CMultiplayRules22ResetMapCycleTimeStampEv"
		},
		{
			"name": "CTFGameRules::OnNavMeshLoad()",
			"name_mangled": "_ZN12CTFGameRules13OnNavMeshLoadEv"
		},
		{
			"name": "CTFGameRules::TacticalMissionManagerFactory()",
			"name_mangled": "_ZN12CTFGameRules29TacticalMissionManagerFactoryEv"
		},
		{
			"name": "CTFGameRules::ProcessVerboseLogOutput()",
			"name_mangled": "_ZN12CTFGameRules23ProcessVerboseLogOutputEv"
		},
		{
			"name": "CTFGameRules::GetGameTypeName()",
			"name_mangled": "_ZN12CTFGameRules15GetGameTypeNameEv"
		},
		{
			"name": "CTFGameRules::GetGameType()",
			"name_mangled": "_ZN12CTFGameRules11GetGameTypeEv"
		},
		{
			"name": "CTFGameRules::ShouldDrawHeadLabels()",
			"name_mangled": "_ZN12CTFGameRules20ShouldDrawHeadLabelsEv"
		},
		{
			"name": "CTFGameRules::ClientSpawned(edict_t*)",
			"name_mangled": "_ZN12CTFGameRules13ClientSpawnedEP7edict_t"
		},
		{
			"name": "CTFGameRules::OnFileReceived(char const*, unsigned int)",
			"name_mangled": "_ZN12CTFGameRules14OnFileReceivedEPKcj"
		},
		{
			"name": "CTFGameRules::IsHolidayActive(int) const",
			"name_mangled": "_ZNK12CTFGameRules15IsHolidayActiveEi"
		},
		{
			"name": "CMultiplayRules::IsManualMapChangeOkay(char const**)",
			"name_mangled": "_ZN15CMultiplayRules21IsManualMapChangeOkayEPPKc"
		},
		{
			"name": "CTFGameRules::RegisterScriptFunctions()",
			"name_mangled": "_ZN12CTFGameRules23RegisterScriptFunctionsEv"
		},
		{
			"name": "CGameRules::SaveConvar(ConVarRef const&)",
			"name_mangled": "_ZN10CGameRules10SaveConvarERK9ConVarRef"
		},
		{
			"name": "CGameRules::RevertSavedConvars()",
			"name_mangled": "_ZN10CGameRules18RevertSavedConvarsEv"
		},
		{
			"name": "CGameRules::HasSavedConvar(string_t)",
			"name_mangled": "_ZN10CGameRules14HasSavedConvarE8string_t"
		},
		{
			"name": "CTFGameRules::GetDeathScorer(CBaseEntity*, CBaseEntity*, CBaseEntity*)",
			"name_mangled": "_ZN12CTFGameRules14GetDeathScorerEP11CBaseEntityS1_S1_"
		},
		{
			"name": "CTFGameRules::VoiceCommand(CBaseMultiplayerPlayer*, int, int)",
			"name_mangled": "_ZN12CTFGameRules12VoiceCommandEP22CBaseMultiplayerPlayerii"
		},
		{
			"name": "CTeamplayRoundBasedRules::HandleTimeLimitChange()",
			"name_mangled": "_ZN24CTeamplayRoundBasedRules21HandleTimeLimitChangeEv"
		},
		{
			"name": "CTFGameRules::InitCustomResponseRulesDicts()",
			"name_mangled": "_ZN12CTFGameRules28InitCustomResponseRulesDictsEv"
		},
		{
			"name": "CTFGameRules::ShutdownCustomResponseRulesDicts()",
			"name_mangled": "_ZN12CTFGameRules32ShutdownCustomResponseRulesDictsEv"
		},
		{
			"name": "CMultiplayRules::GetNextLevelName(char*, int, bool)",
			"name_mangled": "_ZN15CMultiplayRules16GetNextLevelNameEPcib"
		},
		{
			"name": "CTFGameRules::LoadMapCycleFileIntoVector(char const*, CUtlVector<char*, CUtlMemory<char*, int>>&)",
			"name_mangled": "_ZN12CTFGameRules26LoadMapCycleFileIntoVectorEPKcR10CUtlVectorIPc10CUtlMemoryIS3_iEE"
		},
		{
			"name": "CTFGameRules::UseSuicidePenalty()",
			"name_mangled": "_ZN12CTFGameRules17UseSuicidePenaltyEv"
		},
		{
			"name": "CTeamplayRoundBasedRules::GetLastMajorEventTime()",
			"name_mangled": "_ZN24CTeamplayRoundBasedRules21GetLastMajorEventTimeEv"
		},
		{
			"name": "CMultiplayRules::ChangeLevel()",
			"name_mangled": "_ZN15CMultiplayRules11ChangeLevelEv"
		},
		{
			"name": "CTFGameRules::GoToIntermission()",
			"name_mangled": "_ZN12CTFGameRules16GoToIntermissionEv"
		},
		{
			"name": "CTFGameRules::LoadMapCycleFile()",
			"name_mangled": "_ZN12CTFGameRules16LoadMapCycleFileEv"
		},
		{
			"name": "CTFGameRules::GetCaptureValueForPlayer(CBasePlayer*)",
			"name_mangled": "_ZN12CTFGameRules24GetCaptureValueForPlayerEP11CBasePlayer"
		},
		{
			"name": "CTFGameRules::TeamMayCapturePoint(int, int)",
			"name_mangled": "_ZN12CTFGameRules19TeamMayCapturePointEii"
		},
		{
			"name": "CTFGameRules::PlayerMayCapturePoint(CBasePlayer*, int, char*, int)",
			"name_mangled": "_ZN12CTFGameRules21PlayerMayCapturePointEP11CBasePlayeriPci"
		},
		{
			"name": "CTFGameRules::PlayerMayBlockPoint(CBasePlayer*, int, char*, int)",
			"name_mangled": "_ZN12CTFGameRules19PlayerMayBlockPointEP11CBasePlayeriPci"
		},
		{
			"name": "CTFGameRules::PointsMayBeCaptured()",
			"name_mangled": "_ZN12CTFGameRules19PointsMayBeCapturedEv"
		},
		{
			"name": "CTeamplayRoundBasedRules::SetLastCapPointChanged(int)",
			"name_mangled": "_ZN24CTeamplayRoundBasedRules22SetLastCapPointChangedEi"
		},
		{
			"name": "CTFGameRules::TimerMayExpire()",
			"name_mangled": "_ZN12CTFGameRules14TimerMayExpireEv"
		},
		{
			"name": "CTFGameRules::SetWinningTeam(int, int, bool, bool, bool, bool)",
			"name_mangled": "_ZN12CTFGameRules14SetWinningTeamEiibbbb"
		},
		{
			"name": "CTFGameRules::SetStalemate(int, bool, bool)",
			"name_mangled": "_ZN12CTFGameRules12SetStalemateEibb"
		},
		{
			"name": "CTeamplayRules::SetSwitchTeams(bool)",
			"name_mangled": "_ZN14CTeamplayRules14SetSwitchTeamsEb"
		},
		{
			"name": "CTFGameRules::ShouldSwitchTeams()",
			"name_mangled": "_ZN12CTFGameRules17ShouldSwitchTeamsEv"
		},
		{
			"name": "CTFGameRules::HandleSwitchTeams()",
			"name_mangled": "_ZN12CTFGameRules17HandleSwitchTeamsEv"
		},
		{
			"name": "CTeamplayRules::SetScrambleTeams(bool)",
			"name_mangled": "_ZN14CTeamplayRules16SetScrambleTeamsEb"
		},
		{
			"name": "CTFGameRules::ShouldScrambleTeams()",
			"name_mangled": "_ZN12CTFGameRules19ShouldScrambleTeamsEv"
		},
		{
			"name": "CTFGameRules::HandleScrambleTeams()",
			"name_mangled": "_ZN12CTFGameRules19HandleScrambleTeamsEv"
		},
		{
			"name": "CTFGameRules::PointsMayAlwaysBeBlocked()",
			"name_mangled": "_ZN12CTFGameRules24PointsMayAlwaysBeBlockedEv"
		},
		{
			"name": "CTeamplayRoundBasedRules::GetNextRespawnWave(int, CBasePlayer*)",
			"name_mangled": "_ZN24CTeamplayRoundBasedRules18GetNextRespawnWaveEiP11CBasePlayer"
		},
		{
			"name": "CTFGameRules::HasPassedMinRespawnTime(CBasePlayer*)",
			"name_mangled": "_ZN12CTFGameRules23HasPassedMinRespawnTimeEP11CBasePlayer"
		},
		{
			"name": "CTFGameRules::GetRespawnTimeScalar(int)",
			"name_mangled": "_ZN12CTFGameRules20GetRespawnTimeScalarEi"
		},
		{
			"name": "CTFGameRules::GetRespawnWaveMaxLength(int, bool)",
			"name_mangled": "_ZN12CTFGameRules23GetRespawnWaveMaxLengthEib"
		},
		{
			"name": "CTFGameRules::ShouldRespawnQuickly(CBasePlayer*)",
			"name_mangled": "_ZN12CTFGameRules20ShouldRespawnQuicklyEP11CBasePlayer"
		},
		{
			"name": "CTeamplayRoundBasedRules::GetWinningTeam()",
			"name_mangled": "_ZN24CTeamplayRoundBasedRules14GetWinningTeamEv"
		},
		{
			"name": "CTFGameRules::BalanceTeams(bool)",
			"name_mangled": "_ZN12CTFGameRules12BalanceTeamsEb"
		},
		{
			"name": "CTFGameRules::ShouldBalanceTeams()",
			"name_mangled": "_ZN12CTFGameRules18ShouldBalanceTeamsEv"
		},
		{
			"name": "CTFGameRules::StopWatchModeThink()",
			"name_mangled": "_ZN12CTFGameRules18StopWatchModeThinkEv"
		},
		{
			"name": "CTFGameRules::HandleTeamScoreModify(int, int)",
			"name_mangled": "_ZN12CTFGameRules21HandleTeamScoreModifyEii"
		},
		{
			"name": "CTFGameRules::IsInArenaMode() const",
			"name_mangled": "_ZNK12CTFGameRules13IsInArenaModeEv"
		},
		{
			"name": "CTFGameRules::IsInKothMode() const",
			"name_mangled": "_ZNK12CTFGameRules12IsInKothModeEv"
		},
		{
			"name": "CTFGameRules::IsInTraining()",
			"name_mangled": "_ZN12CTFGameRules12IsInTrainingEv"
		},
		{
			"name": "CTFGameRules::IsInItemTestingMode()",
			"name_mangled": "_ZN12CTFGameRules19IsInItemTestingModeEv"
		},
		{
			"name": "CTFGameRules::GetBonusRoundTime(bool)",
			"name_mangled": "_ZN12CTFGameRules17GetBonusRoundTimeEb"
		},
		{
			"name": "CTeamplayRoundBasedRules::GetPostMatchPeriod()",
			"name_mangled": "_ZN24CTeamplayRoundBasedRules18GetPostMatchPeriodEv"
		},
		{
			"name": "CTFGameRules::FireGameEvent(IGameEvent*)",
			"name_mangled": "_ZN12CTFGameRules13FireGameEventEP10IGameEvent"
		},
		{
			"name": "CTFGameRules::RoundCleanupShouldIgnore(CBaseEntity*)",
			"name_mangled": "_ZN12CTFGameRules24RoundCleanupShouldIgnoreEP11CBaseEntity"
		},
		{
			"name": "CTFGameRules::ShouldCreateEntity(char const*)",
			"name_mangled": "_ZN12CTFGameRules18ShouldCreateEntityEPKc"
		},
		{
			"name": "CTFGameRules::SetupOnRoundStart()",
			"name_mangled": "_ZN12CTFGameRules17SetupOnRoundStartEv"
		},
		{
			"name": "CTFGameRules::SetupOnRoundRunning()",
			"name_mangled": "_ZN12CTFGameRules19SetupOnRoundRunningEv"
		},
		{
			"name": "CTFGameRules::PreviousRoundEnd()",
			"name_mangled": "_ZN12CTFGameRules16PreviousRoundEndEv"
		},
		{
			"name": "CTFGameRules::SendTeamScoresEvent()",
			"name_mangled": "_ZN12CTFGameRules19SendTeamScoresEventEv"
		},
		{
			"name": "CTFGameRules::SendWinPanelInfo(bool)",
			"name_mangled": "_ZN12CTFGameRules16SendWinPanelInfoEb"
		},
		{
			"name": "CTFGameRules::SetupSpawnPointsForRound()",
			"name_mangled": "_ZN12CTFGameRules24SetupSpawnPointsForRoundEv"
		},
		{
			"name": "CTFGameRules::SetupOnStalemateStart()",
			"name_mangled": "_ZN12CTFGameRules21SetupOnStalemateStartEv"
		},
		{
			"name": "CTFGameRules::SetupOnStalemateEnd()",
			"name_mangled": "_ZN12CTFGameRules19SetupOnStalemateEndEv"
		},
		{
			"name": "CTFGameRules::SetSetup(bool)",
			"name_mangled": "_ZN12CTFGameRules8SetSetupEb"
		},
		{
			"name": "CTFGameRules::ShouldGoToBonusRound()",
			"name_mangled": "_ZN12CTFGameRules20ShouldGoToBonusRoundEv"
		},
		{
			"name": "CTFGameRules::SetupOnBonusStart()",
			"name_mangled": "_ZN12CTFGameRules17SetupOnBonusStartEv"
		},
		{
			"name": "CTFGameRules::SetupOnBonusEnd()",
			"name_mangled": "_ZN12CTFGameRules15SetupOnBonusEndEv"
		},
		{
			"name": "CTFGameRules::BonusStateThink()",
			"name_mangled": "_ZN12CTFGameRules15BonusStateThinkEv"
		},
		{
			"name": "CTFGameRules::BetweenRounds_Start()",
			"name_mangled": "_ZN12CTFGameRules19BetweenRounds_StartEv"
		},
		{
			"name": "CTFGameRules::BetweenRounds_End()",
			"name_mangled": "_ZN12CTFGameRules17BetweenRounds_EndEv"
		},
		{
			"name": "CTFGameRules::BetweenRounds_Think()",
			"name_mangled": "_ZN12CTFGameRules19BetweenRounds_ThinkEv"
		},
		{
			"name": "CTFGameRules::PreRound_Start()",
			"name_mangled": "_ZN12CTFGameRules14PreRound_StartEv"
		},
		{
			"name": "CTFGameRules::PreRound_End()",
			"name_mangled": "_ZN12CTFGameRules12PreRound_EndEv"
		},
		{
			"name": "CTFGameRules::ShouldScorePerRound()",
			"name_mangled": "_ZN12CTFGameRules19ShouldScorePerRoundEv"
		},
		{
			"name": "CTFGameRules::IsValveMap()",
			"name_mangled": "_ZN12CTFGameRules10IsValveMapEv"
		},
		{
			"name": "CTFGameRules::RestartTournament()",
			"name_mangled": "_ZN12CTFGameRules17RestartTournamentEv"
		},
		{
			"name": "CTFGameRules::TournamentModeCanEndWithTimelimit()",
			"name_mangled": "_ZN12CTFGameRules33TournamentModeCanEndWithTimelimitEv"
		},
		{
			"name": "CTFGameRules::RespawnPlayers(bool, bool, int)",
			"name_mangled": "_ZN12CTFGameRules14RespawnPlayersEbbi"
		},
		{
			"name": "CTFGameRules::SetRoundOverlayDetails()",
			"name_mangled": "_ZN12CTFGameRules22SetRoundOverlayDetailsEv"
		},
		{
			"name": "CTFGameRules::FillOutTeamplayRoundWinEvent(IGameEvent*)",
			"name_mangled": "_ZN12CTFGameRules28FillOutTeamplayRoundWinEventEP10IGameEvent"
		},
		{
			"name": "CTFGameRules::PlayTrainCaptureAlert(CTeamControlPoint*, bool)",
			"name_mangled": "_ZN12CTFGameRules21PlayTrainCaptureAlertEP17CTeamControlPointb"
		},
		{
			"name": "CTFGameRules::PlaySpecialCapSounds(int, CTeamControlPoint*)",
			"name_mangled": "_ZN12CTFGameRules20PlaySpecialCapSoundsEiP17CTeamControlPoint"
		},
		{
			"name": "CTFGameRules::BroadcastSound(int, char const*, int, CBasePlayer*)",
			"name_mangled": "_ZN12CTFGameRules14BroadcastSoundEiPKciP11CBasePlayer"
		},
		{
			"name": "CTFGameRules::RecalculateControlPointState()",
			"name_mangled": "_ZN12CTFGameRules28RecalculateControlPointStateEv"
		},
		{
			"name": "CTFGameRules::ShouldSkipAutoScramble()",
			"name_mangled": "_ZN12CTFGameRules22ShouldSkipAutoScrambleEv"
		},
		{
			"name": "CTFGameRules::ShouldWaitToStartRecording()",
			"name_mangled": "_ZN12CTFGameRules26ShouldWaitToStartRecordingEv"
		},
		{
			"name": "CTFGameRules::StopWatchShouldBeTimedWin()",
			"name_mangled": "_ZN12CTFGameRules25StopWatchShouldBeTimedWinEv"
		},
		{
			"name": "CTeamplayRoundBasedRules::AllowWaitingForPlayers()",
			"name_mangled": "_ZN24CTeamplayRoundBasedRules22AllowWaitingForPlayersEv"
		},
		{
			"name": "CTFGameRules::CheckWinLimit(bool, int)",
			"name_mangled": "_ZN12CTFGameRules13CheckWinLimitEbi"
		},
		{
			"name": "CTFGameRules::CanChangelevelBecauseOfTimeLimit()",
			"name_mangled": "_ZN12CTFGameRules32CanChangelevelBecauseOfTimeLimitEv"
		},
		{
			"name": "CTFGameRules::CanGoToStalemate()",
			"name_mangled": "_ZN12CTFGameRules16CanGoToStalemateEv"
		},
		{
			"name": "CTFGameRules::InitTeams()",
			"name_mangled": "_ZN12CTFGameRules9InitTeamsEv"
		},
		{
			"name": "CTFGameRules::BHavePlayers()",
			"name_mangled": "_ZN12CTFGameRules12BHavePlayersEv"
		},
		{
			"name": "CTFGameRules::RoundRespawn()",
			"name_mangled": "_ZN12CTFGameRules12RoundRespawnEv"
		},
		{
			"name": "CTFGameRules::CleanUpMap()",
			"name_mangled": "_ZN12CTFGameRules10CleanUpMapEv"
		},
		{
			"name": "CTFGameRules::CheckRespawnWaves()",
			"name_mangled": "_ZN12CTFGameRules17CheckRespawnWavesEv"
		},
		{
			"name": "CTFGameRules::PlayWinSong(int)",
			"name_mangled": "_ZN12CTFGameRules11PlayWinSongEi"
		},
		{
			"name": "CTFGameRules::GetStalemateSong(int)",
			"name_mangled": "_ZN12CTFGameRules16GetStalemateSongEi"
		},
		{
			"name": "CTFGameRules::WinSongName(int)",
			"name_mangled": "_ZN12CTFGameRules11WinSongNameEi"
		},
		{
			"name": "CTFGameRules::LoseSongName(int)",
			"name_mangled": "_ZN12CTFGameRules12LoseSongNameEi"
		},
		{
			"name": "CTFGameRules::RespawnTeam(int)",
			"name_mangled": "_ZN12CTFGameRules11RespawnTeamEi"
		},
		{
			"name": "CTFGameRules::RestoreActiveTimer()",
			"name_mangled": "_ZN12CTFGameRules18RestoreActiveTimerEv"
		},
		{
			"name": "CTFGameRules::InternalHandleTeamWin(int)",
			"name_mangled": "_ZN12CTFGameRules21InternalHandleTeamWinEi"
		},
		{
			"name": "CTeamplayRoundBasedRules::HaveCheatsBeenEnabledDuringLevel()",
			"name_mangled": "_ZN24CTeamplayRoundBasedRules32HaveCheatsBeenEnabledDuringLevelEv"
		},
		{
			"name": "CTFGameRules::ShowRoundInfoPanel(CTFPlayer*)",
			"name_mangled": "_ZN12CTFGameRules18ShowRoundInfoPanelEP9CTFPlayer"
		},
		{
			"name": "CTFGameRules::Activate()",
			"name_mangled": "_ZN12CTFGameRules8ActivateEv"
		},
		{
			"name": "CTFGameRules::CollectCapturePoints(CBasePlayer*, CUtlVector<CTeamControlPoint*, CUtlMemory<CTeamControlPoint*, int>>*) const",
			"name_mangled": "_ZNK12CTFGameRules20CollectCapturePointsEP11CBasePlayerP10CUtlVectorIP17CTeamControlPoint10CUtlMemoryIS4_iEE"
		},
		{
			"name": "CTFGameRules::CollectDefendPoints(CBasePlayer*, CUtlVector<CTeamControlPoint*, CUtlMemory<CTeamControlPoint*, int>>*) const",
			"name_mangled": "_ZNK12CTFGameRules19CollectDefendPointsEP11CBasePlayerP10CUtlVectorIP17CTeamControlPoint10CUtlMemoryIS4_iEE"
		},
		{
			"name": "CTFGameRules::FlagsMayBeCapped()",
			"name_mangled": "_ZN12CTFGameRules16FlagsMayBeCappedEv"
		},
		{
			"name": "CTFGameRules::PlayerKilledCheckAchievements(CTFPlayer*, CTFPlayer*)",
			"name_mangled": "_ZN12CTFGameRules29PlayerKilledCheckAchievementsEP9CTFPlayerS1_"
		},
		{
			"name": "CTFGameRules::DeathNotice(CBasePlayer*, CTakeDamageInfo const&, char const*)",
			"name_mangled": "_ZN12CTFGameRules11DeathNoticeEP11CBasePlayerRK15CTakeDamageInfoPKc"
		}
	]
}