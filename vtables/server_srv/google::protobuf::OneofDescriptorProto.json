{
	"classname": "google::protobuf::OneofDescriptorProto",
	"classname_mangled": "_ZTVN6google8protobuf20OneofDescriptorProtoE",
	"members": [
		{
			"name": "CryptoPP::BufferedTransformation::Peek(unsigned char*, unsigned int) const",
			"name_mangled": "_ZNK8CryptoPP22BufferedTransformation4PeekEPhj"
		},
		{
			"name": "CryptoPP::BufferedTransformation::Skip(unsigned long long)",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation4SkipEy"
		},
		{
			"name": "CryptoPP::BufferedTransformation::TotalBytesRetrievable() const",
			"name_mangled": "_ZNK8CryptoPP22BufferedTransformation21TotalBytesRetrievableEv"
		},
		{
			"name": "CryptoPP::BufferedTransformation::NumberOfMessages() const",
			"name_mangled": "_ZNK8CryptoPP22BufferedTransformation16NumberOfMessagesEv"
		},
		{
			"name": "CryptoPP::BufferedTransformation::AnyMessages() const",
			"name_mangled": "_ZNK8CryptoPP22BufferedTransformation11AnyMessagesEv"
		},
		{
			"name": "CryptoPP::BufferedTransformation::GetNextMessage()",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation14GetNextMessageEv"
		},
		{
			"name": "CryptoPP::BufferedTransformation::SkipMessages(unsigned int)",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation12SkipMessagesEj"
		},
		{
			"name": "CryptoPP::BufferedTransformation::SkipAll()",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation7SkipAllEv"
		},
		{
			"name": "CryptoPP::BufferedTransformation::GetNextMessageSeries()",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation20GetNextMessageSeriesEv"
		},
		{
			"name": "CryptoPP::BufferedTransformation::NumberOfMessagesInThisSeries() const",
			"name_mangled": "_ZNK8CryptoPP22BufferedTransformation28NumberOfMessagesInThisSeriesEv"
		},
		{
			"name": "CryptoPP::BufferedTransformation::NumberOfMessageSeries() const",
			"name_mangled": "_ZNK8CryptoPP22BufferedTransformation21NumberOfMessageSeriesEv"
		},
		{
			"name": "CryptoPP::Sink::TransferTo2(CryptoPP::BufferedTransformation&, unsigned long long&, std::string const&, bool)",
			"name_mangled": "_ZN8CryptoPP4Sink11TransferTo2ERNS_22BufferedTransformationERyRKSsb"
		},
		{
			"name": "CryptoPP::Sink::CopyRangeTo2(CryptoPP::BufferedTransformation&, unsigned long long&, unsigned long long, std::string const&, bool) const",
			"name_mangled": "_ZNK8CryptoPP4Sink12CopyRangeTo2ERNS_22BufferedTransformationERyyRKSsb"
		},
		{
			"name": "CryptoPP::BufferedTransformation::ChannelCreatePutSpace(std::string const&, unsigned int&)",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation21ChannelCreatePutSpaceERKSsRj"
		},
		{
			"name": "CryptoPP::BufferedTransformation::ChannelPut2(std::string const&, unsigned char const*, unsigned int, int, bool)",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation11ChannelPut2ERKSsPKhjib"
		},
		{
			"name": "CryptoPP::BufferedTransformation::ChannelPutModifiable2(std::string const&, unsigned char*, unsigned int, int, bool)",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation21ChannelPutModifiable2ERKSsPhjib"
		},
		{
			"name": "CryptoPP::BufferedTransformation::ChannelFlush(std::string const&, bool, int, bool)",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation12ChannelFlushERKSsbib"
		},
		{
			"name": "CryptoPP::BufferedTransformation::ChannelMessageSeriesEnd(std::string const&, int, bool)",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation23ChannelMessageSeriesEndERKSsib"
		},
		{
			"name": "CryptoPP::BufferedTransformation::SetRetrievalChannel(std::string const&)",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation19SetRetrievalChannelERKSs"
		},
		{
			"name": "CryptoPP::BufferedTransformation::Attachable()",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation10AttachableEv"
		},
		{
			"name": "CryptoPP::BufferedTransformation::AttachedTransformation()",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation22AttachedTransformationEv"
		},
		{
			"name": "CryptoPP::BufferedTransformation::AttachedTransformation() const",
			"name_mangled": "_ZNK8CryptoPP22BufferedTransformation22AttachedTransformationEv"
		},
		{
			"name": "CryptoPP::BufferedTransformation::Detach(CryptoPP::BufferedTransformation*)",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation6DetachEPS0_"
		},
		{
			"name": "CryptoPP::BufferedTransformation::Attach(CryptoPP::BufferedTransformation*)",
			"name_mangled": "_ZN8CryptoPP22BufferedTransformation6AttachEPS0_"
		}
	]
}